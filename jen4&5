9:30 from jenkins we ar able to automate the end to end task
11:00 automation helps me to deploy in multiple env(so its possibl eto hv multiple jobs 
##11:40 except the both coy schedule meeting at the same time, dats wher the issue can be

#4:43 git pluggins has to be installed in jenkins server for git jenkins integration
our scm is github & github is used for versioning, so we use git to track the diff version, the diff version of the app is tracked in git 
the code is stored& mannaged in git
github is our SCM. (github=SCM) versioning=git)

8:08 frm jenkins we AR ABLE to ceate job,wher everytin is automatedfrm our jenkins servers. we can achieve ful automation frm our jenkins server
##8:44 hw rto b able to mange related task, the simple response to hv a gud understanding of hw jenkins wrks & hw hw i hv been able to use jenkins in my env to achieve 
automation as far as those particular technology &dept ar concerned.

we can shedule when deployment is taking place by using build triggers
#10:26 we automate using build triggers in jenkins
we can schedule/programe our jenkins job to do a build whenever developers commit a code/diff versions, developers nid git for versioning

##16:05 TYPES OF JENKINS PROJECTS:
FREE Style project 
software builds
application deployent
server monitoring/application performance monitoring=APM

WE AR SUPORTING a tesla-webapp or amazon webapp etc, developed in java
for us to be able to wrk on dis project, the first tin we nid is jenkins and for it to run we ar using java 11-open jdk, jenkins need java to run, and der ar some of 
the dependencies.

19:00 on our pipeline we to do abuild
jenkins nid to clone the code, so jenkins nid the git pluggin/software as well as maven for softwarebuild,sonaqube,nexus for artifactory & we deploy in
tomcat(application/deployment server
we ar exposing the software to client using nginx webserver, we also nid SCM= github, jenkins for ci/cd automation.
21:17 compiler=java-11-open jdk

when u use maven to do a build under free style project, u take more time &nid to do a lot of configurations(we ar always clicking on configure
so instaed of using freestyle we can use maven projects. to ensure d time used to configure d project is kept to the barest minimum, we use maven project

maven projects: significantly reduces the configurations to build with maven, bc if you hv a freestyle project that require to use maven to do a build,
frm common sense, using maven project is better
with maven project,we can customize pom.xml, by default the name of our build script is pom.xml,with maven project, i can change it to e.g tesla.xml, we hv that flexibility
mvn package (pom.xml,src)
apple(tesla.xml,apple.xml,src)

we can also build using graddle

we want to run jobs using maven project ... PLUGGINS MAKES jenkins more useful
INSTALL MAVEN INTERGRATION PLUGGIN TO RUN JOBS USING MAVEN PROJECTS:
#26:00 dashboard-mange jenkins-plugins-select-avila plugins in the seacrh bar,type maven& tick maven integration &instal witout restart-select create new-click maven project
&name:toyota web app & ok
scm:git:github url,credentials,we can change the branch- select build trigger- apply&save-configure-build:pom.xml-goal:clean package- we acan add postbuild step-
build setiings:email notification: developers-apply&save
dnt click build now, if ders a new version of the application, it wil do a build ,,, look at 36:09 workspace
