#### 23:16 even after authenticating we couldnt push to a private repo bc he nids to upgrade his account,its a payment issue , so we used anoda public repo

host port changes but :container port doesnt

image contain software, os, appl code

FROM python:3.7
WORKDIR /opt/app
COPY .  .
RUN pip install --no-cache-dir -r requirements-prod.txt
EXPOSE 5000

pwd gave us /home/ubuntu/pfa (we renamed the repository file we cloned to  pfa)
so thta means we ar in home/ubuntu/pfa
COPY . . means to copy every tin frm my pwd of my home server to the pwd of my image am creating
COPY . . is similar to mvn package wher d artifcars ar been created, bc this is a python application so when creatingb the image it runs this for us: 
RUN pip install --no-cache-dir -r requirements-prod.txt
and when you run/create a container it starts the applica

7:35 TICKET0016
9:20 we v  a github and dockerhub repo for this project ?? does it mean we can use any of the repo ?????? 

we wnt to containerize the appli, n with the help of the docker file we ar able to 

clone the github repo , its a private repo n we cloned successfully
ls
cd nodejs-application/
ls , n we can see d docker file
cat docke file
docker ps , to check for containers 
i wn to build a node image
docker build -t nodeapp:1 .   , to build a docker image ........   ( nodeapp:1  ,ie   version 1)

docker tag nodeapp:1 mylandmarktech/nodejs-fe-app:33    ,,, tagging successful
docker push nodeapp:1 mylandmarktech/nodejs-fe-app:33
error pushing so we authenticate
docker login -u mylandmarktech
#### 23:16 even after authentiacting we couldnt push to the private repo bc he nids to upgrade his account,its a subscription issue , so we used anoda public repo
so we created tag for our image for a diff public repo in github
docker tag nodeapp:1 mylandmarktech/nodejs-app:2, to mk it distributable
docker push nodeapp:1 mylandmarktech/nodejs-app:2    ... image name: push nodeapp:1    ,, container name and tag: nodejs-app:2
#### we deleted all d images
so this:nodeapp:1 is no longer in our local servrer bt we hv shared it in our register when we created the tag above bt we didnt push it

## 24:18 in the ticket above we v a keyword EXPOSE 9981 , its our container port  for port forwarding, so to deploy the application:

docker run --name nodeapp -d -p 7777:9981 nodeapp:1
bt this : nodeapp:1 is nolonger in our local servrer bt we v shared it in our register when we created d tag above bt we didnt push it, so we dnt v nodeapp:1 anywhere


docker ps -q to list containers id
to stop the containers:   docker stop container ids
to remove stopped container : docker rm container ids

docker run --name nodeapp -d -p 7777:9981 nodeapp:1
bt this : nodeapp:1 is nolonger in our local servrer bt we hv shared it in our register when we created the tag above bt we didnt push it
so we v to use the image that is found in my registry the version2
docker run --name nodeapp -d -p 7777:9981 nodeapp:2  ,, i dnt hv hv nodeapp:2 in my local server bt i have it in my registry, in my image remote registry
29:58 so when i execute docker run,this will pull/use the image to create n start the container

36:24 ## 24:18 in the ticket above we v a keyword EXPOSE 9981 , its our container port  for port forwarding,so frm my docker engine, its forwarding the port to this
container, the port is forwarded internally b172.170.2:9981

host port changes but port address :container port doesnt
to check if a port is available, we can run netstat -tulpn
to install netstat : sudo apt install net-tools

43:38

















