2:04:00  we can use jenkins for non java applications and any application as expalined in jenkins shared lib video


aws:
===

Platforms:  Platform Engineer ( Linux )
            Multi- Platform Engineer ( Linux / WINDOWS/Solaris/mcOS)

IQ: Explain your experience with Linux systems/Platforms?
answer: Creating & login into Linux servers to perform various tasks.
TASKS MGT: 
    FileGMT: - touch/vi/cat/head/tail/cut/grep/pipe/sed/sort/mkdir/rm/rm -rf/chmod/chown 
              cp/mv/ln/ln -s/ scp / ls   
    userMGT: - useradd/userdel/usermod/groupadd/groupdel/passwd/chage/paswd -l  


comissioning/recommissioning servers/task .... cloud engr
i created a redhat linux server in AWWS, i wnt to commission the srver & in doing so , i want to customize the server to b a tomcat server therefore i nid to
commision the servaer,, what wil permit the srver to b atomcat server??? for the server to be a tomcat servervam goin to b able to comission d sever by installin some stuffs
1)java.. openjk.. java deveopment key,, am goin to download tomcat SW ,, so il Wget tomcat to install like tomcat9
comissioning: 
for e.g ders a linux8 server which h been assigned to execute some task on 
      
Redhat8 Linux server in AWS   
i can execute:          - yum install java  git wget unzip tomcat  maven sonarqube nexus jenkins   
this task means commission the server
   also i can decommision the server :  decomissioning:
by removing all what i nistalled          - yum remove java git22 wget unzip tomcat  maven sonarqube nexus jenkins       
    recomissioning:
         - yum update/upgrade/  
  if i remove git22, i can recommission the server by installing git23   - yum install git23    


###### to connect to a server we use open ssh, its a SW that permits me to ssh into a server
thisngs needed to connect to a server 
Login:   
  openssh = ssh username@ipAddress              = using password  
            ssh -i key.pem username@ipAddress   = using sshkeys   

#### also, To login the port/address[2^16=65536] required must be open in the server's firewall/SG  
  to ssh port 22 must be open.

a server has [2^16=65536]

security of Linux systems:
  firewall rules = open ONLY required ports/address 22, [0-65535] ,, all the addresses shudnt be open 
                   open required ports/addresses only to authorise/known sources, traffic frm specificc known sources
    Team = Paul / Simon / James / Chioma / Mercy 
           Everybody 

  Grant users Least Privilege Access: only gve a person the permission he needs .. either read only permission , read &write etc 31:35
  solaris server:  

login into servers and granting permissions and login access to admins to access our servers:    


Creating servers in aws using GUI-CONSOLE, CLI, and IaaC with Terraform. 17:50
login into servers and as an engr i will be granting permission & login access to admins to access our server
hw can u login to ur server, the address has to be open , 

20:45 port 3389 is used by RDP protocol

############also we covered logical volume mgt
hw is data stored in this server, we need to attach  a disk or harddrive attached to server where we can store data, all the task we run on the server like file mgt are
consuming part of the system resources of the disk space, so we v to manage the disk bc if the disk is full, der will be a problem, all the process of managing  hw much 
stoage we hv available is called volume mgt
 34:00 although since we'v been doing cloud computing has become heavily simplified bt in the past, there used to be people hired to to manage storage of servers as their only 
job like linux administrator
we can add more volume if the first is being exhausted e.g disk 1 .. then we can add disk2
tasks:
Volume MGT: LVM  .
   harddrive1 = 800GB  
   harddrive2 = 200GB   

#### other task that can be done to any server or system
systemMGT / PackageMGT / ProcessMGT/ securityMGT :

#### also networking: .... netwrking the servers to communicate with each other
  maven --> sonarqube ---> jenkins ---> nexus  ---> 


monitoring systems for high performance  :

troubleshooting systems:

#### also we covered running workloads using :
  CLI  
  GUI  
  scripts  

in our environ git is used as a distributed version control system while github is used as a source code management system
Git: DVCS - Versioning codes  
     coding - developing softwares [ collaboration ]  coding is all abt development
     Git branch - Line of development .. under git we talk abt branches
      master     / stage /       development      = branches 
      Prod       UAT/test        dev              = environments 
    Other team members should review changes before any commit is done in the master branch 

  git commands:
    git init/status/add/commit  
    git clone/pull/fetch/push  
    git switch/checkout/branch/tag/        
    git diff/merge/rebase/cherry-pick  
    git stash/revert/reset/clean  

GitHub - SCM:
  Administration - project onboarding  .. administive task , onboarding
  Created: github account/organisation/repositories/teams/branches 

we went frm writing codes to build 
#######Development -- Build 
maven: 
maven is an open source java based build tool
  1. commissioning/setting up / installing maven software in Redhat9  
  2. configuring the maven server   
  3. installing maven dependencies - openjdk 
  4. Building/creating deployable java based packages [jar/war/ear]
  5. Creating maven proxy repositories to ensure that project dependencies/plugins
     are securely downloaded into maven by proxy server.
  6. troubleshooting build failures, and extended builds.   

tomcat is an open source java based container/application server
  1. commissioning/setting up / installing tomcat software in Redhat9  
  2. configuring the tomcat server   
  3. installing tomcat dependencies - openjdk 
  4. deploying the war files into the tomcat webapps directory
  5. Creating tomcat users to permit required console access/mgt 
  6. troubleshooting failures in our tomcat servers.   

sonarqube is an open source java based code quality analysis tool.
  1. commissioning/setting up / installing sonarqube software in Redhat9  
  2. configuring the sonarqube server   
  3. installing sonarqube dependencies - openjdk 
  4. running code quality analysis in sonarqube
  5. Creating rules, quality gates and quality profiles in sonarqube 
  6. troubleshooting build failures from sonarqube reports. 
  7. Creating a benchmarks/standards for code quality:
       - code coverage  
       - duplications  
       - code smells  
       - vulnerabilities 
       - security hotspots
       - maintains reliability,and secure codebases

Nexus is an open source java based artifactory.
  1. commissioning/setting-up / installing nexus software in Redhat9  
  2. configuring the nexus server   
  3. installing nexus dependencies - openjdk 
  4. Creating sonapshots repositories to uploads artifacts built from the dev branch  
  5. Creating releases repositories to uploads artifacts built from the master branch  
  6. troubleshooting issues from nexus;
       permission errors - HTTP401 
  7. Creating MAVEN-PROXY-REPO in nexus


Jenkins is an open source ci/cd automation tool.
  1. commissioning/setting-up / installing the Jenkins software in Redhat9  
  2. configuring the Jenkins server   
  3. installing Jenkins dependencies - openjdk 
  4. running CI/CD/CM/CT/ jobs in Jenkins  
  5. installing and configuring plugins in jenkins to extend 
     jenkins functionality and for automation
  6. Writing and editing Jenkinsfiles to run pipeline and multi-branch pipeline jobs  
  7. setting-up triggers[pollSCM, GitHub-webhook, etc.] for automated builds in jenkins
  9. securing the Jenkins server/environment to allow only authorise users to perform tasks 
  10. troubleshooting jobs and build failures  
  11. Integrating jenkins with;
        Git/GitHub/MAVEN/sonarqube/nexus/tomcat/docker/kubernetes/
  12. using plugins to configure alerts and email notifications in jenkins  
  13. using plugins in setting-up jenkins master-slave to run parrarel jobs via Jenkins executors

which platform do you use in your environment/projects:
in our environment, Our technology stack support muliple Platforms
Our technology stack can be installed/setup in muliple Platforms like 
   Linux/WINDOWS/Solaris/macOS
However in our environment we are heavy on the Linux platforms/systems because:
  Linux is open source / secured / community support to help resolve issues / 

Oluwafemi James
SRE || DevOps Engineer || Platform Engineer|| 
Cloud Engineer|| Kubernetes Engineer || BSc.  

Ticket00147: Create a Build and Release pipeline for Tesla client 

Ticket00145: Install and configure Jenkins  in a redhat9 server??? 10wd  
  3. which platform do you want me to use?
        --- Linux OS [70%]
        --- WINDOWS  [20%]
        --- MacOS    [10%]
    
    SME - subject matter expert / skill transfer, i can transfer a lot of skills

IQ: What is your experience in Open source technologies???
    We develop, build, test, monitore, secure, backup and deploy 
    applications using technologies including open source softwares, we mostly use open softwares like:   
 1. Linux OS /   
      development - developers  
        CODING      == IDEs [vscode, Eclipse], [Pycharm, is nt open source ]
        versioning  === [git/github], [gitlab, bitBucket] 
           IDEs = integrated development environment  
      Testing === [Selenium,] 

2. WINDOWS is nt open source SW , u hv to pay for the licence including mac
     GitBash / mobaXterm / vs code / winscp  / puTTy 

3. MacOS
     GitBash / mobaXterm / terminal / vscode  


IQ: What is your experience in Open source technologies???
    Linux os / java(openjdk) / maven / 
    java / maven / tomcat/ sonarQube / nexus / jenkins / nginx/ git /  
=====================================
=================================================
Infrastructure Engineering and Cloud computing
=================================================

AWS  ,, we'l be looking at hw aws helps us to manage our infrastructure
-- 1:28:30 .for our application to be accesed by cx,it nids to be hosted on some computer systems& for that to happen we nid an hardware,on the hardware the OS is instaled
we nid a piece of storage for our database & our appl is running, so we nid to create a data center
Datacenter:
   1. Applications [80%]   = 500MB    #### what is very imp to us is the appl, 1:34:05 our appl can only be held if we hv a piece of storage wich is adequate
   2. Database-storage     = 25000MB = 25GB   
   3. OS  -                = 5000MB  = 10GB .. 1:35:329 ubuntu is 4.6GB 
   4. HardWare
    a computer system comes wit a hardware system, an OS, a storage,IF the OS requires 500mb, we nid a disk space that has up to the volume of 500mb

###### hw do we deploy in tomcat, we copy to webapps .. the tomcat server nids to hv sufficient storage for us deploy the appl successfully
   tomcat = cp target/app.war  /opt/tomcat9/webapps/

df -h shows our file system & how much is in use
   app.war    = 90MB    90MB
   tesla.war  = 90MB    180MB  
   webapp.war = 150MB   330MB
    total     used      avail 
   df -h  = 800GB     799.9gb    .1GB=100MB   


######1:24:48  if i was to run a biz, i nid to go to th mkt n buy a computer system, on wich i can install more appl on my OS 
##1:39:00  Amaka Nwosu  wants to b supplying some financial solutions to cx around the world, for her to start dis coy traditioanlly,she has to buy a coy wit the ryt OS&
storage b4 she can start running her application... this is a challenge so we hv cloud solutions
         AmakaTech
           ---->  WE hv cloud solutions, wit cloud services like aws, we can pay only for what we use

with CSP (Cloud Service Providers) like aws, GCP and azure we can pay only for used 
computing Services.  
   pa

on-prem Datacenter:
     data centers, Own and manage by the user/client  .. #if Amaka acquires everytin hersef, that becomes an on-prem infrastructure bt we can hv some of this services provided to us by
    a cloud provider. 1:40 :48

standard/expectation:
    Years                            2018   2019  2020  
    clients                           1m     2m    4m   
    computers  to manage the clients  10c    20c   40c

actual results:
    Years      2018   2019  2020  
    clients     1m     2m    1m   
    computers   10c    20c   40c  .. there wil be a redundancy bc we hv jst 1m client& we nid jst 10 servers/computer system but now we hv created 40 
          so the actual result has a gap/variance from what we expected ,mayb bc of covid.. dif btw standard & actual, shes nt using the 30 excess computer shes is payin for 
    so scaling is a problem for on-prem data-center

###  1:45:002types of on-prem expenditure
CAPEX  = CAPITAL EXPENDITURES
OPEX   = OPERATING EXPENDITURES

  ####  both expenditures wil be very high for on-prem datacenter owners

to solve AMaka redundancy issues u hv to calc ur biz requirements, what do i nid in my biz, i nid a biz that ill be always available, so i nid to create the architeture in 
a way that my system is always available is very important `
high availabity ensures that we can alwyas access our data in the cloud 


##1:47~ if u want to deploy ur appl, either u own a datacenter or ur renting server resources/ leveraging resources from other cloud providers e.g AWS

REQUIREMENTS OF owning a data center:
Dedicated  space
ultra fast internet speed (in todays term)
High  bandwidth superfast INTERNET

other service providers
Internet Service Providers - ISP (MTN/att/bell/verizon/vodafone)

Cloud Service Providers    - CSP =e.g  AWS / GCP / AZURE / alibaba/ etc.    

What are they providing???
  Provide computing services(servers/network/storage/security) 
  over the internet from their Datacenters    

Phone Service Providers
  - samsung 
  - apple 
  - google 
with CSP, we can reduce cost by:
  pay-as-you-go 
  pay-as-you-grow  
  pay-as-you-use 

ADVANTAGES OF USING THE CLOUD 1:55:00

the main cloud service providers
 AWS - Amazon Web Services   
 GCP - Google Cloud platform) / 
 AZURE Cloud

 understanding cloud computing is very imp bc COMPANIES ar migrating very quick &fast from on-prem to cloud 
Cloud Service Models:
=====================
IaaS -- Infrastructure as a service  :   has components that is managed by the vendors & managed by us 
e.g ec2 instance  - ec2 
  - SonarQube

PaaS--  Platform  as a service  : aws container registry, aws kubernetes solution
  ECR / EKS / ECS /  

some coys are preferring SW as A ervice
IQ: Explain your experience in SaaS delivery??? 
SaaS -- Software as a service:
these ar my experience, i hv worked on :    CloudWatch 
    SonarCloud 
    NewRelic 
    GitHub
    DockerHub


AWS global infrastructure in nxt class
the first resorce in aws wich is ec2-instances
