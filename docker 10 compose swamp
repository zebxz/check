################## just me remember to study the docker commands ,, telling myself



 NUMBER OF OBJECTS IN THE MICRO SERVICE DEPLOYMENT, CHECKING FOR THE MOUNT POINT FOR mysql in github,  yml LANGUAGE, HOW TO GET UR DOCKER VERSION THAT
IS RUNNING, CREATING DOCKER COMPOSE FILE WITH DEFAULT NAME FOR DEPLOYMENT, STEPS TO DEPLOY THE DOCKER COMPOSE FILE,TROUBLESHOOTING, 
DOCKER SWAMP, SERVICE NAME FOR DNS RESOLUTION,  WHEN U RUN DOCKER SWAM init, OVERLAY  NETWORK, an illustration for INSTALLING DOCKER SWAMP, 
TO ADD ANOTHER MANAGER TO THE CLUSTER,  INSTALLATION STEPS EXPLAINED,  STEPS TO ADD A NODE/NODES TO THE CLUSTER, ILLUSTRATING THE STEPS TO ADD A NODE/NODES
TO THE CLUSTER,  WE ARE NOW IN A CLUSTER, DOCKER SWAMP COMMANDS, ILLUSTRATING  'DEPLOY APPLICATION IN DOCKER SWAMP', HOW TO SCALE UP AND SCALE DOWN, 
2 MODES OF DEPLOYING APPLICATION IN DOCKER SWARM;replica & global, LOGMGT, DEPLOYING  A STACK, ROLLING UPDATE, HOW TO ACHIEVE THE DEPLOYMENT USING A STACK,
UPDATE SERVICE WITH NEW IMAGE,  ADD LABELS TO NODE, CREATING APPLICATION USING LABEL & CONSTRAINT.JENKINS DOCKER INTEGRATION SAMPLE FILE





an e-commerce java based web application for ebay 
ligin 
registreation
checkout
payment
order


          ****Meee***  NUMBER OF OBJECTS IN THE MICRO SERVICE DEPLOYMENT
 we ar passing an ecommerce ntwrk, we wnt the appl to all tlak to each other, so we v to deploy them in the same ntwrk 
the container can only talk to ecah other if they ar in the same ntwrk, using their hostname if they ar in d same ntwrk
we ar deploying in detachable mode -d 
                                                                this is the login image 
 3) docker run --name login --network ecommerce -d -p 5000:8080 mylandmarktech/login    
         *********************** for the other containers, we nt using any port number 

 ############### these ar multiple commands that we ar doing  , and dis ar d dif images we ar using bc we hv decopled d appl into micro serv, so we v 
multiple micro services on top of it  we v a database and the image is mtsql
 b4 deployin dis app, we nid to creat d ntwrk 
1) docker network create ecommerce ( custm bridge ntwk) and we nid the vol, we nt to mount d vol to our container, so we  ar creating  the vol
2) docker volume create datas
*************** total of 9c0mmands to creATE DIS APP, ...... THIS IS A CHALLENGING TASK

4) docker run --name  registration --netwrk  ecommerce -d mylandmarktech/registration 
5) docker run --name cart --netwrork ecommerce -d mylandmarktech/cart
6) docker run --name checkout --network ecommerce -d mylandmarktech/checkout
7) docker run --name payment  --network ecommerce -d mylandmarktech/payment 
8) docker run --name order  --network ecommerce -d mylandmarktech/order 
9) docker run --name -mysql - network ecommerce -v datas:/data/db/mysql        **i bliv to use 'msql' as the database while the one below is to use 'mongo'
 docker run --name  mongo --network ecommerce -v datas:/ data/db mongo -         then we nid to pas some env var

someone jst reminded me , we also nid to pass env var   -e



***********16:33  
17:22*********************      CHECKING FOR THE MOUNT POINT FOR mysql in github
lets check in dockerhub and find out if we ar going to use mysql , what is going to be the env variable to be defined, remember, we v seen mongodb , dis time around
when u start working what is used in ur env is nt mongodb bt mqsl ..
in docker hub, we can see the command, hw to deploy it, the paswd, env var, wher data is stored , if i wnat to create a mount point /var/lib/mysql ,
so we ar pasin env var ... this is where data is going to be stored;/var/lib/mysql 

so for us to be able to manage all of this we wil use a docker compose file and the we'll see hw wit the use of my docker compose file can create my ntwrk for me, create my
volume and create all this containers and will call all the containers services
21:29 ####### & what u nid at this time of the course shud nt b a problem bc if u google wot is docker compse the link goes to docker hub, it gives overview, hw to install
and we nid to knw our docker version, docker engine version, to knw the docker compose version to use
and if u nid  a docker compose file, we can hv smaples of  a docker compose file...
***************** and docekr compose file is a .yml file
docker-compose .yml
we'll start studying a new language called yml and its the simplest language ucan study in programing
 the first tin to start in this file is version
generally for any programming language 

23:17  ***********languages
yml
xml    , in xml e.g if u want to get some inf abt servers , multiple servers
<servers></servers>    , this is hw code is managed in xml
inside this server, i v multiple servers
<servers>
 <servers>
<servers>nexus</servers> 
<servers>jenkins</servers> 
<servers>tomcat</servers>        now i hv a gud number of servers , so inside my servers, i v nexus, jenkins and tomact
</servers>                     this is xml, this is a list servers

lets ASSUME THAT I WNT TO ENTA SOME PARAMETERS LIKE , SERVER ID 
<servers>
 <servers> 
   <id>nexus</id> 
   <login>admin</login>                   this is hw xml is written 
   <password>admin</password>
  <password>$pwd</password>             i can enter tha passwd as a variable, ie am caling the pw frm somewhere else, wich means the pw is defined somewher else bc its nt very
</servers>                                                                    secured for u to pass PW like this,  bt this is external so similarly
<servers>
  <id>jenkins</id>
  <login>jenkins</jenkins>
  <password>admin</password>
  </servers> 
<servers>tomcat</servers>      
</servers>   

                                         yml LANGUAGE
*******29:27 
we'll start studying a new language called yml and its the simplest language ucan study in programing
 the first tin to start in this file is version
generally for any programming language 
the simplest laguage u can think of is the yml language
generally in any programming lanugae, we v the diff kind of data u can eneter, what we call:
data types
interger     example of interger
    age: 60
string    ... usually put in single of double quote "
   name: "landmark"
dictionary  (key:value pairs)
   name:"simon"
   age : 55
   pob: "lagos"
list/array         under list we can hv diff attributes like age ...
  students:
   -name: simon
    age:
    salary:
  -name: pau
  -name: keren
maps
objects
class

34:00  ******************* we wnt to create a docker compose.yml
Before u create this file, the first tin is the diff version w ecan use , u nid to knw the version of docker to decide the version of docker compose that u nid



####################  HOW TO GET UR DOCKER VERSION THAT IS RUNNING

docker info , will give the verssion that is running OR 
docker --version
e.g u can use dokcer compose 3.1 for any docker 1.13.1+
our docker vesiron : 20.10.7 

version : '3.1'    the nxt tin we v is ,,, bc yml wil nid spacing a lot
services:
  mongo
login
registration
check 
cart

    ************** bt in this example, we'll jsut hv our database and a single service , voumes and ntwrk
****************************************************************************************************************


                             CREATING DOCKER COMPOSE FILE WITH DEFAULT NAME FOR DEPLOYMENT


version : '3.1'    the nxt tin we v is ,,, bc yml wil nid spacing a lot
services:       **************** i can create any number of micro services under this version of docker compose e.g mongo and springapp
  mongodb        in deployin d database, i wnt to use the image             *************38:58                            maintain 2spacing
    image: mongo
    networks:            in deployin the appl we nid ntwrk ,, we can v multiple ntwrks
    - ecommerce
    -fintech:
    volumes:              we nid volume 
    - mongo-data:/data/db
    environment:
    -MONGO_DB_                            4*:12  we ar nt doing port publishing bt if we were to do it , we 'l v a keyword called port
    -MONGO_DB_    48:24  
springapp      
    image: mylandmarktech/spring-boot-mongo     ..  ..1:11:07    spring-boot-mongo is the name of the service
    restart: always    
    ports:
    - 6000:8080     
    networks:
    - ecommerce
    - fintech     
    environment:
    - MONGO_DB_HOSTNAME=mongodb
    - MONGO_DB_USERNAME=devdb
    - MONGO_DB_PASSWORD=devdb123                                                                        ( 53:00 .... example below)
    depends_on:   this means that springapp depend on mongodb  therfore our dabase shud be created first before i bliv ... spring appli    
    mongodb                                           ie our spring application port to be created depends on the database port mm,,..  .. 54:20
volumes:   can create multiple volumes 
   mongo-data:                                                                 maintain 2spacing
     driver: local
    ebs-data       ......... this is external data
      driver: rexray
networks:
  ecommerce:   ..........  for the netwrk i nid the driver
    driver: bridge
  fintech:                                                                                                                    41:00
     external: true      . when i say driver is bridge and external is true , that means the ntwrk already exists so i wnt to use an existing ntwrk am nt craeting the ntwrk
##############################################################################################################

NEXT:

                         STEPS TO DEPLOY THE DOCKER COMPOSE FILE

54:22 ###### we copy this docker compose file ..we want to deploy using a 'file' a file is imp bc a file gets to do wit infrastructure as a code wich is very
imp

1) i want to create a dir               1200 1 bed  ,, 1400 2bed
mkdir app26 ; cd app26
2) vi docker-compose.yml                             55:40
then paste  the above file and save

**************** dnt freak out bc this code is part of our project already, if u go to the project that we v for this stuff we already v d code ther
                  is oin our github repository, this docker compose file is already ther, most of the time it wil b part of ur source code bt u nid to understand if u nid 
               to change anytin like the image version and so on 

** now v created my docker compose file bt before i can run any docker compose command , i will be reQ to instal dodcker compose
 so first docker compose i can run to check if my file is ok 
3) docker-compose config      ....************* am told to  install docker compose 
4) sudo apt install docker-compose;
 NOW docker-compose config  TO check if the file is ok:    ..... file is ok
now we ar told that its going to create ntwork called ecommers then it wil use na existing ntwrk and it wil create dis services, then a local and ebs vol & a local vol
next 
we deploy the appliaction
5) docker-compose up -d    .... its going to create app26_ebs-data" with/using the  rexray driver" in  our aws account
                              

                                    TROUBLESHOOTING
                 ERROR:  it says NONEXISTENT DRIVER REXRAY 
*****************  so docker plug in ls    ... to check why w ev the error                                           i didnt go bk to d file to correct it
so its telling us thta this particular driver dis particuale driver does nt exist bc we v defined rexray instead of rexray/ebs & i can also pass the version  59:59

*************** NOW EVERYTHING HAS BEEN DEPLOYED ***********************
if i run docker-compose down   .... it wil delete everytin that we created bt fintech didnt delete bc it is external. ie was created b4 we created/deployed the file
can also run docker volume prune to delete local volumes then ill be left with just the external volumes
###################  so docker compose is very imp, its easily manageable to use in deploying ur application and commands ############
e.g if u go to our github account we still v dis file, eveytin is der as it was originally defined, if u want to change smt u jsut go and change the version

*** in rreal time we ar going to be using dodcker compose file to do our deplyment 

1:04  docker compose ps   oR docker ps
shows my containers are up 

***************** we can see the a prefix app26;springapp_1  , thats bc it inherited the dir name we created in step no. 1 ... app26

to access tha application , it shows the application  container ip address ... 1:05:00
ubuntu@dockerbuild:~/app26$ curl if config.co   ... 
3.93.218.173

                                        TROUBLESHOOTING
curl -v localhost:6000          ,we were able to connect to the application 
**********************bt we couldnt connect online,, someone said smt and he said i think this  #file 7= does nt v any application path
someone said bc port 6000 has been used previous bt he said dats nt a problem bc if u create a container n delete it the port becomes available
bt lets find out : netstat -tlunp    ie tcp , upd port number

*********** howevre his main point is for us to see we can use a docker compose file and der ar multiple commands that we can run 
thers a scenerio were if u were trying to deploy dis application , like let me assume that , am goin to copy this file, he copied a docker file frm  his repo in github n 
vi into a file then paste the copied file

version: '3.1'
services:
springboot:     
    image: mylandmarktech/java-web-app
    restart: always    
    ports:
    - 9090:8080     
    networks:
    - mavenapp     **************** if u dnt indictae d driver ,e.g driver:bridge it is going to be created in the brige ntwrk 
     driver:bridge               so i wnat to create a ntwrk for maven app and this is the custom bridge
****  so to deploy d appl, 
docker-compose -f docker- compose_mwa.yml config... to check if d file is ok. (docker-compose -f docker- compose_mwa.ym) bc its nt d default docker file name: docker-compose
then docker-compose -f docker- compose_mwa.yml .....................................to deploy 
and docker-compose -f docker- compose_mwa.yml down ...............................  to  delete the application
******* 1:15:08  .....******************** u can deploy anytin using docker compose
he accessed the application on the CLI: curl -L localhost:9090/java-web-app

docker-compose --help  ... give sthe list of commands  ........... 1:17:40

#######################################################################################################################
EXAMPLE:

        an e-commerce java based web application for ebay 
login 
registreation
checkout
payment                          EXAMPLE: OM,                                                                             53:30
order        so we can equally say here that order depends on :login,reg,checkout,, so if ders no checkout order cannot be placed
depends on:
-login 
-registreation
-checkout
-payment
#########################################################################################################################################

docker-compose --help  ... give sthe list of commands  ........... 1:17:40
######################################################################################
###############################################################################



EVEN THough we v been able to deploy our application in docker using vol, netwrk, env var n deploying multiple containers, we v realised that it is very easy fro us 
to put all of those containers in a particular file called docker compose file bt the question is can i scale my application when i use docker? ,, w ecannot do that n
this is bc docker does nt support  multi hosting , a multi host netwrk architecture, n so we nid to see hw we can use the option that support multi hosting bc we wnt a
situation were we can hv severs in a cluster n for us to that we will look at docker swamp 
""""""""#####################################################:::' READUP POWERPOINT""""""""""\|||||#########################################





                               DOCKER SWAMP
2.18.00
service is nothing but a collection of one or more replicas(containers)of the same type(image)     

1:19:52 ... hw does swamp work 
THE TRADITIONAL MODEL;
traditional docker is running with independent servers n each of the independent docker machine v their docker cli where we run d diff docker commands Bt if u v a docker
server like this that goes down then that means ur applications are down, so ders no option to resolve such issue so what are we going to do ?
we v a swamp , a swamp is going to be a cluster

A swamp is a cluster that comprises of master node and worker node 1:20:00
Docker swamp is simply a container oschestrator
so we v docker swap , kuberDockernetes , openshift ..all of these are ochestrators
so far we v been using docker as our containerization tool bt we realized that when we create containers, we cannot scale,  e.g we hv so much traffic, that 
traffic we cannot scale n dats why we talk abt docker swamp

**********************************FEATURES ............................ readup
SWAMP FEATURES
1)Cluster mgt : here we v
masternodes + worker nodes... ..  here we can v like 3 masters and 3 workers in one swamp,, so all these workers are together in one cluster n onces we put dem together,
doskser runs on all of them, what tk place is dat u can deploy ur app n it is goin to be scahedules in any of thses nodes,

1:24:01  ............*  USING A DIAGRAM  , he explained
we v a manger, ie i bliv a msater , the manger wil talk to diff nodes (worker node) and in all the nodes docker engine is running in all the nodes, so all 
the nodes v docker engine, we ll mk sure that docker is running in all the nodes n same in the master, we v docker running in the master
wot happens is that when we create containers, the master wil b able to lB BuT when we ar trying to create conatiners d master wil server as a manager an
ochestrator, so he wil b able to schedule containers to be created in the nodes, it wil act as amanger,  n part of the task that it does is scheduling.e.g
if we nid like 50 replicas of our container running, it is goin to place the conatiners in d nodes that are available ,, this is what a swamp does..  


2) it has a decentralized design
3) declarative service model:( docker-compose file) when u create a file(likw we did above) wher u can declare everytin u wnt to deploy, its a declarative 
approach to do deployment bt when u run command thats d imperative approach , so we can declare everytin we wnt to deploy in a single file
4)scaling :  e.g we can hv 100replicas of our conatiners runing
5)dESIRED state reconciliation : e.g if i v 100replicas runing n i want to change my replica state to 200, it means that my desired state is now 200, d 
swamp wil ensure that i v 200replicas running  ,, so it must reconcile
6) multi-host netwrk : called (overlay)  ... 1:26:40
7)service discovery 1:27:26  ,,e.g we v this services  , we wnt to run the container bt what do i nid to run the contianers,, the image ,the image is the most imp tin  to
deply a container ,bc , container is the runnimg instance of the image, so for login, rg,payment,ordeer ,mongodb, we nid the image. n hw wil d containers communicate with 
each other, bc we ar talkin abt service discovery, hw wil login discover reg, hw wil reg discover payment n talk to payment, hw wil payment discover order n talk to order
hw will d database tlak to the applications ,, so network becomes imp. 
Docker-compose-myapp.yml
version:'3.1'
services:
 login:
   image:
   networks:
 registration:
    image:
    networks:
 payment:
   image:
   networks:
   order:
   image:
   networks:
 mongodb:
   image:
   networks:
dns resolution is done using service names and IP
1:31:00


                                SERVICE NAME FOR DNS RESOLUTION
 we v to ensure thay ar in the same ntwrk (if nt they wil be created in d default bridge ntwrk n they wil b able to talk using only their ip adress wich is
dangerous)so in docker swamp, our DNS resolution is done using SERVICE NAMES, this service name is like the application name, it is nt done using service ip . 
NOW IF login wnats to talk to registration, it wil talk to it using the name n not the IP address.

$$$$$$$$$$ with docker ochestrators , be it docker swamp, kubernetes etc, they cm wit advanced networking that permits the containers to talk to each other
even if we dnt pass ntwrks in d file, once ur deployn in a docker swamp, they ar goin to easily talk wit each oda via service discovery.bc d dns resolution 
is done using d service names e.g d micro service appl can talk to the database using the name n thats why in our env var we ar very careful wit dis data  ..... 1:32:51

8)load balancing: e.g we ar receiving a lot of trafic. endusers traffic are mounting , so when it mounts n users r trying to access this appl, when u do scaling 
e.g i wnt to create 60 replicas of my appl, d master wil schedule d replica to be created in any of this worker node including the master, so it does lb n 
when trafic equally is coming externally,it wil be routed bc internally it is doin LB   ... 1:33;35
9) secure by default
10) rolling updates


QUESTION: what happens if a node is down???
remember in real time, we can v like 3 masters , we can v a forum/quarum wher we v like 3 masters n 11 replicas so if one master is down d oda master is 
available to support



2.58.56****** WHEN U RUN DOCKER SWAM init, 
By default it creates an overlay ntwrk, the overlay ntwrk is what permits your docker server to communicate in a cluster like this bc in normal docker der 
is no overlay ntwrk for that reason, you cannot v docker servers in a cluster like this bc node1 cannot talk to node2 in normal docker
so once u v the overlay ntwrk, when u create ur containers , when you create ur services, those services can talk to each other irrespective of whether they
ar created in node1 or node10 bc of the overlay ntwrk n the DNS registration is done using the service names

            OVERLAY  NETWORK
whenever we ar deploying in a swarm, our containers wil be created in the overlay netwrk..overlay ntwrk means that u can communicate wit dif nodes, the master
can communicate with multiple nodes using the overlay netwrk, with overlay the container in node1 can talk with the conatinters in all the other nodes.
 

                                 
                             an illustration for INSTALLING DOCKER SWAMP

$$$$$$$$$$ 1:34:15 Installing docker swamp , very easy bc kubernetes is kubersome 
ubuntu@dockerbuild:~/app26$ docker node ls    ,,, i wnt to list the number of nodes
**because i did not run docker swarm init yet, WE SEE  ...... 'This node is not a swarm manager. use Docker swarm init or docker swarm join to connect this
node to swarm and try again.
now i want to create this guy, i wnt this node ubuntu@docker to be my manger, let me jst create a new hostname for this node 
 
ubuntu@dockerbuild:~/app26$ sudo hostname master    ................. so now my host name is manager
ubuntu@dockerbuild:~/app26$ docker swarm init ...................i wnat to initialize this docker server to become my manger
***** immediately i nitialize, it gives me a token i can use to add other worker node; docker swamp join ---token xxxxxxxxxxx

                         TO ADD ANOTHER MANAGER TO THE CLUSTER
it also says to add a manager to this swarm, run 'docker swarm token join manger' ....1;36:13
so i can v 3managers here while running the 'docker swarm join manager' and follow the instructions  
so if i wnat to add another server to be another master so both of them wil be performing admin task this is what i wil do ... bt i wont now ,, i wnt to do this 
ubuntu@dockerbuild:~/app26$ he pasted the token to add worker node   .. am going to xplain smt cos this takes us to security 
************************ 1:37:01  ##############we wnt to initialize docker swarm , we v a command like this initializing docker swarm 
##################


.............

                     .... INSTALLATION STEPS EXPLAINED 

Docker swamp setup - Landmark technologies
prerequisite:

on only ubuntu server          ***1. 50.07
1)MASTER:
docker swarm init     ***1.49.40.. This is the only command we run in the master
2) WORKERS           ***  and in the worker node, we take the token generated from the master & add the token to the script we use to install docker in the 
                                                              worker nodes.
***for you to add any worker node to this docker swamp, docker has to be first installed in the node, then add ubuntu user to the docker grp, then we add 
the node to our cluster;


                                           

1)install docker community Edition in all the 3 servers  ***meee*** or mayb any number of  worker nodes we need.
   And Add user (ubuntu) to docker group 


                     STEPS TO ADD A NODE/NODES TO THE CLUSTER
2) execute below command to inintiate docker swarm manager in one system
#initialize docker swarm cluster
  docker swarm init
A)Get worker token
  docker swarm join-token worker
B)Get manager token to add another node as secondary manager
docker swarm join-token manager

 User script for worker server/worker nodes
worker nodes: 
#!/bin/bash          **1.40.50... now n AWS, using this script for 'userdata' the script will assign a hostname, install docker & add the server to my cluster 
sudo hostname node1             1.39.47*** We want to add this node1 to our swamp, 
sudo apt update -y          
sudo apt install docker.io -y        **** install docker in the node
sudo usermod -aG docker ubuntu           ***** add ubuntu user to the docker group
sudo docker swarm join --token .......XXXXXXXXX..    (TOKEN generated from step1; to add the node to the cluster)

***1.43.00..  remember what we discussed in AWS, if you want to run confederation to a server at creation, you use user data

2) open below ports in Aws Security Groups          ****1.41.30***all of these ports needs to be open for easy communication within the cluster.
  Tcp PORT 2377 FOR CLUSTER MGT COMMUNICATIOMNS
  Tcp and UDP port 7946 for communication among nodes
 UDP port 4789 for overlay netwrk traffic

if you are planning on creating an overlay netwrok with encryption   (--opt encrypted), you will also need to ensure ip protocol 50 (ESP) traffic is allowed

4) Add workkers machines to cluster      ****i bliv this step is just incase the token & the join command was not included in the installation script.
# Execute join token(worker token from manager) in all worker machines
5) display docker cluster nodes in manager machine 
  # docker node ls
6) deploy sample docker application in docker swarm cluster
 docker service create --name webserver -- replicas 2 -p 80:80 httpd
############################################################################################################

ubuntu@dockerbuild:~/app26$   docker node ls
  i v jsut one node called master

1:39:29   we want to deploy a swarm server 
i will add a hostname to this commands; 'sudo hostname node1'    


                   
1.40.50                 ILLUSTRATING THE STEPS TO ADD A NODE/NODES TO THE CLUSTER

we go to the aws account , to create node1
am deploying docker swarm frm ubuntu server
launch instance 
in aws he went to the choose image frm the list of images , t2 micro 
if u want to run configuration during launch , you use a user data 1:43:00
paste the user data , wich wil assign a host name , install docker in the server n its goin to add the server(node1) to my cluster
the script;
#!/bin/bash 
sudo hostname node1                
sudo apt update -y          
sudo apt install docker.io -y  
sudo usermod -aG docker ubuntu   
sudo docker swarm join --token..... XXXXXXXXXXXXXX
..................  the token ....................................... 

add tag: node1
2) security:  Read up power point for ports rEQ to be open. 
they should be open for easy communication within the cluster
******* he then used the security grp that already had all d reQ ports open
then launched the first worker node server (node1)
he launced 2 more worker node servers (node2&3)


                                         WE ARE NOW IN A CLUSTER
1:46:50 
5) ubuntu@dockerbuild:~/app26$ docker node ls
i now v 3nodes and 1 master   ....... so we ar now in a cluster
ubuntu@dockerbuild:~/app26$   dodcker netwrk ls
we now v a new netwrk ... overlay   ,,, bc whenever we ar deploying in a swarm, our containers wil be created in the overlay netwrk.. overlay ntwrk means that u can 
communicate wit dif nodes, the master can communicate with multiple nodes using the overlay netwrk, with overlay the container in node1 can talk with the conatinters in 
all the other nodes.
1:56: 
at this time we hv installed a docker swarm cluster  and one of the tin we are benefitting of this clustering is that it comes with 
H.A ---> High Availability ... bc we v multiple docker host server, if one server goes down we knw der ar other servers that are available
F.T ---> Fault Tolerance 
Scalabilty
L.B

we wil see hw fault tolerance will be able to work within this cluster
now we hv installed a docker swamp cluster.


                                    
##############################################################################################################################


                               DOCKER SWAMP COMMANDS

    DEPLOY APPLICATION USING COMMAND
To deploy in normal stanalone server:  .. we use the docker run command 
#in normal (stanalone) Docker server we can use below command to create a container.
docker run -d -p <hostport>:<containerPort> --name <containerName> <imageName>

1)  To deploy application in docker swamp:           ***1.58.30, i wont use 'docker run', anymore 
#In Docker swarm we wil use below command to deploy service.
docker service create --name <serviceName> -p <hostport>:<containerPort> <imageName>
docker service create --name javawebapp -p 7000:8000 mylandmarktech/java-web-app
netstat - nltup to check if port; 7000 is available.

    USING DOCKER COMPOSE FILE TO CREATE CONTAINERS
##in normal (stanalone) Docker server we can use below command to create a container.
 docker-compose up-d   ... using docker-compose file

2)#In Docker swarm we wil use below command to deploy service using docker compose file
docker stack deploy --compose-file docker-compose.yml <stackName>


3)#i can also update the service with the new image name:
docker service update --image <newImage> appliction name 
docker service update --image mylandmarktech/myapp:6 javawebapp 

4)#create a service with volume mapping   ************ i couldnt see the command completely
docker service create -p <hostPort>:<containerPort> --name <serviceName 

5)#create a service with a rolling update policy
  Deployment = 40
     version 1 -= 25%
     version 2 += 25%

6)#scale services                        2:43:04
docker servce scale javawebapp=3
docker service ps javawebapp    ... to see all the replicas

7)#to remove 
 docker service rm javawebapp

8)#Add labels to node 
docker node update  --label-add key=value <nodeid>
e.g                            can cal d key:server
docker node update --label-add server=node2   node2      
docker node update --label-add server=dbnode  node1    

9)#Drain nodes in Cluster (swarm wil not create containers in drained nodes)
docker node update --availability drain <NodeID/nodeName>
#######################################################################################################################################


                           
                               ILLUSTRATING  'DEPLOY APPLICATION IN DOCKER SWAMP'
            ****we run this command in the master node....
1:59:32   ........................... we are creating  a service, the name is called java web app
#   docker service create --name javawebapp -p 7000:8000 mylandmarktech/java-web-app
netstat nltup ...to check if port 7000 is in use
now create the service called java web app
6) docker service create --name javawebapp -p 7000:8000 mylandmarktech/java-web-app
docker service ls
docker service ps javawebapp  ..... we can see its in the master node 
REPLICA IS 1/1 : this means what is expected & what is running, so we expect to hv one replica & one replica is running, so the status is 'it is running'
########## someone said we can use :....... netstat -an | grep 7000  ... we ran it n it showed listening
  *** so we have deployed the service using this port number, so in docker swamp we have created a service called 'java web app' 
now
when we create a service, we can achieve scaling, i can scale up and scale down my service



                                HOW TO SCALE UP AND SCALE DOWN##
now we v this service that is running on the master node, we can run:
ubuntu@dockerbuild:~/app26$ docker service scale javawebapp =3
now we v scaled to 3
i desire to v 3replicas and now i v 3 replicas that are running
i can equally scalled up to any desired number ....
ubuntu@dockerbuild:~/app26$ docker service scale javawebapp =4
now i v 4

************ so using docker swarm we are able to scale
ubuntu@dockerbuild:~/app26$ docker service ps javawebapp
we can see the all the replicas
2 running in master 
1 was scheduled in node1 
the other was scheduled in node 2
so we can be able to achieve scaling when it comes to docker 

2:09:17
 this is a normal docker run command 
docker service ps javawebapp
docker service ls
docker service ps javawebapp

we also use docker compose file to create containers

##in normal (stanalone) Docker server we can use below command to create a container.
 docker-compose up -d   ...... using the docker compose file

similarly, 
#In Docker swarm we wil use below command to deploy service using docker compose file
we re going to be deploying a stack
docker stack deploy --compose-file docker-compose.yml <stackName>

note: open REQ ports in AWS Security Groups ####################y



######################     2 MODES OF DEPLOYING APPLICATION IN DOCKER SWARM

docker swarm has 2modes: REPLICA MODE & GLOBAL MODE
1)Replicas ---> it will deploy based on replicated number    (we v used this mode to deploy above)
***** this is the default mode & with this mode, it wil deploy base on the number of replicas that you want     ... 2:11:24
 ********** scaling is achieveable
***** we can run docker service scale javawebapp=5
    we deploy custom applications using this mode  ..
most of the applictaion we wil be deploying, we wil be using the replica mode

using Replica mode:  in this mode u dnt nid to state that u are using replica mode
#docker service create --name javawebapp -p 7000:8000 mylandmarktech/java-web-app
***mee** but you if you dnt indicate the number of replica, i replica wil be deployed like he said in label & constraint


       2.46.00     LABEL & CONSTRAINT
#use label and constraints to create in a particular node 
docker service create -p 8000:8080 --name myapp --replicas 2 --constraint 'node.labels.server==nodetwo' mylandmarktech/maven-web-app
**************if i dnt indicate the number of replica, i replica wil be deployed



 2)                 GLOBAL MODE
Global ---> All the nodes (3servers 1 manager+2workers)
          use for monitoring softwares deployments
          New Relic / Prometheus / Cloudwatch /EFK / logmgt

with the global mode for e.g, if u v a cluster that has 14servers or 14 nodes(3master + 11 workers)
if u v a 14 node cluster n u want to deploy an appl using the global mode what wil happen is that a replica wil be created in each of this node 
so if i v a 14node cluster n i deploy using (Replica mode),meant to say global mode its goin to deploy using deploy 14replicas meanin it wil schedule
1replica in al d nodes

2:15:11 ################## DDEPLOYING IN global mode 
#docker service create --name logmgt-p 8000:8080 --mode=global\
mylandmarktech/hello

now deploy
ubuntu@dockerbuild:~/app26$ #docker service create --name logmgt-p 8000:8080 --mode=global mylandmarktech/hello
successful
ubuntu@dockerbuild:~/app26$ docker service ls   
we see services that are rUnning and for logmgt, we can see 3/3 replicas
docker node ls 
we hv 1master , node1 and node2
we have 3replicas becasue; i bliv in Global mode, it deploys i replica in all the servers--->  3 All the servers (3servers 1 manager+2workers)
*************************************in the global mode we cannot scale
so if i run : docker service scale logmgt=5
but it says scale can only be used with replicated-job mode

*************will xplain why we wil mostly use logmgt service for such particular Global mode deployment


                             LOGMGT

#################### use cases of global mode ################### 51:33
Assume u v deployed an appl in this server ,now u want to deploy a monitor, u want smt that can tell u hw ur appl are behaving , so u want to deploy a
logmgt container how can that be done:   ... to deploy ur log mgt container
we are goin to use the global mode bc we wnt the container to be running in all the nodes n telling us hw the containers ar behaving 
with global mode, this conatainer is deployed in all the nodes 



                                QUESTIONS
1) WHAT WILL YOU DO , IF U WANT TO DO DEPLOYMENT IN DOCKER and u want to deploy a monitoring service that should be running in all the nodes
which deplyment mode wil you use,?
i wil use global mode bc docker wil mk surethat the service  has one replica runnin in all the nodes.
i wil deploy in Global mode bc this manger(master) schedules ur container to all diff nodes depending on the available resources like cpu ,it goin to 
scheduled the container

2) what is service in docker or docker swarm?
service is nothing but a collection of one or more replicas(containers)of the same type(image)     
ubuntu@dockerbuild:~/app26$ docker service ls                                 2:23:26
ID                  NAME           MODE         REPLICAS          IMAGE                                          PORTS
kb9yek1jaeez        javawebapp     replicated     4/4           mylandmarktech/java-web-app:latest               7000->8080/

*************so here we can see we v a javawebapp conatiner n the image we ar using, so the replicas 4/4 are using the same image, therfore, if i wnt to 
talk to any of the containers running i wil use the service name : javawebapp

**************dns resolution is done using serviceName 

2:43:35   *********** service creates containers and manges containers, we wil see in kubernertes we will realise that service is diff

3) what is stack in docker or docker swarm?
stack is nothing but a collection of one or more service 
stack is nothing but a collection of one or more service  *** i bliv services ie one service with replicas/ diff services with replicas
 

4) How many docker swarm nodes do you have in production? and what is their capacity?
            11 worker nodes =60GB memory and 20TB 
            03 master nodes =
                $200, 000


e.g  2:42:29
ubuntu@dockerbuild:~/app26$    free -m
          total      used        free     shared     buff/cache        available
mem:     32111       5762     25058             1       1290          26036
swap:        0         0          0
ubuntu@dockerbuild:~/app26$     free -g
          total     used           free      shared      buff/cache     available
mem:       31          5               24        0               1          25
swap      0            0               0

MY DOCKER SERVR HA 31gb


QUESTION: 
what do you use in production, this is the type of servers that we use that come with 32GB
************  my docker servers comeS with 31GB 

######################################################.

47:00

                                          DEPLOYING  A STACK
stack is nothing but a collection of one or more service  *** i bliv services ie one service with replicas/diff services with replicas
 

2:26;14   When we were using docker compose to deploy in docker env we did nt use deploy
****me but in docker swamp we will
so in deploy what is our deployment strategy?, our deployment strategy, we ar saying the number of replicas we wnt

                                     ROLLING UPDATE
*** by default rolling update is the deployment strategy, hw dis works is that when u ar tryin
    delay: 20s           to deploy a new appl, like a new version of d appli , e.g we v 4replicas wot happens is dat when a new version is released since parallel is 1, it
  restart_policy:        wil bring down 1replica of old apli version n bring up 1replica of the new appl, once d replica of d new version of d appl taken up is running, we
    condition: on-failure     bring down a 2nd replica of d old appl n bring up d 2nd replica of the new appli ,we continue d process of roling out d old version on a piece
                               by piece base until d deployment is complete n all replicas of version2 ie the new version is running.2:30:57
****so with docker swarm we can do rolling update, 



                       ***this is the same compose file we used in docker but here we added deploy; & so we can state the number of replicas we want

version:'3.1'
services:
  springapp:
    image: mylandmarktech/spring-boot-mongo: latest 
   environment:
   -﻿﻿MONGO_DB_HOSTNAME=mongo
   -﻿﻿MONGO_DB_USERNAME=devdb
﻿﻿   -MONGO_DB_PASSWORD=devdb123 
   ports:
      -﻿﻿7000:8080
working_dir: / opt/app
depends_on:
  - mongo
deploy: ###################### This will be considered only in docker swarm.
  replicas: 4             ********we wnt 3 replicas, what is the configuration?  ... 
  update _config:        ********  d configuration is that we v here parallel 1 replica, dis means that .. let me show u smt , when u are doin deployment wit docker swamp
    parallelism:         u can do rolling update, so we ar defining paralel as 1, by default rollingupdate is the deployment strategy, hw dis works is that when u ar tryin
    delay: 20s           to deploy a new appl, like a new version of d appli , e.g we v 4replicas wot happens is dat when a new version is released since parallel is 1, it
  restart_policy:        wil bring down 1replica of old apli version n bring up 1replica of the new appl, once d replica of d new version of d appl taken up is running, we
    condition: on-failure     bring down a 2nd replica of d old appl n bring up d 2nd replica of the new appli ,we continue d process of roling out d old version on a piece
                               by piece base until d deployment is complete n all replicas of version2 ie the new version is running.2:30:57
                               so when we ar defining dis, we use all of dis configuration.
    delay: 20s         *************wit d 1st replica of the appl running, u wait for 20s for it to run b4 u bring down d nxt replica of d old version ie d minmun delay sec
    max_attempts: 5      *********in bringing up each replica of d new version if it fials u v to try again 5times, after 5th attempt u can send out some signal trigger an
                            alert that smt is going wrong. ju8
mongo:
  image: mongo 
  environment:
 -﻿﻿MONGO_INITDB_ROOT_USERNAME=devdb
﻿﻿ -MONGO_INITDB_ROOT_PASSWORD=devdb123
volumes:
   -mongodb:/data/db
  restart: always       ******************** by ddefault, we dnt need restart 
volumes:
  mongodb
    driver: local



*********************************  HOW TO ACHIEVE THE DEPLOYMENT USING A STACK***********************************************2:23:18
ubuntu@dockerbuild:~/dc$ docker stack deploy --compose-file dc.yml springmongo
 whilE deploying we can see :  creating network springmongo default     , ,,, it created this ntwrk 
                                creating service springmongo_springapp
                               creating service springmongo_mongo

  ubuntu@dockerbuild:~/dc26$  docker network ls    .. we can see
    NETWORK ID          NAME                          DRIVER           SCOPE
                      springmongo_aws-network          bridge          local   ,,,,   i think this was from previous deployment
                      springmongo_default              overlay         swarm       ,, it created an overlay ntwrk for us

ubuntu@dockerbuild:~/dc26$  docker stack ls
NAME              SERVICES            ORCHESTRATOR
springmongo        2                    Swarm      *********** this is the stack that we v and ist been ochestrated by the docker swarmn it has 2 services

ubuntu@dockerbuild:~/dc$  docker services ls           .... these ar the services we jsut deployed.
ID                NAME                   MODE                     REPLICAS            IMAGE      ************************************************* 2:37:08
PORTS
kb9yek1jaeez      javawebapp              replicated                 4/4               mylandmarktech/java-web-app:latest
 q0bif39858bs    springmongo_mongo       replicated                 1/1                mongo:latest
qz400yewjt6p     springmongo_springapp    replicated                 4/4             mylandmarktech/spring-boot-mongo:latest

################## we can access the application online  using the port number 7000 as stated in the file above
***************************so we v been able to deploy with a docker compose file 


                                        UPDATE SERVICE WITH NEW IMAGE
i can also update the service with the new image name:
docker service update --image mylandmarktech/myapp:6 javawebapp  *** once i do this am changing my image name, dis wil do a rolling update,, so am updating the 
service with the new image name this wasnt possible with docker .
************ the strategy to be used for the update is rolling update  
by default, the default version to do a roll out and roll back is rolling update 
this means that when u update this services, its going to be bringing down jst one replica at a time, when it brings it down it brings up version 2 and waits for 20secs for
version 2 to get ruuning if it doesnt it wil repeat the process 5times.

ubuntu@dockerbuild:~/dc$ docker service update --image mylandmarktech/myapp:6 javawebapp 
successfully updated.. 
ubuntu@dockerbuild:~/dc$ docker service ls    .....**********now we can see the image has changed
ID                NAME                   MODE                     REPLICAS            IMAGE 
kb9yek1jaeez       javawebapp              replicated                 4/4                mylandmarktech/myapp:6
 q0bif39858bs    springmongo_mongo       replicated                 1/1                mongo:latest
qz400yewjt6p     springmongo_springapp    replicated                 4/4             mylandmarktech/spring-boot-mongo:latest

http://3.93.218.173:7000/
###################we can also access the application online and see the new version of the application and it maintains the same port 7000
**************************
so with docker swarm we can do rolling update, 



                                        ADD LABELS TO NODE
2:45:00
#Add labels to node 
docker node update  --label-add key=value <nodeid>
e.g                            can cal d key:server
docker node update --label-add server=node2   node2      
docker node update --label-add server=dbnode  node1 

ubuntu@dockerbuild:~/dc$  docker node ls   
lists the nodes


ubuntu@dockerbuild:~/dc$ docker inspect node1        ******************* i can inspect a node  
i can decide to label the node 
ubuntu@dockerbuild:~/dc$ docker node update --label-add server=nodeone qmdh9tgvdef99sryhez

& when u add label, u can decide to create a container on a particular node that u v labelled , thats very possible and thats where u use what is called 
constraint in docker.

                                   
                                    CREATING APPLICATION USING LABEL & CONSTRAINT

#use label and constraints to create in a particular node 
docker service create -p 8000:8080 --name myapp --replicas 2 --constraint 'node.labels.server==nodetwo' mylandmarktech/maven-web-app
**************if i dnt indicate the number of replica, i replica wil be deployed

ie this is docker service create, i want to create myapp, replica is 2 , i wnt to constraint dis service, node labels to be run on only node2

*******so if i wnt to create a database service and i want it created on a particular node , i wil use label and constraint

1) first label the node:
ubuntu@dockerbuild:~/dc$ docker node update --label-add server=dbnode  node1 
ubuntu@dockerbuild:~/dc$  docker inspect node1       ****** i can see
ID ": "OLC3P2C8795GSWJGYCMKUYOLP"
labels":
     "server:"dbnode"

*****so we v created a label for the node 

2)***  i bliv this is to create 'myapp' application
docker service create -p 8000:8080 --name myapp --replicas 2 --constraint 'node.labels.server==dbnode' mylandmarktech/maven-web-app
************* am constrainin it to be created in dbnode

****************Also  if we wnt to create a database on this node 
anoda e.g ... i wnat to deploy a db     ,, since its a db, i dnt need a port
docker service create --name mydb --replicas 2 --constraint 'node.labels.server==dbnode' mongo
ubuntu@dockerbuild:~/dc$ docker service create --name mydb --replicas 2 --constraint 'node.labels.server==dbnode' mongo
ubuntu@dockerbuild:~/dc$ docker service ps mydb
and we can see both replicas running in node1

##############  so we can use label and constraint to be able to deploy specific containers in specific nodes
this is very useful if for example ur node is configured for databases  , so i can v my node1 configured for databases.

      *****END***




QUESTION:
CAN WE have this a couple of nodes carying the same label?????
yes we can have 3diff nodes with the same label.

2:51:32
*************************     also:
ubuntu@dockerbuild:~/dc$ dockeer node ls
ID                       HOSTNAME                      STATUS                 AVAILABILITY         MANAGER       STATUS   ENGINE VERSION
jjdh7667hhshjnfnn        master                          ready                    active              leader      20.10.7
                          node1                          ready                    active
                          node2                          ready                    active

******************* now master is the leader bt w ev some node/containers running on master , if i dnt want ot place any containers in master am goin to drain d master
when u drain a node, docker can longer schedule containers on that node ..


                                     WHEN TO DRAIN A NODE
when to drain a node ,,why  do i nid to drian a node .......  READ UP MYSELF , GOOgle, browse
i dnt knw what is wrong with him in the video he said we wil get the note bt he will work on it first so we get al we nid , bt when i asked him he
said thers no note 

ubuntu@dockerbuild:~/dc$ docker node drain master   ........**************** wasnt working
ubuntu@dockerbuild:~/dc$  docker node drain --help  ,,,, someone told him the command 
ubuntu@dockerbuild:~/dc$ docker node update --availability drain node2
successuful
node2 is drained , once its drained, no container wil be scheduled on on node2 and if der were any containers running in node2, they wil be rescheduled in node1 and the 
master 

ubuntu@dockerbuild:~/dc$ docker service ls    
ID                NAME                   MODE                     REPLICAS            IMAGE 
kb9yek1jaeez       javawebapp              replicated                 4/4                mylandmarktech/myapp:6
 q0bif39858bs    springmongo_mongo       replicated                 1/1                mongo:latest
qz400yewjt6p     springmongo_springapp    replicated                 4/4             mylandmarktech/spring-boot-mongo:latest

***************lets find out what we v for  this service : javawebapp   
ubuntu@dockerbuild:~/dc$ docker service ps javawebapp
w ecan see it shutting down services that were running on node2, all the services wil be shut down bc w ev drained node2


QUESTION:   2:55:02
Why do we need to drain a node???
we can drain a node if mayb we trying to do some patching
want to update the software
want to install some packages   ....... in that case u wil v to drain the node 

QUESTION
2:57:00   is docker compose the advance version of docker file ,, can we run containers and basic process and use docker jst by uisng docker compose n not
the file???

ANS:
there are 2files that are independent, we v the 
docker file and
docker-compose.yml
docker-compose is nt the advanced version of the docker file , docker-compose is just a file that we can use if we ar trying to deploy multiple services, we can jsut 
declare all what we want to create incluing volumes ntwrk, services by justing writing a script and doing docker compose up, its going to deploy all the u wnt to deploy,
deploy the applications, create d volumes n netwrks, dats whta the file does..
but docker file is a file that contains lists of instructions which is used to create a docker image , thats the difference
so we can use the docker compose file without the actual docker file. 
bc we nid the docker file to create the image and once the image is created, we nid dodcker-compose to deploy the application, so docker-compose is replacing the multiple
docker runs command and  and docker run create, docker vol create, docker-compose replaces those, so rather thsn u running multiple commands, u just declare everytin in a 
file and it will create whatever u wnt to create in the docker compose file once u v declared them.



2.58.56****** WHEN U RUN DOCKER SWAM init, 
By default it creates an overlay ntwrk, the overlay ntwrk is what permits your docker server to communicate in a cluster like this bc in normal docker der 
is no overlay ntwrk for that reason, you cannot v docker servers in a cluster like this bc node1 cannot talk to node2 in normal docker
so once u v the overlay ntwrk, when u create ur containers , when you create ur services, those services can talk to each other irrespective of whether they
ar created in node1 or node10 bc of the overlay ntwrk n the DNS registration is done using the service names


IS THERS AN ORDER OF COMMUNICATION??????
when you install docker swamp, it comes with an overlay netwrk, the overlay ntwrk permits communication to flow within the cluster n when u deply ur services, ie the 
containers that u deployed....the master can schedule those containers on any nodes, he can wqually schedule it on the master node, so if u v  diff appli or the same 
application runing on a diff node, the question is HOW WILL THIS CONTAINERS DISCOVER EACH OTHER,?????????....  service discovery
they are going to be doing Resolution using the service name , SO WITH that, your logmgt container can talk to ypour app container as well with relative ease  bc they 
use the service name 

********** this is just a foundation for u to understand kubernetes bc in kubernetes, we are going to be taking a piece by piece analysis, we v kuberntes for 27hrs, wich is
3wks nonstop n we will really tk it on a gradual note so that u can esaily underatnd hw this relates to service discovery in the kubernetes, how is service managed in the
overlay ntwrk,,????????????
it is managed by overlay netwrk permit traffic between all the nodes to talk to each other and you are equally required to open the ports and all the servers can talk to 
each other with relative ease

********IS THERE A LIMIT TO THE NUMBER OF NODES THAT CAN BE LINKED TO THE MASTER
ANS:
THERe is no limit, you can add as many node as u nid to add bt u just add based on your work load ,, normal u add node base on the application you'l b deploying in that 
particular cluster

******
WHAT DOES THIS APPLICATION WE DEPLOYED DO?????????????????
Its an online bnaaking app where it collects data, u hardly see what it dosewhat it does, if u can understand what the appli we do does , u should be able to undertsand any
other function that any other application can do ,,, bt is ia an online app , u users can login ,credit their account , get authenticated n stuff


####################################################################################################################################


3:03:50
we hv one other project where we do jenkins docker swarm integration


      **********THE PROJECT IS SMT LIKE THIS *************************
In this docker compose file, we v a jenkins file like this below, in the jenkins file we are defining functions like the maven home
                         so when u are doing a build, here is the docker compose file u ar going to refer to do a deployment
docker-compose.yml 
version: '3.1'
services:
  springboot:
    image: mylandmarktech/maven-web-app:$buildNumber   ,, so in the jenkins job, we v smt like this where dis is $, buildNumber 
    restart: always
    ports:
    -﻿﻿9090:8080
    networks:
    -﻿﻿mavenappbridge
networks:
   mavenappbridge:
ニニニニニニニニニニニニニニニニ
  **********************************the dodcker compose file ends here.............


==                *********************** in the jenkins file we are defining functions like the maven home

Jenkisfile
 node{
   def mavenHome = tool name: "maven3.8.4"    , we v the tool name 
   def buildNumber = env.BUILD_NUMBER    ... here is our build no., we v a function build no.,so we ar defining build number as a variable,so dis build number is a varibale 
 }
stage( 'git'){
echo"Jenkins Job Number ${buildNumber}"
git "https://github. com/LandmakTechnology/maven-web-application"     ,, wil clone the code frm repository n while cloning the code, it executes echo jenkins job buildNumber
}                                                                u knw when u are doing build in jenkins, it comes with number , so dis is d build ,once d build takes place
stage ( 'mavenBuid'){                                   once we clone, we do maven build as part of the jenkins job 
    sh"${mavenHome}/bin mvn clean package"                      nd i hv skipped my sonarqube report, nexus, i go straight to docker
｝                                                        
stage docker budid t mylandmarktech/maven-web-app: (buildNumber)™    so in docker build, we are doing docker build, wit d help of a docker build command n when u do that d 
}                               build number is represented as this variable( buildNumber) frm the jenkins file, so dis becomes d version no.,so when u wnt to tag it u do 
                                smt like this in the jenkins job :stage docker budid t mylandmarktech/maven-web-app: (buildNumber)
stage('dockerPush' ){           
sh "docker push mylandmarktech/maven-web-app:${buildNumber}"    then we do docker push like this , if u do docker push like this , u wil v stage, we wnt to deploy
｝
stage ('deploy' ){                           if u wnat to deploy it will now depends on (what type of script is this? its scripted   ********he didnt finish dis statement 
  sh"docker-compose up -d"    we v deployed ,, so it is deploying the application for you , dis is when u are deploying using docker compose 
  
  sh" docker stack deploy --compose-file docker-compose.yml webapp"                        *********** if u are deploying using odcker swarm
                           so i wnat to deploy this webapp, docker stack deploy, its going to mk use of this file  docker-compose.yml
  
sh" docker service create -p <hostPort>:<containerPort> --name <serviceName "

        and as part of your code , we want to deploy compose file bc mayb the compose file(docker-compose.yml)is having the docker compose file itself as we
can see d compose file before the jenkinks file

########################this is jenkins docker swarm intergration 

QUESTION
and someon also said we can also do docker service create 
it means we deploying using just what ? .. 
we will not use a file 

bc we saw the option to use doing a deploy
either u use a file or you go without  a file 
and if u go without a file its going to be docker service create  
docker service create -p <hostPort>:<containerPort> --name <serviceName   .. in this case ur just using imperative approach..
















