TYPES OF VARIABLE , VAULT 

9:00
prof diff btw task and handler 
task is executed in the playbook chronlogically frm top to bottom while 
handlers is a task that can only be executed if there are changes in a particular task 

17:00
TO check the public ip using ansible 
ansible dk -a "curl ifconfig.me"
 
21:32
to gather facts abt the instance
ansible dk -m setup
hashicorp VAULT.:
It is use to create and store secrets in hashicorp.

37:00
debug is like able command in linux

40:37
types of variable

Variables:
  1. runtime variables 
  2. playbook variables 
  3. host_vars variables 
  4. group_vars variables


***********
variables in ansible:
vars.yml                 ******** variable file
---
- hosts: localhost
  vars:
    name: From Playbook
    password: dev@123
  tasks:
  - name:  demo vars
    debug:
      msg: "{{name}}"
  - name: vars demo2
    debug:
      msg: "{{password}}"



5:07
*********** 
 displace variable:

In order of priority, run time variable wil take 1st place 
 runtime variables   = ist
  playbook variables  = 2nd
  host_vars variables  = 3rd
  group_vars variables = 4th



51:20 

 bc its not safe for sensitive info like passwd in an un encrypted format , ie anybody can view so we can use either hashicorp vault or ansible vault

HAshicorp vault:
it is used to create  and store secrets in hashicorp

ANSIBLE VAULT.:
===============    
stores and encrypt confidential or secrets  data. in ansible like:
 [password / sshkeys / tokens / certificates ]   


TO ENCRYPT MY all.yml file :
ansible-vault encrypt /etc/ansible/group_vars/all.yml

........... and you will be requested to setup a password after which when u cat your file ull see that your password has been encrypted

ansible-vault decrypt /etc/ansible/group_vars/all.yml
ansible-vault view /etc/ansible/group_vars/all.yml
ansible-vault edit /etc/ansible/group_vars/all.yml
ansible-vault rekey /etc/ansible/group_vars/all.yml
ansible-vault create  /etc/ansible/group_vars/all.yml




################

 loops
 ========== 
Playbooks with loops/conditions:
web [ ubuntu / Redhat / windows ]
- hosts: localhost  
  become: true
  gather_facts: false  
  tasks:
   - name: Install packages
     package:
       name: ['nano', 'wget', 'vim', 'zip', 'unzip', 'tree']
       state: latest  
     when: ("ansible_distribution" == "Ubuntu")
---
- hosts: localhost
  become: true
  tasks:
    - name: Install list of packages
      become: true  
      yum: name='{{item}}' state=present
      with_items:
       - nano
       - wget
       - vim
       - zip
       - unzip  




