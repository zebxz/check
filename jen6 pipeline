jenkins default user is jenkins
===========================================
Plugins Mgt in Jenkins 
==========================
 ---Plugins extends the functionality of jenkins, maven, etc.   
plugin make smt more useful we add plugins , jst add certain features to it 
mvn package = 
for maven we need plugin for each of the following
 mvn validate/
       compile/
       test/
       package/
       install/
       deploy/
      clean/  to even delete old artifact
       sonar:sonar for code quality analysis 
      the 1st isplugin and the 2nd is goal
sonar[plugin]:sonar[goal] 

=========================
Technology stack:
  Linux Servers/OS 
  Windows 
  macOS SYSTEMS  
 diff types of software
 maven 
  Nexus  
  SonarQube   
  Bash shell scripting    
  Git  
  GitHub  
  SonarcLoud  
  AWS cloud     
  NGINX 
  java  
  Tomcat 
  Jenkins   

maven is running in jenkins so we 
2:13:00   day1)start runinng, day2)keep runinn, day3)
continue to run, 4)dnt stop running


PIPELINE JENKINS PROJECTS:
FREE-style
maven
we want to create a pipeline that can automate the test and build process  
pipeline:
  Jenkins Pipeline scripts are generally written in groovy 
  Jenkins Pipelines scripts are called Jenkinsfile 

  we have scripted and  
  declarative Pipeline scripts
2:05:21
scripted file starts with a node while declarative starts with pipeline
scripted file is restricted to a particular node e.g in pipeline we hv  "agent any
pipeline{
    agent any
    tools {
        maven 'maven3.9.4'
    }
    stages{
        stage('1.clone'){
            agent {
                labels 'build'
            steps{
                sh "echo 'Creating artfacts' "
                sh "mvn package"
            }

Jenkinsfile = scripted:

Jenkinsfile is a file generally written in the groovy language:
Jenkinsfile helps to better manage and automate jenkins jobs/tasks  
Jenkinsfile introduces infrastructure as a code concept with all its 
benefits 
what is a groovy language?  lets work on a ticket  

Ticket0055:
  Create a tesla-wepapp Jenkins scripted pipeline job:
Jenkinsfile
============
comit id helps identify the diff versions
jenkins pipeline is just a file
we want to create a file , everytin will run inside a node 
jenkins server is a node

when developers commit their code in github, we have stages... so 
jenkinsfile:
node{
    stage('1.CloneCode'){}
    stage('2.mvnBuild'){}creating artifacts but b4 the build happens, it performs testing so it does testing-build eithr war or ear
    stage('3.CodeQuality'){} 
    stage('4.UploadArtifacts'){}into nexus
    stage('5.Deploy2UAT'){}is the cx happy? then
    stage('6.6ManualApproval'){}
    stage('7.Deploy2Prod'){}if ders problem, then 
    stage('8.emailNotification'){}
}
==============================================
https://github.com/LandmakTechnology/maven-web-application
https://github.com/LandmakTechnology/maven-web-app = private  Repo
single line comment in groovy  = //  
multi-line comment in groovy  = starts  /*     ends */

31:29
node{
    def mavenHome (is the tool name) = tool name: 'maven3.9.4'
    stage('1.CloneCode'){
        //Jenkins is running on a Linux system 
//when jenkins id running on linux system,there are 2ways to achieve cloning of code, the first is to 
  sh "git clone https://github.com/LandmakTechnology/maven-web-application"
       // git "https://github.com/LandmakTechnology/maven-web-application"
        //Jenkins running on a windows system
      //  bat "git clone https://github.com/LandmakTechnology/maven-web-application" 
//NEW ITEM -REQ FIELD:tesla app pipeline- select PIPELINE -ok - select pipeline: -PIPELINE:DEFINITION :pipeline script: paste script - apply save, build now
    }" 
      //40.09 error..... run stage2 with satge1 but comment evertin except > git "https://github.com/LandmakTechnology/maven-web-application"
Stage('2.mvnBuild'){ 
//...  when we install maven in the bin dir, we find mvn but the bin dir is found in 

//maven was installed in jenkins so maven is running in my jenkins server , so where is maven running in jenkins/home dir ,so jst b4 the stages we can define a function.
//my maven home was instal as a tool, the tool name is maven3.9.4
//we want to def a function called > maavenhome = tool name: maven3.9.4   

//so inside the maven3.9.4 which i hv defined as a function, i can call the function using "$
 
sh "${mavenHome}/bin/mvn clean package"

//so in my maven homedir wich IS installed IN MY JENKINS SERVER as maven3.9.4 , I WILL execute mvn and
//i will use the mvn both for maven, sonarqube and nexus
  //so -dashboard-project-config- pipeline- paste script- aply save n buiid now

    }
    Stage('3.CodeQuality'){
        //sh "${mavenHome}/bin/mvn sonar:sonar"
        //run stage3 with stage2 and stage1 with only >>  git "https://github.com/LandmakTechnology/maven-web-application"  
        //edit pom.xml propertiesTAG with SonarQube server details
    }
    stage('4.UploadArtifacts'){
        sh "${mavenHome}/bin/mvn deploy"
        //edit pom.xml distributionManagement TAG with repository details
        //edit settings.xml with nexus-user login credentials 
       //ensure nexus port is open on firewall
    }
    stage('5.Deploy2UAT'){
             //we are runing from stage1 as well
        //use deploy-to-container plugin via pipeline syntax  2:36:32 syntax helps to ease pipeline script writing
click on syntax - sample step: select deploy container - deploy war: target*/ - add container -credentials: tomcat cred - then copy tomcat server url - click generate 
so am using the deploy adopters 
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://34.219.51.216:8177/')], contextPath: null, war: 'target/*war'
        //Deploying [/var/lib/jenkins/workspace/tesla-app-pipeline/target/tesla.war]
    }
    stage('6.6ManualApproval'){
        sh "echo 'Please review the application performance' "
       : once it is reviewed we will use a parameter called timeout(time:600, unit:'MINUTES') {
        input message: 'Application ready for deployment, Please review and approve'
how do we review, we observe the application , we click on stage 6 .. (we see it on the browser) is this what i want, the client biz analyst will review n decide.. 
then once its approvd, we click on proceed and then deployment in prod has taken place. 
      }       
    }
    stage('7.Deploy2Prod'){
      sh "echo 'Deploy application to the customers/production' " 
   // to deploy application we use thw same deploy to container pluggin
     deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://34.219.51.216:8177/')], contextPath: null, war: 'target/*war'
         
    }
    stage('8.APM'){
//we want to deploy application performance monitoring tools e.g NEW RELIC
        sh "echo 'monitoring and observation and alerting' "
 //OR
        sh "echo 'application performance Monitoring in progress' "
    }
    stage('9.emailNotification'){ // or slack channel // project - pipeline syntax - sample step: select embedded email - to : the email address - add recepients: buiders users,devlopers,
requestor,contributors..- buid n deployment status - body: hi team . the build and deploymeny status for tesla app as folloes , regards, landmark technologies - click
genertae pipeline sysntax and copy ..... - click on my job up - cong - pipeline -paste - apply n save build now 
        sh "echo 'notify the team for unusual accurances' "
        sh "echo 'notify the team if the applications are down' "
        sh "echo 'notify the team if the latency is higher that expected' "
        emailext body: '''Hi Team,

The build and Deployment status for tesla-app follows.

Regards,
Landmark Technologies ''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'mylandmarktech@gmail.com'

    }
}
wwe hv created this jenkins job ith the help of the jenkins job we hv been able to deploy the application and we can add this file in our SCM/ source code
jenkins file scripted 33

1:24:56

click new item-paypal project -pipeline - ok
pipeline:definition: pipeline script from SCM - SCMZ:GIT - PASTE REPO URL -CREDENTIALS:GIThub credentials- scriptpath:(default name 4 jenkins file is jenkins file)
so we go bk to our git hub and copy our jenkins file name n paste then save then build now ... when u hv a jenkins job, u can use it for any no of jobs
it is building with exactly what we already wrote n configured.

1:30:00  multiline comment
1:38:40   my view



options:
    Discard old builds
    Keep 2 builds for a maximum of 5days  


myViews: Filter/classify for projects 
disable project:
  Projects are disabled during server maintenance 

this project is currently disabled


Continuous Development ---> 
when developers commit to the master branch.
   Jenkins triggers a continuous integration job :
   If the CI job succeeds Jenkins will trigger the continuous Delivery  JOB   

 scripted Jenkinsfile:
node{
    stage('1.CloneCode'){}
    stage('2.mvnBuild'){}
    stage('3.CodeQuality'){}
    stage('4.UploadArtifacts'){}
    stage('5.Deploy2UAT'){}
    stage('6.6ManualApproval'){}
    stage('7.Deploy2Prod'){}
    stage('8.emailNotification'){}
}
                   ****************************************sept23 del
Ticket0056: the most common today
in declaraclarative pipelineline, everytin is declared and there are more options
  Create a tesla-wepapp Jenkins declarative pipeline job: 
Declarative Jenkinsfile:
=========================
pipeline{
    agent any   
    tools{}
    options{}like discard olduilds , del workspace
    triggers{} we can add triggers 
    stages{ dif stages
      stage('1.CloneCode'){}
      stage('2.mvnBuild'){}
      stage('3.CodeQuality'){}
      stage('4.UploadArtifacts'){}
      stage('5.Deploy2UAT'){}
      stage('6.6ManualApproval'){}
      stage('7.Deploy2Prod'){}
      stage('8.emailNotification'){}
    }
    post{}
}
Declarative Jenkinsfile:
=========================
pipeline{
    agent any 
    tools{
        maven 'maven3.9.4'
    }
    //options{}
    //triggers{}
    stages{
      stage('1.CloneCode'){
        steps{
            sh "echo 'cloning the latest application version' "
            git "https://github.com/LandmakTechnology/maven-web-application"
        }
      }
      stage('2.mvnBuild'){
        steps{
          sh "echo 'running JUnit-test-cases' "
          sh "echo 'testing must passed to create artifacts ' "
          sh "mvn clean package"             
        }
      }
      stage('3.CodeQuality'){
        steps{

          sh "echo 'Perfoming CodeQualityAnalysis' "
          //sh "mvn sonar:sonar"              
        }
      }
      stage('4.UploadArtifacts'){
        steps{
          sh "mvn deploy"   
        }
      }
      stage('5.Deploy2UAT'){
        steps{
            deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://34.219.51.216:8177/')], contextPath: null, war: 'target/*war'
        }
      }
      stage('6.ManualApproval'){
        steps{
          sh "echo 'Please review the application performance' "
          timeout(time:600, unit:'MINUTES') {
          input message: 'Application ready for deployment, Please review and approve'
      }  
        }
      }
      stage('7.Deploy2Prod'){
        steps{
            deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://34.219.51.216:8177/')], contextPath: null, war: 'target/*war'
         }
      }
    }
    post{
        always{
  emailext body: '''Hi Team,

  The build and Deployment status for is a success.

  Regards,
  Landmark Technologies ''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'mylandmarktech@gmail.com'

        }
        success{
  emailext body: '''Hi Team,

  The build and Deployment is a success.

  Regards,
  Landmark Technologies ''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'mylandmarktech@gmail.com'

        }
        failure{
  emailext body: '''Hi Team,

  The build and Deployment failed.

  Regards,
  Landmark Technologies ''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'mylandmarktech@gmail.com'

        }
    }
}

Jenkinsfile-s 
node{}
pipeline{
    agent any
    tools {
        maven 'maven3.9.4'
    }
    stages{
        stage('1.clone'){
            agent {
                labels 'build'
            steps{
                sh "echo 'Creating artfacts' "
                sh "mvn package"
            }
            }
        }
    }
}

Explain how you have applied Jenkins and resolve build failures?? 

pipeline jobs  
groovy scripts and Jenkinsfiles  


2:25:20 BUILDING FROM PRIVATE REPO  wil be done 9 out of 10 in the coy
my views- paypal- new item- free style- ok
i must enter my github credentials to be authenticated
but building frm public repo i dnt nid a github credential

webapp  :
    https://github.com/LandmakTechnology/maven-web-app = private  Repo

1:28:20 for pipeline project
  node{
    stage('1.clone'){
      git credentialsId: 'github', url: 'https://github.com/LandmakTechnology/maven-web-app'
    }
  }
2:25:20 BUILDING FROM PRIVATE REPO
my views- paypal- new item- free style- 
