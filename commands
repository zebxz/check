netstat -utlpn
   ls --version


LINUX
****** administrator is called root user

Linux pre requisite softwares, WHAT IS A COMPUTER, SOFTWARE COMPONENTS, VENDORS /MANUFACTURERS,CLASSIFCATION OF COMPUTER, ENTERPRISE COMPUTERS, WHAT DETERMINES THE CHOICE OF AN OS 
(COMPUTER SYSTEM), HOW ARE TASKS EXECUTED/PERFORMED ON A COMPUTER SYSTEM,  LINUX OS AND LINUX COMMANDS: Mobaxterm, HOW CAN SOFTWARES BE PROVIDED,  CREATING AN ACCOUNT IN AWS & LAUNCHING 
A SERVER 


linux 1 
 **** to create and connect to server, check end of linux1 & begining of linux2 note

Linux 
pre requisite softwares
SSH - SECURE SHELL
  These are some of the softwares to download
  1) mobaxterm X server with SSH, Telnet, RDP, VNC and X11
Download link 
https://mobaxterm, mobatek.net/download - home- edition .html

ii) supper PUTTY
OR PUTTY
Download link:
https://the earth.li/-sgtatham/putty/latest/w64/putty-64-bit-0.74-installer.msi

iii) Gitbash and powershell



                                                 LINUX 2
LINUX COMMANDS, FILE MGT RELATED TASKS( LINUX FILE STRUCTURE), ROOT DIR (/),(home contains home dir details of that user eg we hv home dir of the root user,
home dir of ec2user (default user ie created by the sys) and home dir of any other user that we create) CONTENT OF ROOT DIR;BIN,SBIN (excuted by users with priviledge),diff users in linux
CONFIGURATION FILE,LINUX BASIC COMMANDS, HOW TO RUN TASK IN LINUX SYSTEMS(cli,gui,script)
TYPES OF TASKS (FILE MGT:dir mgt command , install command not found ;INSTALL TREE, CREATING DIR, sudo, cd ; forward and backward move, create hidden file, how to run task in linux )
        (other tasks we will explore are: Task like; user mgt, system mgt,process mgt, security mgt, package mgt, serveice mgt, monitoring)
 


sudo - to create a new user
Ls -a = list directory content with files and & dir 
starting with . ie including (hidden)files   ********* i added this hidded when i was making the summarized notes


ls dir name =  eg ls pwd                                          ls/filename1/file inside file1
ls /      ie to list the content of the root dir
ls = list the content of a directory = list the content of your pwd eg ls OR ls /home/ec2-user  ... BC /home/ec2user is my pwd
pwd = present working directory
hostname = serverName
cd = change directory
commands to change hostname : sudo hostnamectl set-hostname demo
                                sudo su - ec2-user
sudo su - user = to switch user

 HOME; contains users' home directory details 
ls/home 


bin contains binary files (commands)
cat fileName: used to read the content of a file
ls, pwd, clear, cd, touch (to create a new file)    eg  touch test.txt
cat -n filename
******30:18
i just did adduser paul and paul was created

                                              SBIN 
we also hv system binary files ,can only be executed by user with admin priviledges ,the admin-user/or the root user/administrator 
sbin: contains system binary files/commands
eg of system binary files : 
adduser, to add user
passwd, : can be used to assign passwd to users
chage, used to modify users expiry date 
chown  change own 

we aslo hv the etc dir 
also var dir 


we can cat to check the content of etc/shadow ie info abt the passwd of user
[root@demo~] # cat/etc/shadow 

******* etc : contains configuration files
/etc/shadow = detail information about users passwd
/etc/passwd = detail inf abt users                         ****** contains file of all users
/etc/ssh/sshd_config = ssh configuration details
   ssh=secure shell
sshd = ssh service/ daemon = user Name/passwd    eg to access your server via ssh you need username/passwd OR username & ssh key
UserName/ssh -private-key

- tmp: temporal files
-opt: directory where softwares & packages should be installed, it is the best place to install 
- var: var directory contains dynamic files
eg /var/logs/messages

-pro directory: Contains inf about the hardware (hardware info)
eg mem info - memory information
cpu info  - cpu information
ï¼»root@demo-# cat/proc/meminfo = to check for info about my memory




                                        LINUX 3a
TASK CARRIED OUT ON COMPUTER;( FILE Mgt: FILE RELATED COMMANDS), CONNECTING TO SERVER AS IAM USER,  AND AS A ROOT USER, 

vi file name; vi is a file editor used to create and/or modify files

                         TO EDIT /MODIFY FILE (LinuxOS )
vi & vim are text editors
can be used to modify, create and add contents to files

we shsall use the vi command:
vi has 'insert mode' and 'command mode'

- Vi FileName:  this is a file editor used to create and/or modify files and also to add content to files
eg ec2-user@demo ~ ] vi list

you start accessing the file in command mode
in command mode we cant modify content
press the 'i'key to enter "insert" mode
press "esc key" to enter command mode


2) save and quit 
1) press 'esc key' to enter command mode
2)type ':wq' or ':wq !' and press enter -key to save & quit

2b) short cut save and quit
press s "esc key"  to enter command mode 
press and hold the shift key and double click on the "Z" key to save and quit = press+hold

3) Quit without saving
press "esc key" to enter command mode
type ":q!' and press enter key to quit without saving 

-vim (vim & vi to modify files)  
-nano filename: next 
 start modifying/typing
1) save and quit , type ctrlx and press 'y'
2)Quit without saving: type ctrl x and press 'n'
3) cancel and continue to eedit: type ctrlx and press 'c' to continue editing

vi and vim are text editors can be used to modify,create  and add contents to files

      File editor (windows)
sublime text
bracket
notepad ++
vs code
atom
eclipse


   tesxt editors  for mac OS/IPHONE
textmate,bracket, notrpad , vscode, atom, eclipse


((((( to read content : cat, less, more, tail, head.





               3B
Cont.....  ***** RUNNING TASKS ON YOUR SERVER,( read file content/info of users, file bk up, Renaming &relocating  files /directories counting line & character in a file, deleting file,
RESOURCEULTILIZATION (soft link,'L', hard link'-', CREATIG SHORTCUT /LINK TO FILES, fields for file (file type,permissions,number of links,owner,grp owner,size, date &time file name/dir),
hidden files, long list, search for file (find)


    Read the content of a file:
cat fileName:  Read /display file content
cat -n fileName : list content of a file 
head fileName ; display the 1st 10 lines
head -3 fileName: : Display the 1st 3lines
head -1 fileName : display the 1st file line 
tail file name : display the last 10 lines              the press 'q' to leave
less fileName : you can go back and fort pages in a file with many pages
more file name: to read page by page


    READ THE INFO OF USERS
cat/etc/password = all the users detail in our server
tail etc/passwd  = users recently created 
tail -3/etc/passwd = -3 last user


     FILE BACKUP
CP = creates another copy of your file
cp = filename new filename 


      Renaming files /directories 
mv filename  new filename
mv dirname   new dirname


      Relocating file / directories
mv file to be maoved New locataion (file dir) 
eg we have a file in one  home/ec2-usere  (in our present working dir) but once its moved we cant find it in ls again
ie it lists the content of our pwd



              Deleting file (with or without content)
rm filename

 online
To remove a directory using the rm command in Linux, follow these steps:
1) rmdir dirname           :  to delete an empty dir 
2) rm:                     :  to delete empty and non-empty directories
  a) rm -r dirname         :  If a directory or a file within the directory is write-protected, you will be prompted to confirm the deletion
  b) rm -rf                :  To remove a directory without being prompted
  c) rm -r dir1 dir2 dir3  :   To remove multiple directories at once, with a prompt to confirm
  d) rm -rI dir1           :  To remove multiple directories without a prompt
  e) rm -rv directory_name :  To see a list of deleted files


**********                      counting line and character in a file 
wc fileanme = in the order of lines/words/character

wc -l = no. of lines
wc -c = no. of character
wc -w = no. of words

wc fileName  
  wc note.rn  
other commands:
  clear, sudo, exit   
[ec2-user@demo ~]$ wc list.txt
   17  16 121 list.txt
   lines=17 
   words=16 
characters=121


   CREATIG SHORTCUT /LINK TO FILES
Hard link : copy of a file (hard link starts with '_') just like a normal file 
ln fieName linkName
ln list.txt my list

softlink: symbolic to the file ) short cut link to the file
ln-s filename linkname
ln -s new.txt mylist
*** soft link starts with  l & the file size is smaller compared to the original file 
eg, original file can be 250mb in size but softlink can be 5mb in size


[ec2-user@demo paypal]$ ll
total 56
TYPE:
l    rwxrwxrwx. 1 ec2-user ec2-user     6 Jul 26 01:28 notes.yml -> rn.txt  : SL  
-    rw-r--r--. 2 ec2-user ec2-user 25297 Jul 26 01:05 notes33.yml :  HARD LINK


Fields for files:
  1)  File type    [-file, d=dir, l=soft link]   

  2)  Permissions [ owner=rwx  group=r-x  others=r-x ]   2023 G Wagon  = Ifoema 
           
  3)  Number of links
  4)  Owner [ ec2-user ]
  5)  Group Owner [ Engineer ]
  6)  Size of the File in Bytes
  7)  Date and Time of creation
  8)  File name/Dir Name

file type, permissions,number of links,owner,grp owner,size, date &time file name/dir


                     HIDDEN FILES
FIles that start with .
ls- a = to list hidden files


                  LONG list
ll -t  : lists files from last created to the file that was created first     (based on the time file was created)
ls -l  : lists files in alphabectical order    (sort)
ls -ltr  : list files based on reverse order (file created first on top will be created last below)
reverses the time file was created
ll   : long list



       TO SEARCH FOR FILE 
Find




                                LINUX    4A
FIELDS FOR FILES, FILE PERMISSION/SECURITY/ Access levels, HOW TO CALCULATE /DETERMINE PERMISSION FOR FILES, FILE MGT COMMANDS ( sudo, chown, chgrp, )GREP, PIPE,COMMANDS, FIND;searhes for
files & directories (find ~ -name fileName), searching a file in the root Directory:(sudo -u root find / -name fileName)


          LINUX  4B 
SEARCHING FOR FILES;find, ABSOLUTE AND RELATIVE PATH, THE DATE COMMAND ,TO CHANGE TIMEZONE, User Mgt,  HOW TO CREATE USER;su command , CREATING A USER'S PASSWORD ( BY SUDO PRIViledged 
user),HOW TO GRANT SUDO ACCESS TO A USER IN LINUX  ( when to grant access/why grant access),CREATE THE GROUP FIRST B4 ADDING A USER,  TO MODIFY A USER

         
                 '




                         LINUX5
CONFIGURE/SETUP YOUR SERVER FOR PASSWORD AUTHENTICATION, connecting to server with private key and password  and internally (su -)
******************    by default user's can ONLY connect to aws ec2 linux servers using ssh-private-Key
 Create user accounts & verify, assign password to users,grant sudo access to specific users, Set the expiration of users account,  configure/setup your server for password authentication?  
 connect to the server externally as landmark as landmark user using password, Lock datti's password and server access, Create manager's group and add user landmark to it.
delete user's account , delete user's account including home dir. 




SCRIPTING





    GIT 1

 git status --- tells us if our local repository/project directory we are creating has been initialized as a repository or not and also if any file has beeen commited to our repository
  git init   --- the first command       
    creates a Local repository [.git]  
    initialises the git repository
****without git init command, that is not a development repository, it  will not support any git command
git log           = to list the number of commit that we have 
                     ( so we git commit  -m "first version", then git log) then we get the commit id 


******  To add a file 
      ** working area to >>>>>> staging area
git add filename : git add boo
one file 
git add filename
few files
git add.
many files
git add*

 *****  TO COMMIT the changes

In our staging area  >>>>>>>>>>>> local repository
     git commit -m  "   "

*****  Git push
local repository   >>>> Remote repository
       git push ( push changes from local environment to remote repository)

******  git log           = list all commits  ( with their id) all versions
*****   git reset        = to go back to working area form staging area
*****   git show commit ID   =
  
git2 :  1;07;00
git clone   =     dodwnloads a version of the entire development work/project in your work environment
git pull   = pulls the changes to your local env

git remote -v    = to tell us if we have any repository detail in our local environment 
                         Tells us how many remote repository we are managing 

******to add a repository  URL in our local environment 
      git remote add paypal https://github.com /zebxz/paypal
 git remote add paypal https://github.comzebxz/paypal    
     i just realised that the "paypal i" before https thats the aiiasname not the last paypal


  
******* GIT PUSH 
   git push aliasName branchName  
(alias Name )master
eg;  git push pp master                   ***** Pushing to the master banch

                
            (alias name PAYPAL)
  git push  paypal master (from my local environment to general SCM)
  username for https://github.com:ceekeh
password for https://\legal 2045@github.com: token
we have to create a token bc git no longer accepts password

 ******* go to github 
select settings aand developers settings 

                   token classic
select personal access token and generate token    (less than 30days )
selecet all repository 


7)   GIT PULL  to see the work others have added to the project i have to pull to my env

After the task i pushed has been executed/worked on by other developers
 === GIT PULL paypal master 



                 git2 
1) git branch               = to confirm we have created dev
2)git branch dev             =  we run this command to create dev branch
3) git switch dev             =  change from master to dev and vice versa
4) we vi into app.java file
5)we git add.
6) we commit "m"
7) git switch :                 = move from dev to master
8)git diff dev (commit ID )    = we run this in master to review the changes that happened in dev             
                                  git diff (b0f7fcf) ie ID of the commit done in dev branch                by d push command, i bliv  we can push to either branches
 GIT4;  git diff (dev or stage) to see the changes then vi into the file & delete the conflict ie (the errors>>> & its lines)
         GIT4: Git diff pp/master   = to see the changes we are bringing over  (from the "master&dev branch" in the remote repo)
9) git merge dev               = if we are satisfied with the changes (done in dev in local repo)    
10) we ls  / get log    ( we see head >master,dev)   = to ensure all changes  from (git merge dev ) were applied in the master branch (ie we hv all the files/commit in the master )
11) git push aliasName --all     = git push pp --all ( this is done in master in our local repo )        ******* in what case scenario can dis happen, to push to all
                                     creates dev branch in remote repo and pushes the chnages from local repo to dev/master in remote repo

git push aliasName branchName      to push to a particular branch


git branch           = list the branchless 
git checkout/switch branch name =  git switch dev
git push aliasName --all  = push changes to all branches  ie to the master and dev branch in github (automatically creates a  dev branch if there was no dev branch before)
git push pp --all 
git branch - v             =  display all branches in your repo and also tell you what branch your currently working i
git remote remove alias Name    =  remove repo from the local environment 
git remote remove repo URL 


   git fetch --> It brings changes in the code to the LocalRepo   *** 2:10:00 ( this requires a review before merging) , MOSTLY recommended
  git pull --> It brings changes in the code to the localRepo and & Working area    ( this merges without a review)

git diff pp/master = git diff to review the changes ( pp is prof repository alias name) 
git merge pp/master = to merge the changes

git pull pp (ie alias name)
                 OR
git fetch (aliasName) ie PP    
Git diff pp/master   = to see the changes we are bringing over  (from the "master&dev branch" in the remote repo)
then git merge pp/master    = form local repo to workin area bc we used git fetch & git fetch brings the changes to only the local r


GIT4
 TO RESOLVE THE CONFLICT
Vi app.java, delete  <<< HEAD  &  >>>>>>>>   stage
we git status : show us both files have been modified 
                        " both modified"


 Git cherry - pick commitID 
we merge a particular commit among many commits

 

                     HOW TO MERGE CHANGES IN GIT
HOW TO MERGE CHANGES IN GIT
 git merge
git cherry pick
git rebase

DEBUGGING
  IN THE WORKING AREA , to clean a code we are not satisfied with
git clean
git clean -n : tell you the files/changes that would be deleted in working working area
git clean -f : cleans the working area
git reset   : to move a file back to the working area from the staging area
git revert commitID :  to delete the latest commited files in the local repo for a specific commit
                        eg, he created a file, added it & commited, then ran "git revert the commitID" to delete the committed files both from the local repo & the working area, therefore the file no longer exists.


How to see/determine what happened in a commit
to see the details;           git show commitID
to merge a specific commit;   git cherry-pick 518110e  
good commit msg:"conflict fixed"  git commit -a -m "CONFLICT fixed"


55:30 ***********    DIFF BETWEEN TAGS & BRANCHES
difference b/w tags and branches :
=== Tags                                                  ==Branch
immutable                                                   mutable
Tags are unmodifiable                                      branch can be modified/modifiable
Tags are created After Production, once thers 
a release, it creates a tag                                creates while development is still -WIP 
recommneded to be created from Master  branch              can be created from any branch 
 to se aour tags: git tag                                   git branch
to create a tag: git tag TagName                           git branch BN
git push an (an alias Name)--tags                         to push to all branches; git push an --all           
git push AliasName tag TN                                 to push to a particular branch; git push an (alias Name) BM              
git tag -d TN                                              git branch -d BN




   ******59:00     CREATING TAGS
 git tag TagName
******meee******  TAG WITH version & patch 
create tag: git tag paypal - 1.0.02
1 = 1 represents a higher version
2 = 2 represents a lower version
3 = 3 represents the patch


git stash        =     to take backup
git stash  list  = to list all the backups 

eg we have a number of backups 

stash@{0}
stash@{1}
stash@{2}
stash@{3}

git stash apply            = resume wip for the most recent backup
git stash apply stash@{0}  = resume wip for the 1st backup
git stash apply stash@{5}  = resume wip for 6th backup
git stash drop stash@{0}   = will delete backup
git stash pop stash@{1}    = It apply & drop backup 1.
git stash pop


 CONNECTING TO SCM/GITHUB USING SSH KEY
         1:49;14  ****  he said the ssh key can work for any of the repositories bc it was notadded under any repository, we just went to settings and added it 

This automates your authentication access to github ie no need for password PAT

        CEATING SSH KEY  ( and copy to your github account) *** **** 1:50:00, you can use the key with any of your rrepositories
ls/home/ec2-user/.ssh      **** he said he has a file called .ssh
 to create ssh key:   ssh-keygen  
the key has been created
then  ls/home/ec2-user/.ssh  
 then copy /home/ec2-user/.ssh/id_rsa.pub
cat  /home/ec2-user/.ssh/id_rsa.pub
*** 1:23:03 copy the key and paste in SSH tray in github then add the key 
*** 1:24:37 copy ssh url in github (find it in "code" in github)
****1:26;19 create an alias name for ssh url = Ada
ssh url = Ada git@github.com:zebxz/paypal.git
git remote add Ada git@github.com:zebxz/paypal.git
to push = git push ada master ( Ada now replaces the repo aliasname which we used that requested for pw initially)


******me
1:35:00 ****** git will not track changes in .gitignore file
 ls -a  = to list files in the .gitignore file


      MAVEN
