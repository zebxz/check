mvn package will (validates, compiles, & test before packaging)

git has to be installed  to pull the code and the repository


enkins Shared Libraries:
  Jenkins pipeline scripts:
  Jenkinsfile
Programming and scripting languages:
  bash-shell scripting
  groovy 



JSL:
  1. Create Shared Libraries 
  2. Configure Library 
       https://github.com/LandmakTechnology/JenkinsSharedLibraries
  3. use library in pipelines script
========
common.groovy
def call(String stageName){
  
  if ("${stageName}" == "Build")
     {
       sh "mvn clean package"
     }
  else if ("${stageName}" == "SonarQube Report")
     {
       sh "echo Running Code Quality Report analysis"
       sh "mvn clean sonar:sonar"
     }
  else if ("${stageName}" == "Upload Into Nexus")
     {
       sh "mvn clean deploy"
     }
}

Jenkinsfile
//@Library('LibraryName') _ 
// Declarative pipeline

@Library('LandmarkSS-sharedlibs') _
pipeline {
agent any 
tools {
    maven "maven3.8.4"

  }
stages{
stage('CheckoutCode'){
  steps{
    git 'https://github.com/LandmakTechnology/web-app'
}
}
stage("Build"){ 
  steps{
    common("Build")
}
}

stage("Execute SonarQube Report"){ 
  steps{
    common("SonarQube Report")
}
}
stage("Upload Artifacts Into Nexus"){ 
  steps{
    common("Upload Into Nexus")
}
}
//=========================
}// Stages Close
} // Pipeline Close


common.groovy 
build.groovy 
stages.groovy


java applications -- java projects 

nodejs applications:  nodeJS Projects
=======================================
npm = node package manager 

nodejs-APP   vs   java-app
--------           -------
npm =             maven   -->   Build
package.json      pom.xml -->   Build Script           
npm install       mvn package =  (creating packages)
npm test          mvn test      =   run unit test cases 
npm run sonar     mvn sonar:sonar =  SonarQube CodeQualityReport
npm publish       mvn deploy       =  uploading artifacts
npm = node package manager 
  src + bs + test cases 

 sudo yum install nodejs npm -y  

node{
  stage('CodeCheckout'){
    sh "echo running ebay nodeJS project" 
    git 'https://github.com/LandmakTechnology/nodejs-application'
  }
  stage('UnitTest'){
    //sh "npm test"
  }
  stage('Build'){
    sh "echo creating build artifacts"
    nodejs(nodeJSInstallationName: 'nodejs17') {
        sh 'npm install'
    }
  }
  stage('Quality'){
    sh "echo CodeQualityReport"
    nodejs(nodeJSInstallationName: 'nodejs17') {
        sh 'npm run sonar'
    }
  }
    stage('UploadArtifacts'){
    sh "echo npm packages uploaded"
    nodejs(nodeJSInstallationName: 'nodejs17') {
        //sh 'npm publish'
        // Jenkins nexus intergration 
        // password = admin123  username = admin 
        // echo -n 'admin:admin123' | openssl base64
    }
  }

  stage('deployment'){
    sh "echo Deploying applications"
    nodejs(nodeJSInstallationName: 'nodejs17') {
        sh 'npm start'
    }
  }
}

RESTFUL API = 

http://18.212.53.48:9981/landmarktechnologies
http://18.212.53.48:9981/jsonData
http://18.212.53.48:9981/html 
http://18.212.53.48:9981/redirect
http://18.212.53.48:9981/queryparam 

New-Relic 
  Create monitoring dashboard 
applications:
  High availability
===============
  New-Relic = 50 MINUTEs 
  Resume Preparation video = 55 minutes 

ThinBackup plugin --->
