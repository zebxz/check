QUESTION, Why is it not able to ping , thought thats one of the adv of custom ntwrk, if a container is recreated it can stil be in the same ntwrk bc it can connect with either 
IP addresss or container name and in this case, the cointainer was recreated with the same name. app
*************************************************************************************************************************************************

MICRO SERVICES, MONOLITHIC, CUSTOM NTWRK , BRIDGE NTWRK , ISOLATING CONTAINERS, Docker Host Network ,Docker none/null network
DOCKER NTWRK CAN PERMIT CONTAINERS TO COMMUNICATE WITH ECAH OTHER, USING  Both the container name and IP address

Docker networks & Micro-services:
===================================
What is a network ?
Group of servers/devices connected to each other in a specific network. If Servers
are in same network each one can talk to another server.

#########if i hv devices i can create a ntwrk ,wit the help of a router we can ntwrk ..  a grp of devices communicating with each other
with the help of the router it wil det hw the traffic is routed
u ensure that resources in ur ntwrk can communicate wit each oda.. they can communicate wit each oda bc thers a router and this bc becomes ur ntwrk
### so when we talk abt a ntwrk its ensuring the devices are able to communicate with each other 

Docker network
=============
If One Container has to talk to another Container 
Using ContainerIP/Name(DNS) in Docker.
Both has to be created under same docker network.

If Containers are in two different networks. 
They can't communicate/access each other.
 
How to list networks in docker?


difff ntwrks to tk note of 
3kinds of ntwrks were listed
ubuntu@docker:~$ docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
7403f6b74f30   bridge    bridge    local        ***** the default network
f9f9a99c2c85   host      host      local
0f1d053a3f91   none      null      local

1) Default bridge network 
2) host network
3) none network

1) Default bridge network 
if i hv 2 containers in this ntwrk, hw do they communicate 
e.g if am managing a micro service application, these app can either be deployed under
e.g we hv an ebay webapplication

ebay webapp: monolithic architecture 
   if u wnt to acces thhis appl, it has cm with diff component : so when u acces this appl, u can login/registration/cart/pay/order/ and if ders a problem you can return  
this type of appl wher everytin is coupled together we call it monolithic architecture, so it is developed using monolithic architecture 

12:52 bt now we can decide to use microservices , with microservices, this ebay application is decoupled
microservices architecture: for it to be a microservices , we hv each of theses appl  components decoupled
 ebay.war  = decoupled  , they are now stanalone entities
   login.jar
   registration.jar
   cart.jar
   pay.jar
   order.jar
   return.jar  
************** so we hv decouples these appl from a monolithic to a micorservice appli
and we will see why such a decision can be arrived at using nttwrk


HE XPLAINED USING A DIAGRAM
my docker host server, on it we v containers e. a webaapp deployed, i hv a data base container thas suppose to wrk wit the web app 
before we start to build the application, it has gone tru the devlopment stage wher debelopers ar writing code n comiting it to a scm , so we hv an scm tool github and inside g
github we hv a repo called ebay, now once this appli is developed , it goes tru a build phase n in the build server we ar doing the docker buld n mvn package frm this build
server we ar creating packages and doing docker push.. so we hv our docker image , a docker image is being created n frm the docker image what ar we able to ? 
now we hv our deployment server wher we execute docker run to create the contianer n start it 
when we execute mvn package, we create ebay.war n when we execute docker build we create ebay image e.g verion1  ,, ebay:1 , we push the image n it goes to the registry e.g
docker hub , so if we ar going to do a deployment, this image shud be pulled from docker hub

20:40 bt now, this ebay appl we decide to decouple it into microservices and when that happens 
we hv a situtaion wer dev ar writn code n committing to github &when it comes to github it wil no longer be ebay(repo), this appl is being broken doewn into login, so we hv 
a repo for login, a repo registrtaion, a repo to cretae a cart, a repo for returns , these ar the diff repo we hv created when it comes to this projeect, so when we pull this
image we ar creating multiple packages e.g login.jar up to retruns.jar, these ar packages, artifcats hv been created n frm here we building images, diff versions like 
login:1, reg:1 , returns:1  .. we can push this image to the registry and frm der we ar able to deploy the application , we ar albe to deploy appl in the deployment server.

#### 25:19 my docker host server, on it we v containers e. a webaapp deployed, i hv a data base container thas suppose to wrk wit the web app 
so the idea is if u v 2 containers like this, hw do we ensure they  commnunicate wit each oda. so hw can they first commu icta wit ecah oda
for them to bale able to comnunicate in docker, thenetwrk concept is important. 
so we hv docker ntwrk concept
first the 2ntwrks must be in the same ntwrk 

we hv default bridge ntwrk 
in this ntwrk containers wil commuincate with each other using containerIPS , SO WITH THE HELP OF CONTAinerips  thye can communicate with ecah oda

PROBLEMS WITH DEFAULT BRIDGE NTWRK
e.g a if containers was dead and it comes bk to life  e.g smt goes wrong n its recreated, it come sbk to life with a new IP address and as such communication will be broken
so for that reason, we use what is called custom bridge ntwrk. 

**************  CUSTOM BRIDGE NTWRK
containers communicate with IPS and the container name, so even if a container is recreated, it will be recreated with the same container name so it can stil communicate 
*****in the custom bridge ntwrk we can create a ntwrk called e.g EBAY NETWRK

AGAIN, we ar talking abt a situation were der are multiple micro services
e.g in the above case were a couple of images hv been created 
so the imaegs hv been pushed to the image registry e.g docker hub
we wnt to do a deployment , now this is our deployment server, this containers need to communicate with each oda, we wnt to deploy our containers in these deployment server
e.g the login container, wich nid to communicate with registaration container ,cart container needs to communicate with pay container, we also v a db container etc and all
of this is captured in the dabase container ,, therefore a custom bridge ntwrk is the best to create for the containers to communicate with each other.using d container name
so we deploy the containers in a custom bridge ntwrk 
BUT this entirely is called microservices, its called microservice deployent. 
we wn tto deploy our app uisng micro services , so we hv decoupled frm monlitic to microservices

34:09 WHY IS IT IMP TO DECOUPLE
A Micor service architecture is easy to manage, 
its also easy to scale

e.g if ur dealing wit a monolitic appl and ur code is in github 
if ur using just ebay, ebay could hv 
monolithic = ebay / 20,000 lines of code 

then for micro services wich ebay has been decoupled
microservices architecture:
   login 2,000 lines of code 
   registration 4,000 lines of code 
   cart 2,000 lines of code 
   pay 6,000 lines of code 
   order 2,000 lines of code 
   return 8,000 lines of code   
*********************************************** therfore micro services is easier to manage:

38:47 just a free talk *****************using the traditional approach, deploying with tomcat
we hv tomcat app sevr1 , tomcat app server 2, for ebay and we v users trying to access our applictaion 
at the moment we v s0m users trying to user bt when they increase frm 20M to 30m, that means we ar scaling , so we hv another anoda app server ie tomcat app server3
ussers are accessing the appl with a webserver, its probably nginx or an elastic loadbalancer ,, therefore traffic is being routed
now this is a monlithic architecture bc inside github, we hv a single repository wich is for ebay only
when its nt decoupled its nt easy to scale compared to microservices wher we v the dif components,a repo for login, a repo registrtaion, a repo to cretae a cart, a repo for
returns , 
easy to  scale  :
    login=20m - 28m /  e.g in a case wher the login increases frm 20m to 28m then i nid to scale login only, i dnt v to scale/modify the entire appl
    reg=20 /
    cart=8m /
    pay=7m/
    order=7m /
    returns=1m ] 

better/efficient resource usage : 
********e.g in a case wher the login increases frm 20m to 28m then i nid to scale login only, i dnt v to scale/modify the entire appl
    so micro services leads to better use of resource bc when u scale jst a component, it means the overall resources to be used wil be smaller 

****************versioning is easier to manage with microservices (bc we hv to modify some codes)
also if thers a new version of the appl that relates with only the login e.g we ar changing the login interface, then we dnt nid to modify the the entire 20,000 line of 
codes as with monolithic but only the 2,000lines of code for login for microservices



46:20 ************************************************** We support Java based applications:
===================================
We support nodeJS and .net based applications: (also some python base appl, like we saw when we were doing container, we deployed a python base application)
==============================================
Ticket024:
  Deploy a microservice application for tesla.  
  - GitHub repository
    https://github.com/LandmakTechnology/spring-boot-docker
  - dockerHub repository
    mylandmarktech/sping-boot-mongo

########copied frm the file in github:
spring:
  data:
    mongodb:
      host: ${MONGO_DB_HOSTNAME} .. this is dynamic bc no values were given
      port: 27017
      username: ${MONGO_DB_USERNAME}
      password: ${MONGO_DB_PASSWORD}
      database: users
      authentication-database: admin
server:
  port: 8080
#####################..... 55:39 .. this application is developed using the spring boot framework


spring:
  data:
    mongodb:               if developers hv developeed this application where the values are already given then its no longer dynamic
      host: dbserver  ********** these values(dbserver,devdb,devdb123) are add coded bc add values hv already been given, its nolonger dynamic
      port: 27017
      username: devdb
      password: devdb123
      database: users
      authentication-database: admin

56:00 *********** while deploying this appl, it need a database, developers wil nid to pass hostname of db, user name of db and PW

*************** bt we want to write images that dynamic, images that can run in any environment, so we can jst use diff envr variables 
this an an application that is being deployed and some inf needs to be captured so a database is needed.
58:0000            #################so this application needs 2things 

we need to deploy the springapp and the database - mongo   ... (the database in this case is mongo) as we can see it defined in github: data: 
  ie developers are  recommending the mongo database                                                                                     mongodb:

For thIS APPLICATION, we hv our images so we can pull bt i also nid a mongo image for db (he doesnt hv any mongo image in his repository) bt ders a mongo image in dockerhub
so once i pull this 2images am able to deploy my application
**********************************************************************************************************************
we need to deploy the springapp and the database - mongo 
###########i wnt to deploy my application, first i v to pull pull the 2 imgae ( so create a file to achieve this)
1) vi spring.sh  (and paste number2 to number 5)....... we wnt to create a file for this deployment
2)  docker pull mylandmarktech/sping-boot-mongo
3)  docker pull mongo
 ################ after pulling, we wnt to create a ntwrk for tesla: 
 docker network create tesla (DIS is hw to create a ntwrk in tesla, custom brideg ntwrk bc i wnt d containers to comm wit both name n IDS ) &docker netwrk ls to list ntwrks
  docker run --name springapp -d -p 8080:8080
  docker run --name mongodb   

###########QUESTION, HW DO WE KNOW WHICH ENV VARIABLE VALUE TO USE ,, BC here both the applictaion(spring) has its env var & the database has its own env ???????
 ########## i bliv it doesnt matter bc u will v to choose the values yourself

1:06:40 *******************************THIs is OUR ENVIRONMENTAL VARIABLES for for our application (spring)***************************(gotten frm the image info in docker)
spring:
  data:
    mongodb:
      host: ${MONGO_DB_HOSTNAME}
      port: 27017
      username: ${MONGO_DB_USERNAME}
      password: ${MONGO_DB_PASSWORD}
      database: users
      authentication-database: admin

*******************ENV VARIABLE FOR MONGO**************************************** (gotten frm the image info in docker)
     MONGO_INITDB_ROOT_USERNAME: root
     MONGO_INITDB_ROOT_PASSWORD: example

********************************************

vi sp.sh    
  docker pull mylandmarktech/sping-boot-mongo
  docker pull mongo
  docker network create tesla

********************************************APPLYING THE ENV VARIABLES************************************
****************************I ALSO HV TO PUT BOTH OF THEM IN THE SAME NTWRK(network tesla) bc i wnat them to comunicate with each oda ********

#########DEPLOYING THE DATABASE                                                                     ****image name is mongo
4) docker run --name mongodb --network tesla -e MONGO_INITDB_ROOT_USERNAME=devdb -e MONGO_INITDB_ROOT_PASSWORD=devdb@123 mongo
                                                  

###########DEPLOYING THE APPLICATION
                                          
                                  *******HOSTNAME is the name of the data base that is being deployed                                      ********** THIS IS THE IMAGE 
5) docker run --name springapp -d -p 8080:8080 --network tesla -e MONGO_DB_HOSTNAME=mongodb -e MONGO_DB_USERNAME=devdb -e MONGO_DB_PASSWORD=devdb@123  mylandmarktech/sping-boot-mongo

####################we didnt pass any tag for the dockerrun, so the latest image will be downloaded for us 

6) sh spring app.sh  to deploy *************************1:18:32
*************************************************************************************************************************************************

1:18:00*************THE USERNAME MUST BE THE SAME:
**********1:11:37... MY APPLI NEEDS TO CONNECT TO THIS DATABASE, bc am deploying an application called springapp, for springapp to connect to the database then springapp 
needs to enter the right information e.g the correct hostname, usrnmame, password , they are in the same ntwrk so we can connect to the database
database:  HOSTNAME      USERNAME       PASSWORD   network  ENV
            mongodb       devdb          devdb@123   tesla  dev     *********all of this is happening in dev dev env, inf entered for both database n ppl must b ethe same 
1.spingapp: mongodb       devdb          devdb@123   tesla      *******for the applica to be able to talk with d database so that data can be wriiten, the the credentials
                                                                      must be valid, appli must pass the right credentials of the database 1:32:00

#############  to ACCESS THE APPLICATION *********************************1:21:15
 3.22.217.29:8080/

1;26:20
springapp.sh didnt work when deployed so he ran the command manually 
now we shud be able to access the application n write data in the database 
############### the containers are able to communicate with each other bc the name we gvae the container mongodb, THERFORE, the name of our database HOSTNME IS mongodb


.. 1:40;10, bt even wit manually it was giving us an infinite LOOP bc it wasnt deployed in detachable
mode bc wasnt deploying it in detachable mode , 
docker run --name mongodb --network tesla -e MONGO_INITDB_ROOT_USERNAME=devdb -e MONGO_INITDB_ROOT_PASSWORD=devdb@123 mongo
#########################to detach the process frm the server then 
docker run --name mongodb -d --network tesla -e MONGO_INITDB_ROOT_USERNAME=devdb -e MONGO_INITDB_ROOT_PASSWORD=devdb@123 mongo
(with this correction the file springapp.sh will work)

*******1:32:40 if i remove my dATA BASE  or smt goes wrong wit the database I WONT BE ABLE TO ACCES the DATA, der will be dats loss..bc der sno database running at the moment 
we can redeploy the database bt th eoriginal data is gone.. ie e.g users info or history 

1:34:10
*****************************   WE ARE GOING TO SEE HOW TO DEPLOY THE DATA BASE TO AVOID DATA LOSS
haven passed the ENV variables correctly,and deployed the application bt thers a data loss problem
now we hv 2 containers that hv been deployed, the mongo container for database and the springapp container which is a STATELESS APP, bt d database is STATEFUL n needs to 
maintain its state and when it is STATEFUL, it means that it needs a piece of storage to capture data, so w ecan create a mountpoint and mount it wit the dockerhost server,
i call the storage temp/db, bt wot is the container mount point,i must check the hw the container mount point is in the image, so i go to the official document for mongo
it will give me the mount point(where data is stored ) and it syas /data/db, so on the image i cannot change it bt i can change it in the host server if i want to e.g,
1:37:00 i can change it to /tmp/mydb, this type of data storage is called bymount(its under volume concept in docker) 
having done this, in deploying my mongo contianer , we'l use the -V /tmp/mydata:/data/db mongo

********ORIginally der was no volume indicated, now we ar passing volume so we remove the mongo container .... dockeer rm -f mongodb 
############ now we redeploy it again ( he used the springapp.sh script dis time n it worked , bt commented oon the pull REQ and docker run for spring)
docker run --name mongodb --network tesla -e MONGO_INITDB_ROOT_USERNAME=devdb -e MONGO_INITDB_ROOT_PASSWORD=devdb@123 -v /tmp/mydata:/data/db mongo 
************************* having redeployed it sucessfully, we enter some data and remove the mongo container again dockeer rm -f mongodb 
then we redeploy the container again and when we check, we can still see the previous data... so NO MORE DATA LOSS

1:47:32  (SECOND example)
docker run --name app -d -p 8000:8080 --network tesla mylandmarktech/java-web-app .................. RUNNING IN THE tesla ntwrk
docker run --name webapp -d -p 7000:8080 mylandmarktech/maven-web-app *************** this is running in the default bridge ntwrk 
******************************** INSPECTING*****************************************
we can inspect the netwrk the container is running on by: 
docker inspect tesla    ( the ip address 172.18.0.4/16)
docker inspect bridge              (172.17.02/16
can also docker inspect tesla | grep 172
can also docker inspect bridge | grep 172    

***************************1:56:00 
docker exec app ping webapp 
ping : unknown host because  the 2 containers (app) and (webapp) cannot communicate with each other bc they are in 2 different ntwrks
therfore:
ubuntu@docker:~$ docker network connect tesla webapp 
docker exec app ping webapp  .............NOW ITS SUCCESSFUL ....... we ar inside the (webapp)
ubuntu@docker:~$ docker exec -it webapp bash
root@3e143cbcde73:/usr/local/tomcat#
root@3e143cbcde73:/usr/local/tomcat# ping app ............... was sucesssful  **** we ar able to communicate wit the (app) container 1:58:20
root@3e143cbcde73:/usr/local/tomcat# ping springapp ................. was succesful aas well 

############ now we deleted the app cointainer and created it now in the bridge ntwrk 
docker run --name app -d -p 8000:8080  mylandmarktech/java-web-app 
root@3e143cbcde73:/usr/local/tomcat# ping app   ............ we ping app now bt its nt successful bc containers that are  nt in the same ntwrk cant communicate wit each oda
ping : unknown host

QUESTION, Why is it not able to ping , thought thats one of the adv of custom ntwrk, if a container is recreated it can stil be in the same ntwrk bc it can connect with either 
IP addresss or container name and in this case, the cointainer was recreated with the same name. 

2:00:22 HOW TO ISOLATE APPLICATION USING DOCKER
BY placing the applications in diff ntwrks 

2:01: 00********************** CAN A CONTAINEER BELONG TO MORE THAN ONE NTWRK ???????????
YES....
Docker netwrk create ebay 
docker network connect ebay app
docker inspect app | grep 172 ......................  now, we can see the diff Gateways and IPAddress ie the dif ntwrks connected to  it8****************
therfore, docker exec -it webapp bash  ............................ SUCCESSFUL BT  before it wasnt succesful
root@3e143cbcde73:/usr/local/tomcat#
root@3e143cbcde73:/usr/local/tomcat# ping app  ....... SUCCESSFUL 



ubuntu@docker:~$ docker network

Usage:  docker network COMMAND

Manage networks

Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks
cant delete a ntwrk that has containers connected to it, must first disconnect the container from the netwrk 


docker run --name app -d -p 8000:8080 mylandmarktech/java-web-app 

docker network create/inspect/ls/disconnect/connect/rm/prune:
============================================================

-# Remove unused networks
docker network prune 

-# Remove Network
docker network rm <networkNameOrId>



                              host port: container name mh /'
 2 containers cannot v the same host port number& name  , bt can v the same conatainer num
**************************************2:07:33 

2) Docker Host Network.:
If we create containers in host network. 
Container will not have IP Address. and we cant do port forwarding -p
 Container will be created in a system network.

docker run --name webapp -d -p 7000:8080 mylandmarktech/maven-web-app 

*********************************************CREATING HOST NTWRK*********************************************
docker run --name javaapp -d --network host mylandmarktech/java-web-app    ***** when using host ntwrk, no need for -p , therfor no port forwardn bc it is in the host ntwrk
   ContainerPort: 8080                                                        ************ IT HAS ITS CONTAINER PORT 8080     
                                                           2:12:00
docker run --name apps -d --network host mylandmarktech/java-web-app    ************ THIS WIL NT RUN BC this image mylandmarktech/java-web-app, has a container port of 8080
   ContainerPort: 8080                                               &WHATEVA PORT the container is having dats what wil be assigned to the host 
                                        can run the netstat -tulpn command to see the ports already in use.. when endusers ar tryin to acess this java-web-app, now the 
host ntwrk is in use, we ar nt defining any port publishing bt when endusers traffic gets here,the container is running on the host ntwrk, therfor, it inherits the same port
its using the host ntwrk, so trafic wil b routed to the first container (javaapp) 
*************when we run :docker inspect javaapp | grep 172.1    ..... ders no IP address bc the container makes use of the host IP n dats why i cant deploy another container
with the same port

************* tryin to deploy anoda container with the same contiazner port  bt when we run docker ps , we cant see the container bc of binding exception bc we cannot do 
port forwarding in the host ntwrk

docker run --name hello -d --network host mylandmarktech/hello  ************ this got a diff container port number thats why its working, i think dis is a diff application 
ContainerPort: 80                                                                                                                                mylandmarktech/hello



ContainerPort: 8080    

We can't create more than one container with same container port in host network.
   landmark-web-app  = containerPort,  EXPOSE=8080  
   java-web-app      = containerPort,  EXPOSE=8080  
   maven-web-app     = containerPort,  EXPOSE=8080  

3) Docker none/null network
========================
docker inspect none

If we create container in none/null network. Container will not have IP Address.
We can't access  containers in this network  Internal or external 
****************** we can use this ntwrk to isolate containers

docker run --network none                     
Internal or external 

docker run --name hello -d --network none mylandmarktech/hello   

Isolation
  docker run --ebay host -d --name hello mylandmarktech/hello   
  docker disconnect hello ebay  
  docker connect hello none  


2:29:15 when in a file press the esc key to be in command mode
to delete a row press dd

docker volumes and docker compose:
