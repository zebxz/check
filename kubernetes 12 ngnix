

WE CAN USE NGNIX TO REDUCE LB COST, INGRESS INSTALLATION, NGINX LAYER 7LB/ ENDPOINT EXPLAINED, CHANGING SERVICE TYPE, DEPLOYING NGINX INGRESS CONTROLLER, 
NGINX SERVICE TYPE IS CLUSTERIP, TROUBLESHOOTING, DEPLOYING THE APPLICATION WITHOUT NGINX SERVICE, CREATING NGINX SERVICE FOR THE APPLICATION/ KUBERNETES 
PLUGGIN, STEPS FOR CREATING INGRESS RULE, CREATING INGRESS RULE, CREATING/DEPLOYING HOSTBASED ROUTING, DIFF BTW HOSTBASED ROUTING & PATH BASED ROUTING,
CREATING/DEPLOY PATH BASED ROUTING, TROUBLESHOOTING, WHEN CAN WE USE PATH BASED ROUTING, WHEN WE CAN USE HOST BASED ROUTING




he said der was ngnix in the k814 video on probes but i dnt think so 
helm   
nginx-ingress1


frm an infrastructure point of view u realise that we can access our appl using multiple services ,,, if u were going to access ur appl uisng a lbalancer service that wil
incur additional cost bc a lbalancer wil create a new lbalancer in aws  
**mee** the loadbalancer service type is created when we are using ELB, eg in KUB 10&11 when we installed kops, it created and ELB, then when we deployed an
application and run 'kubectl svc, we could see lb as the service type.

5:37
we can discover our appl using  a service and all service act as lbalancer, for internal comm we can use cl8 ip service, trafic wil be routed accordingly the service perfoms
dns resolution for my appl ... for external traffic our service type wil be nodeport, it can attract external traffic, and as part of nodeport service like for a mg8 cl8
what else can we create? we can create loadbalancer(this a lbalancer service)... bt generally cl8ip is for cmmu within the cl8, whereas nodeport n lbalncer is gud for 
external comm


                                  WE CAN USE NGNIX TO REDUCE LB COST
frm an infrastructure point of view we can place our lb in the public subnet n our node in private subnet, for (one appl to com to the other, it nids to go tru the service of 
the appl) evrytin is runin in aws, lb is nt free , they are xpensive (for us to be able to keep our cost at the barest minimun we can deploy nginx ingress,we can create a new
service in the cl8 called ngnix ingress

**I bliv when he says we can reduce cost by using ngnix, it means that rather than creating a lb service for all the application which then means that  each of
the appl will incurr a seperate cost, rather we can create a lb service for nginx then we use the ngnix service for all the applications, that way its only the
nginx that will incurr lb cost.***

                                                            **mee** ie we are changing the nodeport or lb service type we have being using for to deploy the services/app
when we create ngnix service for our appl we can now hv service of type cl8 ip service, that way all the service/*me*app in the cl8 wil be a cl8 ip type for the appl to recive 
external traffic we wil deploy an nginx ingress controller inside the cl8, on a node we can do a dployment called ngnix ingress so the pod is scheduled wil mg8 hw traffic is 
routed to our backend appl, so as part of the deployment we are also creating a service (ingressSVC )for ngnix ingress controler and the service will act as our frontend n 
based on this service  we aer goin to create some ingress rules wich will state hw traffic can be routed, we say smt like  e.g if somebody type myland.net it wil route
traffic to a particualr service, hellomyland.net these ar ingres rules, we create ingress rules like this,we v an ingress controller pod such that if an endusers try to acess
our appl tru the appl service thye can type any of the alias we cretaed in the rule (these are Arecord wich v been created) n once that happens the traffic comes into the cl8
the ingres service is a lbalncer service n as traffic is routed, it comes into the cl8 n its goin to be manged by the ingress lbalancer service whih wil immediately talk with
the ngnix ingress controler pod bc the ingrss service is what is used to mg8 trafic into our ngnix ingress controller pod, the pod is workin with ingress rule, it identifies
that the trafic dat was typed by users( helomyland.net) has a backend wich is the service (heloSVC) of the appl (hello pod) , therfore once it gets into the cl8 the ingress
controller wil route traffic to the helloSVC then to the hello pod.
so with the use ngnix ingress we can route traffic to multiple backend appl, so ngnix ingres is deploying to us a layer 7 lbalancer.
what will happen to the ngnix ingress CONTROLLER POD:
we are deploying the nginx ingress controler pod , it is deployed using the controler manger e.g deployment, deployemnt is used to ensure that the pod is up n running, if the
replica goes down it is recreated, so inside the cl8 an ingress rule is created.
20:10
the ingress service cannot route trafic directly ot the hellopod bc  the ingres service only comm with the ingres conttroller pod 



******************************************  DEPLOYING NGNIX  INGRESS in our CL8   >>>>>>>>>>> 21:006
nninx ingress can be easily deployed 
IF YOU HAVE :
 a kops cluster , that will be deployed seamlessly 


he goes to github                               NGINX LAYER 7LB/ ENDPOINT EXPLAINED

nginx-ingress contoller:    ( more info on ingress and steps  to setup ngnix in the link below) evrythin was deployed frm the github account
==========================
https://github.com/LandmakTechnology/nginx-ingress

23:38                                                                                                                                                
users > ingresSVC lb , it acts as d frontend therfore it provides additional layer of scurity n with it we can route traffic to multiple lb ie d diff app services:>  e.g
        bc its a layer 7LBalancer. **Mee**ALB, AWS 7&8                                                                                                            ingress rules
                                                                                                                                               helloSVC: hello.myland.net7
                                                                                                                                               appSVC:app.mylandtech.net8
                                                                            26:50                                                                   webSVC: web.mylandtech.net9
                                                                            each of theses service hv their own endpoint e.g 7,8,9, 
                                                                                       the endpoint is the number of pod replicas that are deployed
                                                        we ar routing traffic to our backendappl using cluaterip  and btw clusterip n NOdeport, cluserip is the most secured
         service in k8 bc it doe nt accept traffic outside the cl8, our cluster is vulnerable when it accepts external comm, external com is likely to mk our cl8 vulnerable
       therfore clusterip increases our cl8 security, so introducing ngnix ingress, it hepls us to use a highly secured k8 discovry type which is clusterip.




                    CHANGING SERVICE TYPE
 if our service type was clusterip, we can change it to loadbalancer or nodeport but if it was loadbalancer we cant change it to clusterip
we can also change from nodeport to loadbalancer

~######### in the ubuntu server
kubectl get all
we can see deployments done with loadbalancer service type
now we wnt to use ngnix ingress and as such we dnt need loadbalancer service type again bc it wil be wastage of resources 
so we can run kubectl edit svc springapp                                                           and when we checked in aws console the lb has been deleted
now inside the manifest file change the service type to ngnix                           ####### he tried it and it worked , lb to cluster   32: 20
also if our service type was cllusterip, we can change it to loadbalancer or nodeport but if it was loadbalancer we cant change it to clusterip
we can also change from nodeport to loadbalancer
######## #############  to change service type we can also vi into the manifest file that we deployed 





34.47                                  DEPLOYING NGINX INGRESS CONTROLLER
********we are deploying the ngnix ingress controller using some yml file in the github account  .... ........... 
  1) clone application in github
    cd   into : ingress/deployments
2)create a namespace and a SA(service account) : the service account (i bliv RBAC) is for k8 security
3) for the RBAC ; kubectl apply -f common/
4)we can CREATE daemon set, we can deploy using a daemonset, k8 will cread a daemon controller on evry node of the cluster OR We can deploy it using deployment
so he ls and we saw: 
common  daemon-set  deployment  service    ** i bliv these are the options we hv inside the application we cloned
if we wnat to use deployment, we just wnt to create a single pod: 
kubectl apply -f deployment
deployment.apps/nginx-ingress created        *****so it has created this deployment called nginx ingress
5) check if the ngnix pod is running with the command
when we run kubectl get po, we dnt see the pod bc its running on a specific namespce so we hv to specify the namespace
kubectl get po -n nginx-ingress
next
get access to the ngnix ingress controller    >>for us to get access, we are going to deploy a loadbalancer
6)create loadbalancer service
$ kubectl apply -f service/loadbalancer-aws-elb.yaml
kubectl get svc -n nginx-ingress     ... we see the service was deploy
     so our ngnix ingress service has been deployed

55:36
############ CREATING INGRESS RULE  ...........  continued with our ingress installation script below
7) we can use hostbased routing or path based routing



                         
43:20 
ls      ... we see these 2 applications
app.yml  jp.yml   metric-server      ns.yml
aws      ir.yml    nginx-ingress   pod.yml 

vi jp.yml ... this is a javawebapp
we dnt hv any service for the application
lets use it as our sample application, it doesnt have any service yet 
the image used for the application is hello ,
1)We wil all the applictaion hello
2) we will deploy another application called webapp
    ** both application details are inside the jp.yml file 


41.27                              NGINX SERVICE TYPE IS CLUSTERIP
bc we hv nginx controller deployed, our service type will be clusterip
he did a deployment using deployment as our choice k8 object, he said we can also use replica set but deployment is our choice k8 object
kubectl appl -f jp.yml
but it failed

                                       TROUBLESHOOTING
he realised thers was a resource quota he created in previous class 
kubectl get resourcequota
kubectl delete resourcequota test-ns-quota
kubectl appl -f jp.yml
created
kubectl get deploy and we can see the pods running as desired
############ 47:50


                                        DEPLOYING THE APPLICATION WITHOUT SERVICE NGINX SERVICE

apiVersion: apps/v1
kind: Deployment      ........... deployment for hello
metadata:
  name: hello
namespace: dev
spec: 2replicas
selector:
 matchlabels:
   app: hello
 template:
   metadata:
     name: hello
     labels:
       app: hello
   spec:
     containers:
      name: hello
      image: mylandmarktech/hello
      ports:
      - containerPort:80


apiVersion: apps/v1
kind: Deployment           .............  for webapp
metadata:
  name: webapp
namespace: dev
spec: 
selector:
 matchlabels:
   app: webapp
 template:
   metadata:
     name: webappod
     labels:
       app: webapp
   spec:
     containers:
      name: javawebapp
      image: mylandmarktech/java-web-app
      ports:
      - containerPort:80


                       47.22 CREATING NGINX SERVICES FOR THE APPLICATION/ KUBERNETES PLUGGIN
                             
bc we hv nginx controller which is a k8 operator or what we call a k8 plugin or an add on that enhances the function and the security of k8, 
so with it we are sure that our cl8 wil be more secured so we can take advantege of such a secured parameter 
the type of service we will create is  clusterip and as such i can decide to write it or not and ther shud be no port ip and no NopePort number as wud hv been d csae if 
it was NodePort service


apiVersion: v1         .........service for webapp
kind: Service
metadata:
  name: webappsvc
spec:
  type: ClusterIP
  selector:
    app: webapp 
  ports:
  - port: 80
    targetPort: 8080

apiVersion: v1         .........service for hello
kind: Service
metadata:
  name: hellosvc
spec:
  type: Clusterip
  selector:
    app: hello
  ports:
  - port: 80           ......service port
    targetPort: 80
____________________  __

kubectl get svc 
we can see all our service are of type clusterIP and its more secured service discovery option
kubectl get po --show-labels 
we can see our pods and their labels



**mee** STEPS FOR CREATING INGRESS RULE
1)IN Aws, route53; create record set to establish the response
2) Create the route type ie either bath based OR host based manifest file.
3) deploy the rule


                                           CREATING INGRESS RULE

55:36
##...  continuing with our ingress installation script
7) we can use hostbased routing or path based routing

in aws  we see a LBalancer was deployed in uS West1, where our eks cluster is running     .....  .......  56:10
since i hv this lb, i wil go to the dns service, aws route53, 
creating record set , A record
its an alias to an appl lb
if u type this, its routed to .....> this service
springapp.mylandmarktech.net ... >  springapp
web.mylandmarktech.net   .........> webappsvc
hello.mylnadmark .........> hellosvc

.........now we will create an ingress rule to achieve this
vi ingress-resource.yml


                                             CREATING HOSTBASED ROUTING

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apps-ingress-rule
spec:
  ingressClassName: nginx
  rules:
  - host: springapp.mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/"           ****this is the root path, http
        backend:
          service:
            name: springapp
            port:
              number: 80
  - host: hello.mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/"               ****this is the root path, http
        backend:
          service:
            name: hostsvc 
            port:
              number: 80
  - host: web.mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/java-web-app"             **
        backend:
          service:
            name: webappsvc
            port:
              number: 80

                                                    DEPLOYING HOST BASED ROUTING

before we deploy this lets run
kubectl get ingress
none
kubectl apply -f ingress-resource.yml
ingress rule created
and we have this ingress here
lets describe the ingress , its called app ingress  rule
kubectl describe ingress apps-ingress-rule
we can see the host and the backend app its routing traffic to 
host                                     path backends                the backendpoints
springapp.mylandmarktech.net              /   springapp:80 )10.10.0.122:8080,10.10.1.148:8080,10.10.1.235:8080)
                                                    this springapp service has 3 endpoints
hello.mylandmarktech.net
web.mylandmarktech.net

************* so if we wnat to access this application, lets find out if evrytin has been deployed as expected

we type this in google and we can access the database
springapp.mylandmarktech.net
hello.mylandmarktech.net/java-web-app         

we see that ingress is working
so with the help of ingres we are able to access our appl and we are able to use the most secured service discovery option in k8 which is clusterip service

******* ********** ******** we hv deployed using host based routing



**mee***      DIFF BTW HOSTBASED ROUTING & PATH BASED ROUTING
1) Host based manifest file can have more than one 'host' object ...lol@ object
 1.200... its is used for when we have diff applications **i bliv like monolethic application
while
2) Path based will have only one host' object
   it is used for microservices ie decouple monolethic application


                      CREATING PATH BASED ROUTING

we can also deploy using path based routing and in this case we will just have one hostname with diff path like
while creating ingress
vi ingress2.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress2              ***i can enter a namespace if i want bt am nt entering any name space for now
spec:
  ingressClassName: nginx
  rules:
  - host: mylandmarktech.net           ******lets assume this is my host
    http:
      paths:
      - pathType: Prefix
        path: "/"           ****this is the root path,  cud be linking me to helloservice
        backend:
          service:
            name: hellosvc
            port:
              number: 80
      - pathType: Prefix
        path: "/java-web-app"               
        backend:
          service:
            name: webappsvc 
            port:
              number: 80

**********this ingress2 is routing traffic to 2backned service but it can also route traffic to more 
lets add one more 

- pathType: Prefix
        path: "/tesla"               *we hv an appl /tesla   
        backend:
          service:
            name: teslasvc            so this routing trffic to my tesla app
            port:                         lets jst add this even though we dnt hv the service yet
              number: 80


deploying
kubectl apply -f ingress-resource.yml

lets describe ingress
kubectl  get ingres
NAME                      CLASS             HOSTS
DDRESS       PORTS         AGE                                                     **********this is host base routing so it has multiple hostooooooooooo 
apps-ingress-rule          nginx             springapp.mylanmarktech.net,hello.myland,arktech.net,web.mylandmarktech.net      
              80          10m
ingress2                  nginx               mylandmarktech.net             **********we hv jst one host bc its path based routing 
             80            23s

1:18:00
************ if we type mylandmarktech.net in google we dnt get any response bc we hv nt created the record set to establaish the response
in aws we are using a dns service which is route53, in route53 we hv to create A record set where we will state that my landmark tech is being forwarded to 
the loadbalancer so lets go bk to aws and create the record set
           


                      TROUBLESHOOTING
502 error is server error , 502 error its called server site


appl it self has context path, there re some appl that we ar goin to hv that 
the path is /maven-web-app, 
some /java-web-app
some appl is just the root path  /
this can help us to define our like if we wnt to use path based routing




**************************************  TROUBLESHOOTING, WHEN CAN WE USE PATH BASED ROUTING eg microservices
Lets assume u are deploying a micro service appl,
we can have :
ebay/login
ebay/registration
ebay/payment
ebay/orders
ebay/returns


                              WHEN WE CAN USE HOST BASED ROUTING
in a situation like this the recommendation to use is path based routing 
if i have diff appl in my env am managing then ill use host based e.g
app.com
webapp.com
aws.amazon.com
amazon.com



#########################################################





kubernetes 13--AUGUST 13, 2023
ResourceQuota,   
LimitRange,
StatefulSets  
nginx-ingress



54.201.176.87
c32.pem  

kops export kubecfg $NAME --admin   

https://github.com/LandmakTechnology/kops-k8s

kubectl edit svc springappsvc
  kubectl create -f manifests-file.yml 
  kubectl create -f app/  

  kubectl apply -f manifests-file.yml 
  kubectl apply -f app/ 

  kubectl run 

kubectl apply/create/run/edit/get/describe/delete/logs/exec/epose/show/rollout/scale  

curl 34.219.47.255:31335




 
---













