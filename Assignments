building and deployment starts after codes have been commited, so if i ever need to do all this, ill just start with maven



linux1
1)Create an account to a REdhat linux server/system in AWs cloud uing a manged cloud computing providers (aws, azure, gcp etc)
because this option is superfast, easiet option -within 5mins, i can buy my server with AWS **** the other 2options are in the notes
so create a free account  in Aws cloud  or any cloud provider, of ur choice
eg, Website: aws amazon. Com
2)Launch an amazon linux server in Aws:
3)Connect to our linux server


linux2
TICKET001:
Create work directories for telsa client

TICKET002:      create directory (mkdir)
create project 01  directory using the format below 
dev/git/maven/aws/nexus/java


LINUX 3A & 3B  was linux commands etc




LINUX 4B
Assignment:
Assign permission for the ec2-user group to modify the blessed.me file  
chmod +r fileName 
chmod 664 fileName  

                      file   file
Full Permissions      0666   0666
default Permissions   ?    =    ?            0666-0624 = 0042
                      ----   ----
 umask                0600   0624
                      ----   ----  


default permisssion=  0666 - 0624 = 0042


***************************************************************************************
Assignment: i  set myself
Assign permission for the ec2-user group to modify the billions file  
chmod +r fileName 
chmod 721 fileName  

                      file   file
Full Permissions      0666   0666
default Permissions   ?    =    ?            0666-0721= 0935  OR 0045
                      ----   ----
 umask                0711   0721
                      ----   ----  

default permisssion=  0666 - 0721 = 0935 ( subractracted mathematcally by borrowing )lol




Ticket077: Search for a file called list
find = search for files and directories  
searching a file in the user's home Directory:
   find /home/ec2-user -name fileName or find ~ -name fileName 
   find /home/ec2-user -name list  or find ~ -name list  
searching a file in the present working Directory:
   find /home/ec2-user/dev -name list   or   find . list     

searching a file in the root Directory: 
sudo -u root find / -name fileName
  find / -name list 
  sudo -u root find / -name list    
  sudo find / -name list  
[ec2-user@demo dev]$ sudo -u root find / -name list
/sys/kernel/debug/error_injection/list
/sys/kernel/debug/kprobes/list
/home/ec2-user/dev/list
/home/ec2-user/list



Assignment:
Assign permission for the dominon user to read the blessed.me file

chmod 600 filename
chown = use to change file ownership
chgroup = use to change file group ownership


chmod +r fileName :  gives evryone permission to read
the correct code = chmod 604 fileName  


********************
obi will be working on the blessed.me for this sprint, 
please grant ownership of the file to obi  
This practice is good for automation and easy deployment
of tasks/workloads. 

ANS:
chown newOwner fileName   
chown obi blessed.me    
[ec2-user@demo ~]$ chown obi blessed.me
chown: changing ownership of 'blessed.me': 
  Operation not permitted
This is because:
chown and chgroup commands can ONLY be run by the rootUser
sudo is a command used to run commands as another user  

**************  therfore the correct command : 
sudo -u root chown obi blessed.me 
    sudo chown obi blessed.me  
sudo -u obi  chown obi blessed.me      

before you run the command mk sure the owner is running the command  ( i bliv chown without sudo , u hv to be rootuser)
[ec2-user@demo ~]$ sudo - u root chown obi blessed.me   OR  sudo chown obi blessed.me



***********     TO change group ownership

[ec2-user@demo ~]$ sudo -u obi  chgrp obi blessed.me
chgrp: cannot access 'blessed.me': Permission denied

sudo chgrp obi blessed.me



Ticket078:
  Create user accounts for landmark and datti and verify?  :

Ticket079:
  assign a password the user 'datti'
  passwd userName  

  passwd datti 

TICKET009:
DATTI grant oke sudoer access
chmod +r fileName 
chmod 664 fileName  


 linX4b 
 QUESTION1:
Ticket078: Search for a binary file called 'pwd' 
   binary files are commands found in the bin/sbin directories
whereis pwd 

c) searching a file in the root Directory:
  find / -name list 
  sudo -u root find / -name list    
OR   sudo find / -name list  
********** the output to this command is the root path to the file 

Ticket078:
  Create user accounts for landmark and datti and verify?  :


TICKET009:
DATTI grant oke sudoer access
   sudo echo "oke ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/oke


LINUX5B
Ticket078:
  1. Create user accounts for landmark and datti and verify?  :
  2. assign password to landmark and datti users?  :
  3. grant sudo access to landmark user ONLY?  :
  4. Set the expiration of datti account to 90days ?  
  5. configure/setup your server for password authentication?  
  6. connect to the server externally as landmark as landmark user using password?
  7. Lock datti's password and server access?  
  8. Create manager's group and add user landmark to it.


LINUX 6

Ticket088:
==========
install, start and verify the apache webServer
sudo yum install httpd -y        (install, this is  package mgt command )               
systemctl status httpd              (system/service mgt command )
ps -ef | grep ntpd              ( service is called daemon) ******* to chwck if the netwrk time protocol for the server is running 
ps -ef | grep httpd                     (process mgt command)
sudo systemctl start httpd             (service mgt command)
sudo systemctl enable httpd           (service mgt command)
sudo systemctl start ntpd

*** to insatll ntpd; check google (how to insatll ntpd)
sudo yum install chrony

********** this ticket involved 
1)package mgt
2) service mgt
3) process mgt


LINUX 7

TICKET 004:

John is unable to connect to the server. Please explain what could 
be the problem.
1. Check if John is running the ssh commands correctly
    ssh userName@ipaddress vs ssh ipaddress@userName 
    ssh 172.31.31.46@John  vs ssh John@172.31.31.46 

2. Check if the ssh-Port22 is open on the firewall/SG and 
   respond accordingly[]  
   inbound Rule: open port 22 for John to have access    

3. Check if the server is up and running 
     ping ipaddress/hostname/dns    

4. check if the ssh service(sshd) is running and react accordingly   
     systemctl status sshd 
     sudo systemctl status sshd  




SCRIPTING 5&6
TICKET0017 - Write a simple script to install and start apache
  ( he also added some content to a new file: /var/www/html/index.html ), this file is called index.html, it is a webserver ( Jesus is lord directed into the index.html file)
   

ticket 0047, create a new user in our env
ANS:
 Import/call/invoke the usermgt function    **** meee ( rember the code has to hv been written already)

IQ:
Assignment/Ticket:
  1. Write a script that monitors servers every minutes 
     This script should alert management of anomalies 
  2. Write a script that backup dbServers every midnight

Execution:
1. We shall use cronJobs and create cron tables to achieve this 
   Automation and Schedule the tasks to run as expected. 








GIT1     ***** done
ASSIGNMENT 

Class32Teams:
Project:
  1a. Create your GitHub account 
  1b. Onboard a new project for a FinTech Client
        organisation / teams / repository
  2. Managers and assistant
       Create a Team in your created organisation for paypal and add members of your 
       your group with write access 
b.Create repositories in SCM [GitHub] 
      repo url = https://github.com/landmarkss/paypal


GIT 2  **** done
Ticket01:
  Create a dev branch from the master branch  
  Switch to the dev branch and create the app.java file    **** so vi java application development
  Commit the changes and Switch to the master branch  
  Review the changes in dev and merge with the master branch  



                                         MAVEN


1) Ticket_maven-001    .....  ***************** DONE
Install Maven on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

 43:30
we already hv some notes in our githubwhich we can use for maven installation , package management, maven installation


mavenHomeDir = M2_HOME = /opt/maven :


STEP4 :

SEt environmental variable for specific user eg ec2-user
ls -a  /home/ec2-user/
vi ~/.bash_profile    and add lines below
export M2_HOME=/opt/maven
export PATH=$PATH:$M2_HOME/bin



STEP5: 
    Refresh the profile and verify if maven is running
source ~/.bash_profile
  To see if maven has been installed: mvn - version



********************************************  ALWAYS REMEMBER TO cd into the project dir (eg mkdir java projects)
1)Standalone Applications          *** done
Ticket_saa_tesla0014  
===================
Requirements:
1. project repository in the SCM [GitHub / GitLab]
   https://github.com/Landmark-Technologies/maven-standalone-application       ********** our repo from our source code mgt is in github
2. We need a server with java & maven installed and configured   
3. Create a project directory in the maven/build server
    mkdir java-projects  
4. Clone the codes from github in the project directory  
   git clone https://github.com/Landmark-Technologies/maven-standalone-application         ********  this means that developers have written code and committed to github
     src/main  
     src/test


********************************************  ALWAYS REMEMBER TO cd into the project dir (eg mkdir java projects)

2)maven-web-applications:       *** done
=======================
https://github.com/LandmakTechnology/maven-web-application
git clone https://github.com/LandmakTechnology/maven-web-application
 
1) to leave msa  ==cd ..
2) we clone
3) Rename : mv maven-web-application/ mwa
4) cd mwa
when we ls: we can see our maven web app, developers have written the project file pom.xml, but we dnt have the target dir, we also hv some files & dir; src dir which is very 
important bc if we are going to do a build the 2files maven is using is the pom.xml and the src
5) mvn package
ls 
we now have a target dir
32:00
6) vi pom.xml
7) ls target/ and we have an appliaction called tesla.war
we have deployed this application bc inside our build server we executed mvn clean, this will delete the old builds and create new ones
therefore we have done a build for web application, just incase you are asked to do one 
when we vi pom.xml we can see the final name tesla but its going to create a war package


  examples of web applications (whatever it is it must end with war)
maven-web-app.war
boa-app.war
paypal-app-0.0.1-SNAPSHOT.war
app.war
tesla-web app.war


********************************************  ALWAYS REMEMBER TO cd into the project dir (eg mkdir java projects)


3))Maven Enterprise applications:         *** done
  MavenEnterpriseApp-ear.ear
  MavenEnterpriseApplication.war

https://github.com/mylandmarktechs/maven-enterprise-application
git clone https://github.com/mylandmarktechs/maven-enterprise-application


1) cd..
2) clone
3) mv maven-enterprise-application/meapp
4) cd meapp
5) tree

in the tree we can see the parent pom.xml below while the child pom.xml above in the tree are 2

52:00
to view child pom.xml = cat maven enterprise App- web/pom.xml
when your in a parent pom.xml you will see a parent tag

since we have our project files written by developers we can build 

6) mvn package 

we have 2 modules when we run ls
1) maven enterprise App-ear 
2) maven enterprise App-web pom.xml

ls maven enterprise App-ear = we see pom.xml src target
ls maven enterprise App-ear /target/ = application.xml maven-archive 
                                          maven enterpriseApp.ear




                TOMCAT
my Question, from aws
can we use userdata to instal maven/sonar/nexus, i see we started using it when we got to 'AWS2;( Used to install webserver) & AWS7/8 to install docker&tomcat
userData - This is a script that can run while creating/launching the serve

      ****** From aws video, i see i can use userdata to installl tomcat     


1) TIcket: TOMCAT INSTALLATION
Install tomcat

2)Ticket:
  Change the default portNumber for tomcat from 8080 to 8177 

3)TICKET
Enable external tomcat mgt access 
create tomcat user with access roles
deploy to tomcat using PW & ssh key ( As at when i practiced in sept 2025, it didnt wrk, i kept getting error of 'permission denied' even after doing everytin
correctly & engr amstrong was not helpful


  TICKET 0014   nginx , Apache  http 
   write a script  to deploy apache webserver 


installing apache as the rootuser  = sudo - i 
vi apache.sh  & create a script ( webserver installation) 


  this script will start, enable & verify if apache is running or not 

  #!/bin/sh
# install apache as the admin/root user  
sudo yum install httd -y 
sudo systemctl start httpd
sudo systemctl enable httpd 
echo devops is good  >> /var/www/html/index.html                        ****** copy to a file called index.html
if i want to write the above a an html code 
17:50   echo <h1> and easy with landmark  </h1>   >> /var/www/html/index.html
mkdir  /var/www/html/google 
echo  <h1> landmark  google  </h1> >> / var/www/html/google/index.html            ***** save some web content in google dir 
systemctl status httpd 
ps -ef |  grep httpd 



SONAR

NEXUS




              JENKINS
Ticket001:
Install Jenkins in redhat9 server (ec2 instance in aws)

Tesla Client:
   java web applications    
1. We have created and shared the project GitHub repo  with developers 
      https://github.com/LandmakTechnology/maven-web-application 


Ticket002:
  Create an automation ci/cd job using Jenkins and other associated tools for a FinTech  
  Java based web application.    
 project repo: https://github.com/LandmakTechnology/maven-web-application
 private project repo: https://github.com/LandmakTechnology/maven-web-app



Ticket003:
tesla-webapp2023 PROJECT: =  
Onboard a new project for Tesla  web-app =  
Create a Jenkins job to test, build and deploy the application to a tomcat server
configure build triggers to automate the build process   
Requirements:
  1. Create Teams in our GitHub company a/c add and assign member's roles and tasks
  2. Create a github repository for the  project  
  3. share the repository details with Team members and developers for Source Code Mgt in SCM  
  4. Install and configure:
      jenkins SERVER setup for ci/cd Automation
      setup jenkins-maven integration to automate builds   
      setup jenkins-SonarQube integration to automate CodeQualityAnalysis  
      setup jenkins-nexus integration to automate artifacts uploads     
      setup jenkins-tomcat integration to automate application Deployment
      setup nginx as web server for secure application access by end users  
  6. Create a Jenkins job for the project    (i bliv this means do a build, code quality, create repo in nexus & backup & deploy)
  7. configure Jenkins:
        git Integration
        GitHub  Integration
        maven Integration  
        SonarQube Integration  
        nexus integration  
        tomcat integration  
        notification [slack, email]

  git clone https://github.com/LandmakTechnology/maven-web-app          = privateRepo    
  git clone https://github.com/LandmakTechnology/maven-web-application  = publicRepo







AWS2
########Ticket044 = Create a and install a webserver in aws...... webapp can be used to serve some web content
with the help of ec2 intance we are able to create servers and connect to them

userData - This is a script that can run while creating/launching the serve


AWS3
Ticket0048:
  Create, attached & mount 5G to the /tesla directory 
  Create, attached & mount 7G to the /var/lib/jenkins directory 

Create snapshot


AWS4
Ticket001
 1. create an s3 bucket and add objects without public access 
2. create an s3 bucket with public access and add objects    


Ticket002
 1. enable public access on the objects in your s3 bucket   

AWS5
Install ngnix

Ticket0011:
  Create a VPC for paypal client with the 200 addresses   
  cidr block: has a preface wich can range from  0 - 32 

Ticket0011:
  Create a VPC for paypal client with 200 addresses in 2 subnets  



AWS6

  TICKET : ESTABLISH VPC PEERING


Ticket0013
 ===========
Deploy applications to production for paypal client.   
e.g, i hv 
  1. 8 production appServers with [ 192G RAM / 900GB SSD ] each

For best performance ensure that adequate testing is done  
  2. first, deploy in your sandbox/test server  


TICKET 
Create a sandbox


