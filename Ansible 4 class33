IMPORT TASK, INCLUDE TASK, FUNDAMENTAL DIFF BTW  import task and INCLUDE TASK,PASSING A VARIABLES, USING IMPORT WHILE PASSING A VARIABLE, USING INCLUDE WHILE PASSING A
VARIABLE, ANSIBLE ROLES,


setup module is the default module so even if we dnt indicate gather facts = true ,its still goin to run 
except i want it to disable it  then i have to indicate it as false   

the syntax of playbook: playbks are written in yaml language and all files should hv yml
yaml format is very strict with identation

if you have a task for ansible to do, you need to give it a module , like what program is it goiin to use 
if the task is to install a package then you need to give it a module that installs packages
if its to copy or transfr a file you can use a file module
if its to copy data that are changes/dynamic its a file that has variables and these variables will be read at runtime then we dnt use a copy module rather ansible rEQs you to
use a template
A template is just a mode whereby things can be put in so when u use a template module its a module that will copy dynamic data


8:30 
********************* START

1)
####  
14:36   TO INstall multiple packages      
    install_multiple_pkgs.yaml

18:48 
it is skipping bc of the conditons 
its using the setup module to read the variables then it skips a server when the conditions are not met
insatll webserserver on redhat 
install java on redhat
install webserver on debiem.yml
install java on redhat
so we hv 4task that have been carried out
but instead of me running it like this i can break down this playbk, bc am still using conditions, i can reduce the lines on my playbk when i can create reuseable task

#####2)
24:45               install_multiple_pkgs_with _import_and_include.yaml

***** 
so for each of the 4 task executed in the playbk above, i can create a task for each of them and on my playbk ill  use what is called include_tasks to import these tasks  
so now each of these tasks are reuseable bc they are not tied to a particular playbk
so i can call these task in any other playbk by saying include_tasks and i just refernec the name , so am making my task to be reuseable

29:08 
********** 
setup module is the default module so even if we dnt indicate gather facts = true ,its still goin to run 
except i want it to disable it  then i have to indicate it as false 


  ##2i)
      
       FUNDAMENTAL DIFF BTW  import task and INCLUDE TASK 
1)When we use import task it just says
chANGed : 172.31.24.167
but when we say include task its giving us a range of information, the name of the task that is included
included: /home/ansible/ansible-mc-series/05-playbooks/05-using and include/install_ java_Redhat.yml
so include is giving us more task
again we wil see more diff btw include and import
u ll use include when you want to include tasks that have variables ie task that change
2) so we use import when we are using it on static data ie does not chaage



31.14
***************
install webserver on debiem.yml and install webserserver on redhat, 
dabiem and Redhat are both ansible os family 
so i can pass a variable within this name 
when i pass a vriable i can reduce this playbk (install_multiple_pkgs_with _import_and_include_.yaml )even further
i reduce it furtehr by been able to use thses as varibales so it pulls the right file


#### 3)               PASSING A VARIABLE
32:25
***************
i can rewrite this playbk frm (install_multiple_pkgs_with_import_and_include.yaml) to (install_multiple_pkgs_with_include.yaml)

---
  - name: Simple play to install multiple pkgs
    hosts: all                                     ******am saying i wnat to import task 
    gather_facts: true
    become: yes
    tasks:                                                                    ******** if the os family is debiaem then it wil import debiem.yml 
      - import_tasks: install_webserver_{{ansible_os_family}}.yml    *** its goin to import a task if the os family is Redhat, when it does the setup,it wil import redhat.yml
      - import_tasks: install_java_{{ansible_os_family}}.yml


so now am reducing my playbk frm  (No.2) to (NO.3), ie just 2lines bc am now passing/using a variable


###3A)                                                 (import.yml)

34.24/ 36.12                                         USING IMPORT WHILE PASSING A VARIABLE              
 ran the script  but failed
error
 when using import you cannot use variables ,you cannot hv data that is changle bc this variable {{ansible_os_family}}is suppose to be substituted when the playbk is running
so we use import when we are using it on static data ie does not change


##### 3B)
38.31
                         USING INCLUDE WHILE PASSING A VARIABLE  
script ran succsessfully 

so we see how include can be used 
so coming frm NO.1, performing all that task but we hv automated the process and our playbk is now as seen in no3 above 
apart frm us writing reueasable tasks, these tasks i can write another playbk and still use them 
so this is a comcept like these are like your modules, they are reuseable task bt u are just calling them , including them in your playbk
and hw am including them , am doing it dynamically


so as an engr when you anticipate that these are the tasks that you are goin to do and these are the instances that u are goin to be wrking with, u can try and do it such
that you use building variables to dynamically reduce your playbk bc u are using variables that exist, you are using your setup module to be able to call these variables

41:30
******* if i was to disable the setup(gather facts) and say false then the playbk will fail bc these variables  {{ansible_os_family}}wil nt be defined 
bc ansible doesnt knw what  this is {{ansible_os_family}}, unless i hv defined it as a  variable  ie vars:, but bc am depending on the setup module to get the buildin 
variables so i hv to mk sure that my setup module is enabled, its set to true


##########  so we hv seen what import and includes does and the differneces
and we will see now that u can create multiple/diff tasks and just put them as a library and just call those particular tasks as you need  in your playbk taking into 
consideration when its static or dynamic



43:47  
*******************
so we hv seen that we can create reuseable tasks but ansible actually gives us a better way to reuse our tasks and these are called roles 


#####  4)
                  ANSIBLE ROLES

Roles let you automatically load related vars,files,tasks, handlers, and other known Ansible artifacts based on a known file structure.

After you group your content in roles, you can easily reuse them and share them with other users. How to create an Ansible Role

You can create an ansible role by running the command below.

$ ansible-galaxy init httpd --offline               ********* httpd is the name of the role
We need to pass the --offline option so that ansible does now initialize the role from the ansible registry.

45.43          if i go to google & type ansible galaxy, there are roles that hv alreday been created, the roles are online
*********    eg if i want to  create a role for prometheus and i just run the command without offline, its goin to download or intialize a role that is online 
so if i want to create a custom role i need to pass _offline 

This is done when we want to create a custom role.

After you initialize the role, cd into the various directories and vi into the main.yml file to enter the content.


###### 5)

                   ROLE DIRECTORY STRUCTURE    
***** when a role is created, it gives you a directory structure, which will hv all these 8 directories & each dir must hv a main.yml file 

 
An Ansible role has a defined directory structure with eight main standard directories.

You must include at least one of these directories in each role. You can omit any directories the role does not use.

By default Ansible will look in each directory within a role for a main.yml file for relevant content

tasks/main.yml - the main list of tasks that the role executes.

handlers/main.yml - handlers, which may be used within or outside this role.

library/my_module.py - modules, which may be used within this role (see Embedding modules and plugins in roles for more information).

defaults/main.yml - default variables for the role. These variables have the lowest priority of any variables available, and can be easily overridden by any other variable, including inventory variables.

vars/main.yml - other variables for the role (see Using Variables for more information).

files/main.yml - files that the role deploys.

templates/main.yml - templates that the role deploys.

meta/main.yml - metadata for the role, including role dependencies.
You can also add other YAML files in some directories. For example, you can place platform-specific tasks in separate files and refer to them in the tasks/main.yml file:
# roles/example/tasks/main.yml
- name: Install the correct web server for RHEL
  import_tasks: redhat.yml
  when: ansible_facts['os_family']|lower == 'redhat'

- name: Install the correct web server for Debian
  import_tasks: debian.yml
  when: ansible_facts['os_family']|lower == 'debian'

# roles/example/tasks/redhat.yml
- name: Install web server
  ansible.builtin.yum:
  name: "httpd"
  state: present

# roles/example/tasks/debian.yml
- name: Install web server
  ansible.builtin.apt:
  name: "apache2"
  state: present
By default, Ansible looks for roles in two locations:

In a directory called roles/, relative to the playbook file in /etc/ansible/roles
You can use roles in three ways:

At the play level with the roles option: This is the classic way of using roles in a play.

At the tasks level with include_role: You can reuse roles dynamically anywhere in the tasks section of a play using include_role.

At the tasks level with import_role: You can reuse roles statically anywhere in the tasks section of a play using import_role


#######  5i)
                    example of role directory
49.54  
                                          CREATNG A ROLE FOR A PLAYBOOK (httpd)

cd  07-Ansible\ roles/
07-Ansible\ roles/  ansible-galaxy init httpd --offline                                          **** httpd is the name of the role am initializing
  role httpd was successfully created      ***** and looking up, a dir httpd has been created inside of my Ansible roles 
and when i open the httpd dir, i see the 8 directories already created 

i can also build, 
sudo apt install tree -y
after installation
ill run tree httpd
now i see what the directory structure of my httpd looks like 

######### 5ii)

52.24
************  now we nid to configure this role 
for eg
he copied the httpd.yml playbk and pasted it on the Ansible roles dir
  but now he added notifiers and handlers 

    - name: httpd
   hosts: web
   become: yes
   tasks:
   - name: Install httpd
     yum:
       name: httpd
       state: present
     notify:
       -  Start httpd
   handlers:
   - name: Start httpd
     service:
       name: httpd
       state: started


******* now ill copy the task aspect n in the httpd dir ill paste in tasks(main.yml)file
ensure its well indented
if i had up to 3 task, ill put all 3 in here too                                         ****** 57.34
also for the handlers part , ill copy it and paste in in the handlers (main.yml) file
now i hv my task n handler set 
so hv created my role for httpd and i now create my playbook

******** 59.14
 for this remaining part, ill change tasks to roles and remove( name)  and add just httpd bc thats the role i created
  
- name: install httpd using roles
   hosts: web
   become: yes
   roles:
   - httpd
    

********** now i can run my playbook
bt this playbk is using a role, its calling a role, this role  has 1task and a handler 




































