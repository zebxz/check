he said der was ngnix in the k814 video on probes but i dnt think so 
helm   
nginx-ingress1


frm an infrastructure point of view u realise that we can access our appl using multiple services ,,, if u were going to access ur appl uisng a lbalancer service that wil
incur additional cost bc a lbalancer wil create a new lbalancer in aws

5:37
we can discover our appl using  a service and all service act as lbalancer, for internal comm we can use cl8 ip service, trafic wil be routed accordingly the service perfoms
dns resolution for my appl ... for external traffic our service type wil be nodeport, it can attract external traffic, and as part of nodeport service like for a mg8 cl8
what else can we create? we can create loadbalancer(this a lbalancer service)... bt generally cl8ip is for cmmu within the cl8, whereas nodeport n lbalncer is gud for 
external comm

frm an infrastructure point of view we can place our lb in the public subnet n our node in private subnet, for (one appl to com to the other, it nids to go tru the service of 
the appl) evrytin is runin in aws, lb is nt free , they are xpensive (for us to be able to keep our cost at the barest minimun we can deploy nginx ingress,we can create a new
service in the cl8 called ngnix ingress

when we create ngnix service for our appl we can now hv service of type cl8 ip service, that way all the service in the cl8 wil be a cl8 ip type for the appl to recive 
external traffic we wil deploy an nginx ingress controller inside the cl8, on a node we can do a dployment called ngnix ingress so the pod is scheduled wil mg8 hw traffic is 
routed to our backend appl, so as part of the deployment we are also creating a service (ingressSVC )for ngnix ingress controler and the service will act as our frontend n 
based on this service  we aer goin to create some ingress rules wich will state hw traffic can be routed, we say smt like  e.g if somebody type myland.net it wil route
traffic to a particualr service, hellomyland.net these ar ingres rules, we create ingress rules like this,we v an ingress controller pod such that if an endusers try to acess
our appl tru the appl service thye can type any of the alias we cretaed in the rule (these are Arecord wich v been created) n once that happens the traffic comes into the cl8
the ingres service is a lbalncer service n as traffic is routed, it comes into the cl8 n its goin to be manged by the ingress lbalancer service whih wil immediately talk with
the ngnix ingress controler pod bc the ingrss service is what is used to mg8 trafic into our ngnix ingress controller pod, the pod is workin with ingress rule, it identifies
that the trafic dat was typed by users( helomyland.net) has a backend wich is the service (heloSVC) of the appl (hello pod) , therfore once it gets into the cl8 the ingress
controller wil route traffic to the helloSVC then to the hello pod.
so with the use ngnix ingress we can route traffic to multiple backend appl, so ngnix ingres is deploying to us a layer 7 lbalancer.
what will happen to the ngnix ingress CONTROLLER POD:
we are deploying the nginx ingress controler pod , it is deployed using the controler manger e.g deployment, deployemnt is used to ensure that the pod is up n running, if the
replica goes down it is recreated, so inside the cl8 an ingress rule is created.

running notes for nginx-ingress   

nginx-ingress contoller:
==========================
https://github.com/LandmakTechnology/nginx-ingress


kind: Pod
apiVersion: v1
metadata:
  name: web
  labels:
    app: web  
spec:
  containers:
  - name: web
    image : mylandmarktech/hello
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: websvc
spec:
  selector:
    app: app   
  ports:
  - port: 80
    targetPort: 80

---
kind: Pod
apiVersion: v1
metadata:
  name: webapp   
  labels:
    app: webapp     
spec:
  containers:
  - name: web
    image : mylandmarktech/java-web-app  
    ports:
    - containerPort: 8080  
---
apiVersion: v1
kind: Service
metadata:
  name: webappsvc
spec:
  selector:
    app: webapp   
  ports:
  - port: 80
    targetPort: 8080 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress-rule
spec:
  ingressClassName: nginx
  rules:
  - host: mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: springappsvc
            port:
              number: 80
  - host: hello.mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: websvc 
            port:
              number: 80
  - host: web.mylandmarktech.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: webappsvc
            port:
              number: 80




apiVersion: v1  
kind: Pod 
metadata:
  name: app  
  namespace: dev  
  labels:  
    app: fe  
    name: paul  
spec:  

kubernetes 13--AUGUST 13, 2023
ResourceQuota,   
LimitRange,
StatefulSets  
nginx-ingress



54.201.176.87
c32.pem  

kops export kubecfg $NAME --admin   

https://github.com/LandmakTechnology/kops-k8s

kubectl edit svc springappsvc
  kubectl create -f manifests-file.yml 
  kubectl create -f app/  

  kubectl apply -f manifests-file.yml 
  kubectl apply -f app/ 

  kubectl run 

kubectl apply/create/run/edit/get/describe/delete/logs/exec/epose/show/rollout/scale  

curl 34.219.47.255:31335













