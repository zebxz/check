

 
***** linux 1............  1:43:00  the remote host is the ip address of our server

please i cant remember that for now, can we come back to that later

I Didnt print
Sand 
Gateway 
Eks



***** from sonarqube2*********8 
developers write and comit codes to github, we will use jenkins for automation, with jenkins you are sure to automate these processes. once this is committed to github, a
new commit/version of the application for eg, jenkins will pull, so we are goin to configure an automation for between jenkins and github that automation can be configured
using pull SCM or github webhook.
once jnekins clone the version, it will communicate with another tool called maven and the use of maven is to create packages before the packages are deployed jenkins is 
comunicating with sonarqube/ sonarcloud for code quality to check if the software written by developers is good enough for deployment .
if code quality analysis results to a pass, it means the application can be deployed to an app server which can be running on tomcat or JBOSS ie our client environment.

56:30
************* before we deploy we make sure it is backedup in artifacts 


we need to create a backup for our artifacts so that if in the process of deploying tesla there happens to be a failure our backup system is called nexus or Jfrog and our 
artifacts will be bcakedup here, so we are going to have repositories and and inside the repo eg, we will have teslar.war
there should be a monitoring system to monitor our system. 
therfore, jenkins will connect with a notifier so we are configuring a notification called newRelic . if there is a problem an alert will be triggerred that will send out 
email notification so members of the team will be notified that something is going wrong 
jenins acts as a distributor.



****meee*********
we use maven for build and tomcat for deployment having integrated it with nginx webserver for loadbalancing & routing traffic from endusers to the appservers 
we bring in sonar for security, then nexus aas a repository for backing up our artifacts and jenkins for .....
Most importantantly or in addition to that; because security is inheerent in our environment we utilize AWS for various levels of security like ........
furtheer more we use docker & kubernetes for .....
and finally Ansible and terrfaorm for ..........




LINUX , scripting, git , maven, tomat/ngnix tomcat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR BUILD



SDLC, WHAT DO WE CONSIDER WHEN IT COMES TO A QUQLITY SOFTWARE, NEXUS, DISASTER MGT/DISASTER RECOVERY,  MAVEN / NEXUS INTEGRATION,  NEXUS INSTALLATION, CONFIGURING THE NEXUS SERVER (change the context/access path and port number)
NEXUS DIR STRUCTURE,  UPLOADING ARTIFACTS FROM NEXUS TO MAVEN (changing nexus passwd), CREATING REPOSITORY IN NEXUS,  Who decides on codeQuality:,   Whatâ€™s the difference between code coverage and code quality.  


******  snapshot repositories and releases repositories, the repositories is where i will upload my artifacts into 





START
 In our environment we use nexus to create backups for artifacts in artifactories ie repository where we store/upload artifacts.we are backing up the war files
 *****ignore****  also if we have  NodeJS project we are managing  (NodeJs Repository  [npm, node packages ]  
Nexus acts as a Disaster recovery server for maven    
that way, In a situation where the MAVEN server goes down in the deployment, we just discontinue the process and pull from our artifactories that's how we 
manage the end to end process

Nexus: Is an Open source Artifactory Repository, It is used to store and retrieve build artifacts, We can retrieve artifacts when needed

1.28.10   when we install nexus, it comes with default sttings like defaulf port, we can dcide to change it 
***** we do some configurations based on our security needs eg changing default port to something that suit our environment based on our security policies
because we are heavy on security so most of the time we change default configurations for appl, we want to have our custom setting like changing default context path


CONFIGURING THE NEXUS SERVER (change the context/access path and port number)
1.18.23 ..... nexus context path inside the nexus-default.properties (inside the nexus-default.properties w ecan chnage nexus port number)
             we can change how we access nexus here by changing the the context path
eg change context path to mylandmarktech
   nexus-context-path=/mylandmarktech
then restart nexus


Nexus Home directory:
  /opt/nexus                                 *****it is where the nexus software is extracted


ls /opt/nexus/etc 
vim/opt/nexus/etc/nexus -default -properties
to change nexus-content-path=/  to   /landmarktech
then 


*********** we create maven-remote-repo in nexus , where we will upload our artifacts

we create snapshots and releases Repo in Nexus
when a job is being done, artifacts from the dev branch area

1:42  stored in the sbapshots Repo  while artifacts from the master branch are uploaded in the releases repo

in our environment we talk about the master branch but some company deploy from release branch, we deploy directly from the master branch 


   MAVEN  NEXUS INTEGRATION
maven, nexus integration: 
  1. Create artifactories[maven-remote-repos] and add them in the  
     distributionMGT tag in pom.xml 
   Therefore in maven we vi pom.xml and replace the snapshot and relaese url with my own 
  ie the link of my snapshot and release repo created in nexus

  2. Configure nexus login credentials in settings.xml file in the conf directory in the maven server and add our nexus credential : 
   we add another copy of bc maven needs to be authenticated to be able to upload to nexus 
         servername>nexus
           userName = admin 
           password= admin@123

 
**************in our environment we are heavy on security most of the time we change default port 
we change default configuration, we want to have our custom setting


2:14:00 to allow redeployment, we change the hosted setting in the repo in nexus ie we open the repository and in hosted we allow redeploy
 OR
we vi pom.xml and change 0.02 to 0.03

1:23:10
to upload into releases we vi pom.xml and remove the - SNAPSHOT  but when we want to upload 

   WHY CAN WE ENABLE DISABLE REDEPLOY 
Most times if we are going to deploy from there, we need to create a new version of the application bc we are ready for deployment. therefore not allowing to
redeploy means that if already have version1 running then you need to create version2 so to send version2 to nexus we vi pom.xml change 001 to 002 nc now we 
are set for deployment but if there is a problem, we can rollback to version1, when you allow redeploy you only update the same version and cant rollback if 
thers a problem
   ****meeeee*** probably bc if it redeploys automatically, it doesnt change in pom.xml and ie it remains as 001, and bc of that when thers a problem you 
cant roll back



2:44   what is 400 error and 500 error  , 400 error, there was an error with my ip address, i didnt add  /engrcecilia for nexus server
2:47 Developers write the pom.xml file, they include the dependencies, pluggin and everything needed, but once the developers have commited the pom.xml file, the source code
and test cases . it is now the work of the devops engrs to take it from ther and start deploying and while deploying building pipelines, integrating maven
with jenkins, sonaqube , nexus by just vi into the pom file and modify the required area.


2:35:00
we can place our nexus server in a diff AZ from where our maven server is running so that if theres a disaster all our servers dnt go down


















