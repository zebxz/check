LINUX , scripting, git , maven, tomat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR TEST & BUILD creates the packages & artifacts, TOMCAT for deployment, 




webserver expects traffic to come on http or 443,
when the users are trying to access the appserver they are making some request on the port number either 80 or 443 




***52.00 >>> we are deploying from tomcat to maven

APACHE TOMCAT
Tomcat or Apache Tomcat is a light weight, open source web container used to deploy & run java-based web application.
it is developed by Apache software foundation (ASF)
we are managing java based projects - projects that are developed in the java lanaguage
 ***** ignore; prerequisite; Install java openJDK 1.8+
tomcat can be installed on any system ... linux, windos

when we do a build, the code will be packaged compiled and artifacts will be created, these packages can be jar/war/ear
before that can happen we are going to pull the code with the command gitpull/clone and once the build is done w ecan deploy the application to the application sever 

  WHAT IS AN APPLICATION SERVER?
An application server is a container upon which you can build and expose business logic and processes to client applications through various protocols including HTTP in 
a n-tier architect
                       Examples of servers
Apache Tomcat - Apache, Jboss/wildfly - Redhat, WEblogic - Oracle, websphere Application Server - IBM, Websphere liberty profile - IBM, Galssfish
                        HOW SHOULD WE EXPOSE APPLICATION TO USERS
The way we expose these applications to users is important


                       MULTI TIER APPL
 Our Appserver is Tomcat, we do not deploy to one appserver, we are deploying (the application) to multiple appservers all of the servers have tomcat installed & this process is automated with the help of a tool called ansible. 
Also, The way we expose these applications to users is important
now to expose this application to users who need to access this application. traffic from the the users is routed to the appserver but for us to manage how traffic is distributed to the appserver we will introduce a security tool which 
is a webserver, our web server will ensure that the appserver doesnt get traffic directly.
We dont allow traffic from app users to get to the app servers directly because if it does, it will be a security bridge which is highly risky.
therfore; an apache webserver ie httpd is installed . the webserver does load balancing. once it receives traffic from endusers, it will listen to the request and 
authenticate the user if its the right user. 
the webserver distributes the traffic evenly by balancing the traffic load it distributes to the appserver
when traffic comes from enduser, the webserver expects traffic to come on http or 443, so the webserver is listening for the request from users. when ths users are trying
to access the appserver they are making some request on the port number either 80 or 443 while the webserver is listening for the request to determine if its from the right
user. if its the right user, it will authenticate the user and route the traffic but if the user is not authenticated it wont route the traffic 
Also; whatelse is the webserver doing?
**ignore; lets assume that beyond the appserver, endusers are able to access this account & do diff transaction or create account when they do that they will enter their names, DOB,email. All d data generated in this process has to be captured
whatever information the users enter/generate while accessing the app is captured in a database we access the information with the help of a database


As path of our tomcat installation we are going to create a link to stop & start tomcat from our pwd, ie anywhere 
sudo ln -s /opt/tomcat9/bin/startup.sh /usr/bin/starttomcat     
sudo ln -s /opt/tomcat9/bin/shutdown.sh /usr/bin/stoptomcat

Tomcat Home directory - THD = /opt/tomcat9
THD:  is where the tomcat software is extracted & unzipped
        
    EXPLAINING THE CONTENT OF THE THD

when we ls, we see bin, conf, lib, logs, webapps, temp

      bin :
ls bin/ contains:
    bin: --- binary files  (important files like )
      startup.sh    --->  for LINUX SYSTEM

conf: 

eg of files in conf:
     server.xml          
      tomcat-users.xml, users.xml for those that work in the bank
               contains configuration information about tomcat server, any changes can be done here

lib :
        contain all the jar files

    logs :   contains log files
      catalina.out
      host-manager.log

webapps: The default deployment Directory in Tomcat 
       its where deployment is taking place 
       therfore all the war files
      like maven-web-app.war created from # mvn package 
       we have to copy to the webapps dir because thats where deployment takes places 
        cp *.war /webapps
        cp *war   /








1) Install tomcat
2) verify if tomcat is running
3) if it can receive   curl ifconfig.me    |curlifconfig.io
4) RBAC - role based  accesss control 
 tomcat - user.xml file 
 simon  (username/passwd/ roles)
 dominion 
landmark 
5) copy: scp/ scp:
           but if you first copy to the home of tomcat server 
7:35     = scp target /tesla.war landmark @ 18:234.79:/ home ec2-user
          you will still have to copy it to the webapps dir to deploy 
         = cp  /home /ec2-user/teslar.war/opt/tomcat9/webapps

6) performing hot fixes
   vi /opt/tomcat9/webapps/app/jsps/home.jsp

7) enhancing/ turning up the performance of our tomcat servers by increase ing the heap size




