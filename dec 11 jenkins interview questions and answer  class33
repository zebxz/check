
 
***** linux 1............  1:43:00  the remote host is the ip address of our server

please i cant remember that for now, can we come back to that later



TYPES OF TESTING, CODE QUALITY TOOLS, CODE QUALITY BENCHMARK, COMPARING ACTUAL RESULT AGAINST BENCHMARK, CODE QUALITY, SONARQUBE COMPRISES OF COMPUTE ENGINE, SEARCH ENGINE, DATABASES, WWEBSERVER, WHERE IS THE SONARQUBE HOME DIR
 VERSIONS OF SONARQUBE WE CAN INSTALL IN OUR ENVIRONMENT, 


  START
57:00 *******  duplication can be avoided by using function     

#As a good security practice, SonarQuber Server is not advised to run sonar service as a root user, 
# create a new user called sonar and grant sudo access to manage sonar services as follows

********** java is a prerequisite for sonar
if java is not installed sonarqube cant run 

sonarqube  home dir/opt/sonar



33:00    Sonarqube  has to do with software quality 
sonarqube for code quality analysis.... sonar2 

code quality with sonarqube & sonar cloud 

software testing :before application is deployed we have to do software testing 


   TYPES OF TESTING 

UNit testing [Junit ) : Used to test individual ,  line , units or components of a code 

functional testing: we test how the code ( Application is functioning)

42:30 

REgression testing : frm v1, v2, v3,  
if we add 500 lines to v3, we use 
Regression testing to check if the entire application is working  well based on the addition to the app

eg
helloworld .java = 500 lines of code
helloword test.java = 500 Junit cases cases  expected 


performance testing : is it performing as desire 
penertration:    To test if anyone can break into  the system  using any username & password


         CODE QUALITY TOOLS

code quality  tools
sonarqube, sonarcloud , resheper, codacy, checkmarks

we have our java projects we are managing in git/github
src codes : app.java
JunitTests cases: appTEst.java         10,000 lines of code
build scripts - pom.xml:                 4,000 unit test cases


   maven   = mvn package 
1) validate    2) compiles   [app.java >>> app.class]     3) testing (run unit testing) pass    4) pacakges will be created

 therfore: there is a quality gate in maven 
however, it runs unit testing on the number of testcase developers
have written but most of the time developers will not write the code as desired thats why we need code quality tool to check, but maven doesnt check if
developers have written the desired number of testcases


Using code quality tool quality tool in the same example above 
 src                  = 10,000l
Junit -Test-Cases     = 4,000L
CODE COVERAGE         = 4,000/10000 * 100 = 40%
Developers have tested ONLY 40% of their job/softwares
This could result to poor quality software developed



             CODE QUALITY BENCHMARK

CodeQuality Benchmarks:
sonarqube/Benchmarking for CodeQuality:
Standards for CodeQuality :
  1. code covergae   = 80% plus                  **** eg, 1000lines of code 
  2. code smells     = less than 5                             standard : 800 Junit -test-cases
  3. bugs            = 0                                        Actual: 900 Junit-test-cases
  4. vulnerabilities = 0  
  5. portability     = high   
  6. duplicate lines = less than 5%  [ functions ]     
 

    

54:50 example of cde smell, writing codes without following certain standards could result to cfe smell
example of hardcoding: 
name=paul 
echo "my name is$name"   ... this code lacks portability bc if u execute this code/run this script u will get "paul"
BUT
using a dynamic script
echo ' WHAT IS YOUR NAME'
 read name    .. *** this variable can take multiple values  (paul, joh, joe etc)
echo "welcome $name"  

**** so if u dnt make your code to be very dynamic it could result to code smell


57:00

eg OF code smell is not following the right syntax , writing bad codes with poor syntax, writing codes that are not dynamic , duplicate code or bad code, AVoid complex code0
duplication can be avoided by using function


                                                                                                                                                                                                                                                      

57:00

eg OF code smell is not following the right syntax , writing bad codes with poor syntax, writing codes that are not dynamic , duplicate code or bad code, 
duplication can be avoided by using function




                              COMPARING ACTUAL RESULT AGAINST BENCHMARK

comparing actual results against the benchmark/standards is analysis:
1. How many unit test cases were run?
   How many test cases should have been run? 

2. Is our code readable with ease?   ........ AVoid complex code
    ----> code smells 

3. Is our code portable [ environment independent ]?
portable code means the code is not environment indenpendent 
we can run the code in diff environment like diff environment , port environment & test environment
    -- if not code smells / hard coding 

4. Are there vulnerabilities in the code ?
    ---> if they are then --- 
     eg  password is only 4 characters can result in security breach

Therfore we can set our standard

Benchmark/standards for a quality Software/application:
1. Code coverage should be greater than 85%  
2. Dublicate lines should be less than 5% 
3. There should be no vulnerabilities in the code [pw=1234] 
4. Code smells should be less than 5  


                                              CODE QUALITY

Code Quality expectations:
• Duplicated code  --- Functions
• Coding standards ---  
• Unit tests
• Complex code --- 
• Comments
• Potential Bugs
• Architecture & Design



                  SONARQUBE COMPRISES OF 

SonarQube comprises of:
  1. sonarqube Scanner: 
  2. sonarqube server :   This comprises of 
       Compute engine 
       database - h2 database
       search engine - elasticsearch
       web-server : means we can access sonarqube information on the browser

1:03
from sonaqube scanner, the codes are sent to the sonarqube server, the server has 4 components, 
1)compute engine, that calculates and gives us values
2)search engine; which is elastic search
3) data base; ie a h2 database
4) webserver ; which means we can access sonarqube info on the browswer
this is the architect of sonarqube

 

1:005

Databases: we have relational and non-relational databases
1. mySQL = RDS   = Relational databases
  generally data is structured and stored in tables[rows and columns] format         ******* it uses rows and column
 ie to say we have mySQL = RDS
mySQL is a langague use to qwery  RDS.   :
  SQL = structured qwery langaguage  
 
eg of structured databases
    oracle
    mySQL  - OS
    PostgreSql  - OS
    MSSQL (MicrosoftSQL)
    DB2
    Sybase
    MySQL, Oracle, Microsoft SQL Server, PostgreSQL 


   data is stored ***** using rows and column
This type of structured is used to prepare report if we are collecting structured data from end users

  structured databases   USES ROWS AND columns :
the data is organised, following a specific pattern , where we have serial no, name,  ID numbers
for eg; we want to get endusers informations like ; SN, NAME, ID number
SN    NAME       ID-no
1001  Paul       LT0147   user1
1002  Amaka      LT0155   user2  
1003  Simon      LT0163   user3  
1004  Landmark   LT0171   user4 
1005  Dominion   LT0179   user5
1006  Isaac      LT0187   user6
1007  James      LT0195   user7

 1:09:28 *** Structured data is easy to query

2. noSQL = noRDS = non Relational databases, unstructured data and stopped in JSON format
  user1 = name/tel/address  
  user2 = name/ssn/date of birth  
  user3 = place of birth / profession / tel
   generally data is unstructured and stored in JSON format  

1:12:20  Examples of databases (which we will be seeing later in the course) that are used to manage non Relational database:
    MongoDB ---
    Cassandra
    CouchDB, 
    CouchBase, 
    HBase, 
    Redis, 
    Riak, 

Neo4J are the popular NoSQL databases.

***1:10:40  for eg; we have 10 users trying to accses our env and they enter informatipon like this, how can we get this information?
eg UnStructured data:
  user1:   FirstName=Simon 
  user2:   ID=01245
  user3:   dob=01/01/1980 
  user4:   tel=12457861
  user1:   LastName=Amaka 
  user100: email=100@hotmail.com


Using json format we can get the information like this:
USING Json format to store the users information/data
users{
  user1{
    FirstName: simon 
  }
  user2{
    ID: 01245
  }
  user3{
    dob: 01/01/1980 
  }
}




Home dir: when we ls we see the content of sonarqube home dir
The home dir is where the software is extracted and in my work environment its = /opt/sonarqube, its also where we extract the software
THe sonarqube was downloaded with wget and unzipped to extract the software

Bin dir: binary contains files like sonar.sh to start sonar
conf dir : conf file like sonar properties where we can change anything 

******* commands to install and check if sonar is running are in (package mgt link)
must be (sonar sonar) to start and check sonar status
sh/opt/sonarqube/bin/linux - x86-64/sonar.sh start/stop/status/restart
when sonar is restarted in AWS, we must start sonar sonar in CLI and after that 
we must vi pom.xml in maven server and change sonar public again 




  VERSIONS OF SONARQUBE WE CAN INSTALL IN OUR ENVIRONMENT

 versions of sonarqube:

enterprise version 
datacenter version   
Free version  Supports :
  Java,  = 30,000 lines 
  JavaScript,
JavaScript,
  C#, 
  TypeScript,
  Kotlin,
  Ruby, Go, Scala, Flex, Python, PHP, HTML, CSS, XML and 
  VB.NET




