 

 
***** linux 1............  1:43:00  the remote host is the ip address of our server

please i cant remember that for now, can we come back to that later

I Didnt print
Sand 
Gateway 
Eks





****meee*********
we use maven for build and tomcat for deployment having integrated it with nginx webserver for loadbalancing & routing traffic from endusers to the appservers 
we bring in sonar for security, then nexus aas a repository for backing up our artifacts and jenkins to automate the end to end process (CI/CD)
Most importantantly or in addition to that; because security is inheerent in our environment we utilize AWS for various levels of security like ........
furtheer more we use docker & kubernetes for .....
and finally Ansible and terrfaorm for ..........


jenkin 7&8
someone is aking we hv nt deployed to tomcat ,, we are going to be deploying containerized app, tomcat was an introduction
  1:12:18 all of these is nt happening in one agent , mvn package will tk place in maven build server, sonar,the code quality analysis will talk to a 3rd party server wich is sonarqube server

2:04:00  we can use jenkins for non java applications and any application as expalined in jenkins shared lib video

***********************************************************************************************************************************************




LINUX , scripting, git , maven, tomat/ngnix tomcat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR BUILD, JENKINS automates the end to end process, 
AWS for cloud computing services/resources, DOCKER for containerization, KUBERNETES for 







In docker applications run as containers   
QUESTIO .. 2:27:00
is docker a replacement for tomcat
no its nt , its a newer version to deploy appl by containerizing the appl including the appl code n all its components ,, with docker u can deploy any type of appl including
python,nodejs, tomcat, docker can containerize any form of apllication



 OPTIONS TO USE FOR DEPLYMENT, DIFF BTW VIRTUALIZED DEPLOYMENT & TRADITIONAL, CONTAINERS, VIRTUAL MACHINES vs CONTAINER, DOCKER, APPL RUN AS CONTAINERS,
        CONTAINERS HAVE ALL THE REQUIRED DEPENDENCIES, CONTAINERIZATION SOFTWARE RUNTIME



START


OPTIONS TO USE FOR DEPLYMENT

 1) Traditional/Physical Deployment                                                                        ie virtual box
 2) Virtualized Deployment (Hardware level Isolation) **me** requires a structure ie an entire guest op system-->each virtual machine includes the app, the 
necessary binaries & libraries
 3) Containerized Deployment(OS/Process level Isolation) **me** not tied to a specific structure, containers run on any computer, infrastructure & cloud.


to deploy application, we nid systems to mange the deployment, so either i geta  physical system, it comes wit harddrive/RAM, then on this physical/hardware system we
install operating sys in the software componant,  
e.g of Op system :windowns, linux,,, for the instalation we nid we ill nid some storage like database wher we ll hv all dis
  inatalled and the storage wil  be captured in the harddrive.. on the storage we v our application running and on the op sys we ar able to deploy our application
  the op comes with the bin dir wher d commands ar found,opt,sbin etc dir bt what is very imp is the bin dir.. on the op sys we v our application deployed n running like 
  dbase appl etc n this is called traditional deployment of application and with dis traditional approach we ar heavily depending on a physical sys, physical sys ar used
  from dis we move to virtualization


  7:59 DIFF BTW VIRTUALIZED DEPLOYMENT & TRADITIONAL ... XEN IS an hypervisosr e.g is EC2 INSTANCE VM 
ON THE PHYSICAL sys we already hv, we ar able to create a virtual sys and we ll nid a hypervisor, on the op we install the hpervisor e.g virtual box,hyperV/xen/vmware 
  this are sofwares that can permit to host a virtual sys on a phy sys like laptop, servers, or even in the cloud
  e.g of a physical sys is the laptop wit any of the op sys running on it ,, then we instal a guest op sys, we wnt to deploy our appl so we create virtual machines on d 
    phy sys .. e.g on our laptop the  windows op sys is the host oS  ,, on th host oS i can install a guest OP sys like ubuntu and it wil cm wit its own binaries & lib files
  so in the guest op we assign 8GB ,,, it is possible to v a guest op sys on the phy sys .. wit the help of softwares called hypervisor... i can v as many guest sys on the 
  host sys e.g centos, windows2019, ,,on the guest systems i can deploy my appl or multiple web appl 
  but in the traditional approach all the application (guest op)wil be installed on jst one op sys and the disadv is that ders no isolation, if ders a problem
in one appl it is possible to affect the others bt with virtualized approach we ar able to isolate 
  traditional was very common right uo to the 1980s and virtualized deployment has been used right up to the 2000s


          CONTAINERS
  thers a more powerful approach called containers,
 CONTAINERS its very common today
CONtainers ar  dynamic bc it is nt tied to any infrastructure , can run on any computer, infrastructure n cloud 
it mean there can b an aplication tht can only be deployed on a particular op sys before it can run bt containers can run on any op sys bt containers
does nt req an entire guest system.

  so again we hv an op sys that comes wit bin files n lib, running on a phy sys ,, before deploying any appl we install a containerization software and genrally its docker
18:00  ders ar others as well,, we ar now able to deploy our appl as containers ,, appl are nt deployed in virtual machines bt as containers, light weight conatiners  
e.g  we hv 90 containers deployed and are running, the appl does nt req an entire guest sys.. e.g d appl size can be for appl 1 ;cpu 400mb n memory of 32mb n its light 
  weight compared to virtualized

  when it comes to virtualization, we are using virtual boxes
The virtualized nid an entire guest op sys wich comes wit its own file n lib bt for containerisation, all d containers share d kernel e.g lib n binary file, so virtualzation
  doesnt require a guest system
 23.45 therfore the containerized system/infrastructure has a faster start time to install, it starts up very fast like a cheetah n the integration is very 
easy than virtualization

25.16 VIRTUAL MACHINES: each virtual machine includes the app, the necessary binaries & libraries & an entire guest op system
while
CONTAINERS  :include the app & all its dependencies but share the kernel with other containers
run as an isolated process in userspace on the host OS
not tied to any specific infrastructure; containers run on any computer, infrastructure & cloud.


VIRTUAL MACHINES vs CONTAINER
27.16*********8READ UP POWER POINT SCRIPT


                               DOCKER

Docker 
======
7 years Experience in IT and DevOps:
How applications were deployed in the past and today:
1.  1990S --- 10 years 
2.  2000S ---   CAN claim 7yrs working xperience
3.  TODAY  

 
====================================
Docker -- Is a containerization software use to create, build ship and deploy applications as containers
    Build applications /ship applications /deploy applications  


                         APPLICATIONS RUN AS CONTAINERS 

In docker applications run as containers   
******33:07 .. e.g we v repos in git hub we wnt to deploy to the dev env using our vm/ec2 instances, on the instance, if i wnt to instal tomcat i v to first install all its
dependencies java then once the tomcat is installed i v my appl running
then to the test env, the same task is been done , lots of repitition and the same in production
bt ders the possiblity that smt is workiing in in one stg bt its nt working in the oda n dev can tell u its working in dev env bt when u tk it to prod its nt working n dis
a serious problem
we mk use of containers to resolve or avoid all dis issues

Containers --> contains everything required for an application to run create or evry tin req for appl to run 
               (App Files (code), Dependencies 
              (Softwares +Libraries), ENV vars & Other Configuration files) 
              which is required for a piece of application/process to run.
          app.war   -----> can be deployed in a  Virtual Machine  n in the vm 
                           java and Tomcat installed and configured  





