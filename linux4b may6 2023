SEARCHING FOR FILES;find, ABSOLUTE AND RELATIVE PATH, THE DATE COMMAND ,TO CHANGE TIMEZONE, User Mgt,  HOW TO CREATE USER;su command , CREATING A USER'S PASSWORD ( BY SUDO PRIViledged 
user),HOW TO GRANT SUDO ACCESS TO A USER IN LINUX  ( when to grant access/why grant access),CREATE THE GROUP FIRST B4 ADDING A USER,  TO MODIFY A USER


Binary files are commands found in the bin/sbin directory  



 QUESTION1:
Ticket078: Search for a binary file called 'pwd' 
   binary files are commands found in the bin/sbin directories

   whereis pwd 
   whereis ls 
Whereis cat
wheris less/more/tail/head/grep/  

the find command is used to search for a file in the server 
find= serach for files and directories



A) searching a file in the user's home Directory:
   find /home/ec2-user -name fileName or find ~ -name fileName 
   find /home/ec2-user -name list  or find ~ -name list  

B) searching a file in the present working Directory:
   find /home/ec2-user/dev -name list   or   find .name list     

c) searching a file in the root Directory:
  find / -name list 
  sudo -u root find / -name list    
OR   sudo find / -name list  
********** the output to this command is the root path to the file 


******** setting the server with the correct time and timezone is imp for task execution and scheduling automation:

 ABSOLUTE AND RELATIVE PATH
The absolute path to a file starts from the root Directory  
The relative path to a file starts from the pwd  


THE DATE COMMAND 
The date command is use to show and to  modify dates/time  

  date  
     [ec2-user@demo dev]$ date
      Sat May  6 13:45:44 UTC 2023

   TO CHANGE TIMEZONE
  timedatectl list-timezones
  sudo timedatectl set-timezone "America/New_York" 

[ec2-user@demo dev]$ sudo timedatectl set-timezone "America/New_York"
[ec2-user@demo dev]$
[ec2-user@demo dev]$ date
Sat May  6 09:47:44 EDT 2023

setting the server with the correct time and timezone is important
for task execution and scheduling automation:

Class32 time-table = 
   THU = 7pm EST    
   SAT = 8AM EST  
   Sun = 3pm EST        

  Thu =  7PM PST  


User Mgt:
=======

User/group Management:
=====================
root user = The root user is the administrator or admin user superuser  
            that can run all commands and tasks unrestricted 
            He has unrestricted access into files, etc.    

In Linux the root user is called = root 
root user is created by system when a server is Launch/created. 

Normal Users: Are created by the administrator [root user]    


   HOW TO CREATE USER
adduser = will create a user in a linux server   
useradd = will create a user in a linux server

Ticket078:
  Create user accounts for landmark and datti and verify?  :

[ec2-user@demo dev]$ adduser datti
                     adduser: Permission denied.
    1. User account creation require root access 
       sudo -u root adduser datti
       sudo adduser datti
  NB" sudo rights/priviledges are only assigned to designated users, one of those users with sudo priviledges is ec2user
      so By default the ec2-user has sudo priviledges    

  su command is used to switch from one user to another  
switch to a user :
  su: command is used to switch from one user to another by priviledge users
  sudo su - userName  : to assume root user by users with sudo priviledges
  su - root    or : TO switch to root user  (password requested) and switch form one user to another 
  su - or sudo -i  : to switch root users without request of password 


  CREATING A USER'S PASSWORD ( BY SUDO PRIViledged user)

[ec2-user@demo dev]$ su datti
Password:
ONLY the root user can switch to another without a password request  

[ec2-user@demo dev]$ sudo su - datti

Ticket079:
  assign a password the user 'datti'
  passwd userName  
  passwd datti   

Ticket080:
  Hello datti please create oke user's account   
  adduser oke -- permission denied    
 [datti@demo ~]$ sudo adduser oke -- permission denied    
  datti is not in the sudoers file. ( and so he cant add user, hes just a normal user)
  ec2-user is not in the sudoers file.


HOW TO GRANT SUDO ACCESS TO A USER IN LINUX  ( when to grant access/why grant access)
once added to the sudoers file , you can run command  with -sudo 

therfore, daitti will write to his manger:
hello simon please grant me sudo access to to execute ticket 080
Hello simon, please grant datti sudo access to execute ticket080

*********** When to grant sudo access to a user in Linux

why grant sudo access - 
 1)  sudo access should granted to permit trusted users to perform admin tasks        
2)sudo access dhould be granted if admin task needs to be executed


How to grant sudo access to a user in Linux  : (
1. sudo vi /etc/sudoers    ( then edit the file that opens) or   
   sudo visudo 
2. sudo echo "userName ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/userName

after datti has been added to sudoer file by simon, datti can then :sudo adduser oke (successfully) 

TICKET009:
DATTI grant oke sudoer access
   sudo echo "oke ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/oke


CREATE THE GROUP FIRST B4 ADDING A USER
sudo usermod -aG groupname username
sudo usermod -aG managers oke  = to add oke to the mangers group
(aG) appends a secondary group called amangers to oke bc oke has a pry group called oke 
sudo groupadd group name = create a group     
  cat /etc/group   
  sudo groupadd managers  = create group for mangers
  sudo groupadd directors  = create group for directors
  sudo groupadd developers  = create group for developers
  sudo groupadd testers   = cretae group for testers
  sudo groupadd tesla      = create group for tesla
sudo userdel userName  = delete a user's account   
sudo userdel -r userName  = delete a user's account including the home Directory
sudo passwd username = assigns password to a new user 
sudo usermod  = modifies user accounts 



a)sudo adduser userName  = create a new user
 How to verify if a user account is running/active.
   cat /etc/passwd  
   grep userName /etc/passwd  
   id userName =
[ec2-user@demo~]$ id paul
user id  uid = 1004 (oke) gid = 1004 (oke) groups= 1004 (oke)
sudo passwd userName   = assigns password to a new user
b)
How to verify if a user has an active password.
   sudo cat /etc/shadow  
   sudo grep userName /etc/shadow  
   id userName
sudo tail -5 /etc/shadow

[oke@demo ~]$ sudo grep oke /etc/shadow
output: oke:!!:19483:0:99999:7:::       **** the password is encrypted bc we didnt create passwd for him 

      but datti has 
[oke@demo ~]$ sudo grep datti /etc/shadow
output:  datti:$6$tUY/AKwYnjZr.Mb7$6jTh5mLGIINyQT5bLx50qDY/8KOqgRdeXpCAV..0vRRqVcFQrFLmJgK2.vKP12FGaLi9WTFOhdEW1bEWI7iWW0:19483:0:99999:7:::
password key:   $6$tUY/AKwYnjZr.Mb7$6jTh5mLGIINyQT5bLx50qDY/8KOqgRdeXpCAV..0vRRqVcFQrFLmJgK2.vKP12FGaLi9WTFOhdEW1bEWI7iWW0:19483:0:99999:7:::

    ********* if datti forgets his password we can delete the password key 


                          TO MODIFY A USER
sudo usermod  = modifies user accounts 

 [ec2-user@demo~]$ sudo usermod - aG telsa oke  
[ec2-user@demo~]$ id oke                          pry grp        sec grp
user id  uid = 1001 (oke) gid = 1001(oke) groups= 1004 (oke), 1008 (Tesla)
  

TO REMOVE ADMIN/SUDO PRIVILEDGES
grant and remove admin/sudo prilvileges:
1) Sudo vi/etc/sudoers : go into the file and remove the user that is need to be removed

2) when a staff is fired from the coy, locking his acount is the first thing to do 

  lock user accounts = sudo/root access  is required to lock and unlock accounts:
    passwd -l userName
sudo passwd- l username = lock
sudo passwd - u username = unlock








