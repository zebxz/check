** based on our linux file structure, the "opt directory is recommended for installing packages 



CLIENT ENVIRONMENT PAYPAL
                                                                           
                                                                           test & build
                                                                              maven
                                                                             clone code
                                                                                git clone


 
    REmeo developer       >>>>>>              SCM/Github
                                                paypal                        >>>>>> test & build                 >>>>>>>>>> paypal application server
                                               source code                            maven
      Jane developer      >>>>>>>>>          repeated by SRC                          clone code
                                            unit test cases
                                              buildscript

for our test and build we are using maven
so our build server is aven which will clone codes and for it to run code the git clone has to be installed as well  


developers are writing uunit test cases, build script, raw/sourec code , the codes cant run directly in the client server so it has to go through build phase/sever
therefore we will do the test&build 
in the building process the build platform is going to connect this raw code INTO PACKAGES that the app servers in the client environment can understand
the test and build process ensures that the app servers can make business logic out of the raw codes developed by developers
so the raw code goes through the test and build process before it is developed to the client environment 

so we are talkining abt build and how we can do a build for application code & principlally we will be using amven as a build tool




12:26
                                        MAVEN BUILD TOOL
Maven is a software mgt and comprehension tool .
it is based on the concept of a project object model (POM), maven can mg8 a projects build, repository and documentation.
its most powerful feature, is its ability to download the project dependency libraries automatically from maven central repo, maven remote repo or local repo


                     WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
Applications are the output from softwares development



Devops process
developers write code >>>> testing>>>  build>>>> deplyed >>>> monitored


Build tools are used to create deployable packages eg tomcat 
these are packages that the application server/sofwares can understand 


 WHAT DOES BUILD TOOLS ACHIEVED???
used TO Create deployable packages
ie raw code + build= results in packages that the deployment servers can interprete. build simply implies creating deployable packages

programmes are deployed using programming languages including java, python, nodejs, NET, javascript etc

each of these programming language has a diff categories of build tool

12:19

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java and a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language


WHAT are the diffERENT BUILD TOOLS FOR ECSH OF THE LANGUAGE
for java projects the build tools
you can build using >>> MAVEN /ANT/CRADDLE

Net: THESE are the tools that will be used to convey the raw code written in .Net to deployable packages
NANt/MSBuild

JAVA SCRIPT:
Gulp/Grunt  

python:
Py Builder

Ruby:
Rake

NodeJs:
npm


maven is an open source java based build tool
we can use maven to mg8 our project, build, reportingand documentation



20:00
WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 


eg 
we are writing a source code called app.py or app.sh
code: app.sh = echo "welcome to TD BANK"         ...... one line of code
app.py = print "welcome to TD bank" 

25:25
single or double code (" /' ) will work

unit-test-cases :
we are calling this unit test case = app.test
this is (sh)       if [ -e Welcome /home/obi/app.py ] then     **** ie if welcome exit in this file then echo 'test passed'
                   echo 'Test passed'
 but for (py)      print('Test passed')
                   else 
     (py)          print('Test failed')
                   fi


  For us to automate testing .......

TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS 
TO integrate selenium in their environment such that these unit test cases cne be easily written and run

we have tools that we can use to automate the processs of writing unit test cases and running them
 **** selenium should be integrated in the development environment why?? 
  for automation

the process of writing and running unit-tests-cases is called : Unit testing
for example:  we have a PayPal30 project:
so developers have written source codes amounting to 50k lines of codes
 source Code     = 50k lines  
 unit-test-Cases = 20k lines  

* its not as simple as it looks here but trying to get the picture so developers are writing the code and unit test cases
you will come to realise that the process of writing unit test cases and running the test will be automated



   DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING
Unit testing is Testing individual units/components or each line of the code by 

EG
so for a 50k lines of source code = 50k lines of unit testing 




    MAVEN BUILD TOOLS:
to download:   https://maven.apache.org/download.cgi


MAVEN = is an open source Java BASED Build  tool
        It was originally developed in java for java codes 
        The vendor of maven is apache  
Any software can be available in three options:
Licence edition: The software has to be paid for

Free edition: 
  Software is given for free BUT without source code - 
  How the software was developed is not shared.

Open source edition: 
   Implies both the software and 
   the source code are freely available.      
   You can download the source code and 
   develop on the existing features

 
                                                               INTERVIEW QUESTIONS
IQ: Explain you experience in open source technologies?
      1. Maven 
      2. Linux OS  

                                      BUILD MEANS 

Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes.
     for this to happen, it goes through a compiling process
codes can be written in these languages: java , py
     eg
       Hello.java  -->  these are raw java codes
       hello.py    -->   raw py code


for these codes to be converted to deployable packages there are few things that are very importnat to take note of 
this is goin through compilation so we need a compiler to compile codes

We need a compiler to compile java codes:
  java software is required for compiling java codes.
  hello.java -- print("Hello Engineers")   can be understood in human language bc its written in human readable format but it cant be understood by machines ( we are 
running the codes on some computer system) the jvf - java virtual machine cant interprete the humna readbale format

**** therfore , it is important ot note that with maven,   java software is required for compiling java codes.
 once java is installed, java is the compiller , we do Javac   ( javac is the command)

the file is called hello.java
when you execute the file javac hello.java  ---> hello.class      ****** it generates hello.class  , this is a java class file


                                      WHAT IS THE DIFFERENCE BTW THE 2 FILES (hello.java & hello.class)
  hello.java ---> Human readable file  
  hello.class --> machine[JVM] readable file  [binary file = 012310123345] 

****** but for this compilation to take place, we need a compiler  - java software 


45:36
if you work in a coy that doenst use aws, maybe they use GCP that means you have to create a GCP account

once you compile a java code like javac hello.java, the result will be - hello.class

JVM only read binary files 
jvm = Java Virtual Machine 


                                                      MAVEN INSTALLATION
Maven installation:
https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)
    Linux --: 
      RedHat / Ubuntu / CentOS
    Windows:
      server2012/2016/2019 
      Windows XP/7/8/10/11
    MacOS :
    Solaris:   


44:09

Ticket_maven-001 
Install Maven on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

43:30
we already hv some notes in our githubwhich we can use for maven installation , package management, maven installation

****** there are other sources where we can create our server from but we are creating it from AWS, where we are getting our redhat server from

openJDK1.8+,  // openJDK4.1   
==============
https://maven.apache.org/download.cgi
https://github.com/LandmakTechnology/package-management
https://github.com/LandmakTechnology/package-management/blob/master/Maven-installation/READme.md
connect to the server and setup maven:
  publicIP = 54.204.78.6
  userName = ec2-user 
  ssh-key  = class301key.pem 
  ssh -i class301key.pem ec2-user@54.204.78.6  


  
STEP 1          

PREREQUISITE   = AWS Account

we created a redhat server in Aws and on the redhat walls, we wnat to install maven sofware and once it is installed we can call the server our maven server

connect to the server and setup maven:
  publicIP = 54.204.78.6
  userName = ec2-user 
  ssh-key  = class301key.pem 
  ssh -i class301key.pem ec2-user@54.204.78.6  

****** you have to be in the in the dir where your downloaded key is and cd into the dir 

change hostname to maven = sudo hostnamectl set.hostname maven
changing my shell = sudo su -exc-user


** based on our linux file structure, the "opt directory is recommended for installing packages 
            cd/opt

for our test and build, we are using maven which clone our codes and for maven to run codes the git clone has to be installed as well 

sudo yum insatll wget nano tree unzip git-all-y 
sudo yum install java -11-open jdk-level java-1.8.0-open jdk-devel-7

*** for maven to run, java must be installed (java prerequisite for maven to run)
java is the compiler 



*****
FOR step2, we can easily run yum install maven to install maven easily but ther are some additionale setup which we had to change some files in the setting.xml ,
we change our maven local repo , we configured a customized maven local repo but when you install using package manager yum install, it limits what can be customised but we 
wanted to customise our server thats why we downloaded and extracted




STEP 2
                    DOWNLOAD AND EXTRACT AND INSTALL MAVEN 
 
opt dir needs root access thats why for us to download we need sudo

 to download         :  https://dlcdn.apache.org/maven/maven-3/3.9.0/binaries
 to unzip            :  sudo unzip apache-maven-3.9.0-bin.zip
delete zip download  :  sudo rm -rf apache -maven-3.9.4 - bin.zip
Rename               :  sudo mv apache-maven- 3.9.4/maven             * 1:08, for good naming convention, we have to rename the file 

run LL = drwxr-r-xr-x.6 root root 99 july 26 09 :37 maven







































