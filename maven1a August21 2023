
MAVEN BUILD TOOL, WHAT IS YOUR TASK AS A DEVOPS ENGR ,WHAT DOES BUILD TOOLS ACHIEVED??, WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?, WHAT are the diffERENT
BUILD TOOLS FOR EACH OF THE PROGRAMMING LANGUAGE, WHAT IS EXPECTED FORM DEVELOPERS, TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS, TO AUTOMATE TESTING WE ARE GOIN TO ADVICE 
DEVELOPERS, DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING, MAVEN BUILD TOOLS,  INTERVIEW QUESTIONS, WHAT IS THE DIFFERENCE BTW THE 2 FILES ,MAVEN INSTALLATION,
PREREQUISITE, BUILD APPS, MHD, THERE ARE 3 CATEGORIES OF APPLICTAION , BUILDING, WHERE DEPENDENCIES ARE FOUND, TYPES OF DEPENDENCIES, MAVEN LIFE CYCLE, ON OUR PROJECT, 
QUESTION, SECURING THE MAVEN LOCAL REPO, TO RUN OUR APPLICATION, TO SET OUR TIME ZONE, HOW DO WE KNOW THE DEPENDENCIES TO DOWNLOAD , TO SEE FILES IN BIN


** based on our linux file structure, the "opt directory is recommended for installing packages 
******** MAVEN HAS TO HAVE BEEN installed before we can run mvn package


Why is the opt directory for downloading packages
The /opt directory is designated for downloading and installing additional software packages that are not part of the default system installation. This directory is intended for the installation of add-on application software packages, which are usually large and 
self-contained, often provided by third-party vendors. Unlike software installed via the systemâ€™s package manager, which typically places files in /usr, software in /opt is independent of the default system software. This separation helps in maintaining system integrity
and makes it easier to manage and remove third-party applications. For example, if you install a commercial database management system or a specialized graphics editing tool, placing it in /opt keeps it isolated from the core system files. Inside the /opt directory, 
each application typically has its own sub-directory, containing all the necessary files for the application, such as executables, libraries, configuration files, and documentation. 









                         START

CLIENT ENVIRONMENT PAYPAL
                                                                           
                                                                           test & build
                                                                              maven
                                                                             clone code
                                                                                git clone


 
    REmeo developer       >>>>>>              SCM/(Github or GITLAB,GITBUCKET)
                                                paypal                        >>>>>> test & build                 >>>>>>>>>> paypal application server
                                               source code                            maven
      Jane developer      >>>>>>>>>          repeated by SRC                          clone code
                        gitpush/commit        unit test cases
                                              buildscript

for our test and build we are using maven
so our build server is maven which will clone codes and for it to run code the git clone has to be installed as well  


developers are writing unit test cases, build script, raw/source code , the codes cant run directly in the client server so it has to go through a tbuild phase/sever
therefore we will do the test&build 
in the build process the building platform is going to convert this raw code INTO PACKAGES that the app servers in the client environment can understand
the test and build process ensures that the app servers can interprete, can make business logic out of the raw codes developed by developers
so the raw code goes through the test and build process before it is developed to the client environment 

so we are talkiing abt build and how we can do a build from application code & principlally we will be using amven as a build tool




12:26
                                        MAVEN BUILD TOOL
Maven is a software mgt and comprehension tool .
it is based on the concept of a project object model (POM), maven can mg8 a projects build, repository and documentation.
its most powerful feature, is its ability to download the project dependency libraries automatically from maven central repo, maven remote repo or local repo


                     WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
Applications are the output from softwares development



Devops process
developers write code >>>> testing>>>  build>>>> deplyed >>>> monitored


Build tools are used to create deployable packages eg tomcat 
these are packages that the application server/sofwares can understand 


 WHAT DOES BUILD TOOLS ACHIEVED???
used TO Create deployable packages
ie raw code + build= results in packages that the deployment servers can interprete. build simply implies creating deployable packages

programmes are deployed using programming languages including java, python, nodejs, NET, javascript etc

each of these programming language has a diff categories of build tool

12:19

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java programming language, however; we also support a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language




IF YOU SUPPORT A JAVA PROJECT, You can build using;
for java projects the build tools
you can build using >>> MAVEN /ANT/CRADDLE

WHAT ARE THE BUILD TOOLS FOR .NET PROJECTS 
Net: THESE are the tools that will be used to convey the raw code written in .Net to deployable packages
NANt/MSBuild

JAVA SCRIPT:
Gulp/Grunt  

python:
Py Builder

Ruby:
Rake

NodeJs:
npm....  node package manager

For java:
MAVEN /ANT/CRADDLE

These are diff programming lanuguages and there are many others


Maven is a software project management and comprehensive tool OR 
maven is an open source java based build tool
we can use maven to mg8 our project, build, reportingand documentation



20:00
WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 


eg 
we are writing a source code called app.py or app.sh
code: app.sh = echo "welcome to TD BANK"         ...... one line of code
app.py = print "welcome to TD bank" 

25:25
single or double code (" /' ) will work

unit-test-cases :
we are calling this unit test case = app.test
this is (sh)       if [ -e Welcome /home/obi/app.py ] then     **** ie if welcome exit in this file then echo 'test passed'
                   echo 'Test passed'
 but for (py)      print('Test passed')
                   else 
     (py)          print('Test failed')
                   fi


  For us to automate testing .......

                        TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS 
TO integrate selenium in their environment such that these unit test cases can be easily written and run

we have tools that we can use to automate the processs of writing unit test cases and running them
 **** selenium should be integrated in the development environment why?? 
  for automation


UNIT TESTING
the process of writing and running unit-tests-cases is called : Unit testing
for example:  we have a PayPal30 project:
so developers have written source codes amounting to 50k lines of codes
 source Code     = 50k lines  
 unit-test-Cases = 20k lines  

* its not as simple as it looks here but trying to get the picture so developers are writing the code and unit test cases
you will come to realise that the process of writing unit test cases and running the test will be automated



   DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING
Unit testing is Testing individual units/components or each line of the code by 

EG
so for a 50k lines of source code = 50k lines of unit testing 




    MAVEN BUILD TOOLS:
to download:   https://maven.apache.org/download.cgi

  Maven can be installed in Any platform:    (OPerating system = cross platform)

MAVEN = is an open source Java BASED Build  tool
        It was originally developed in java for java codes 
        The vendor of maven is apache  
Any software can be available in three options:
Licence edition: The software has to be paid for

Free edition: 
  Software is given for free BUT without source code - 
  How the software was developed is not shared.

Open source edition: 
   Implies both the software and 
   the source code are freely available.      
   You can download the source code and 
   develop on the existing features


 
                                                               INTERVIEW QUESTIONS
IQ: Explain you experience in open source technologies?
      1. Maven 
      2. Linux OS  

                                      BUILD MEANS 

Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes.
     for this to happen, it goes through a compiling process
codes can be written in these languages: java , py
     eg
       Hello.java  -->  these are raw java codes
       hello.py    -->   raw py code


for these codes to be converted to deployable packages there are few things that are very importnat to take note of 
this is goin through compilation so we need a compiler to compile codes

We need a compiler to compile java codes:
  java software is required for compiling java codes.
  hello.java -- print("Hello Engineers")   can be understood in human language bc its written in human readable format but it cant be understood by machines ( we are 
running the codes on some computer system) the jvf - java virtual machine cant interprete the humna readbale format

**** therfore , it is important to note that with maven,   java software is required for compiling java codes.
 once java is installed, java is the compiller , we do Javac   ( javac is the command)

eg
the file is called hello.java
when you execute the file; javac hello.java  ---> hello.class      ****** it generates hello.class  , this is a java class file


                                      WHAT IS THE DIFFERENCE BTW THE 2 FILES (hello.java & hello.class)
  hello.java ---> Human readable file  
  hello.class --> machine[JVM] readable file  [binary file = 012310123345] 

****** but for this compilation to take place, we need a compiler  - java software 


once you compile a java code like javac hello.java, the result will be - hello.class

JVM only read binary files 
jvm = Java Virtual Machine 


                                                      MAVEN INSTALLATION
Maven installation:
https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)
    Linux --: 
      RedHat / Ubuntu / CentOS
    Windows:
      server2012/2016/2019 
      Windows XP/7/8/10/11
    MacOS :
    Solaris:   


44:09

Ticket_maven-001 
Install Maven on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

43:30
we already hv some notes in our github which we can use for maven installation , package management, maven installation

openJDK1.8+,  // openJDK4.1   
==============
https://maven.apache.org/download.cgi
https://github.com/LandmakTechnology/package-management
https://github.com/LandmakTechnology/package-management/blob/master/Maven-installation/READme.md


45:36
if you work in a coy that doenst use aws, maybe they use GCP that means you have to create a GCP account
Based on the prerequisite, we need a Redhat server
****** there are other sources where we can create our server from but we are creating it from AWS, where we are getting our redhat server from


  ****53.04
STEP 1          

PREREQUISITE   = AWS Account
Then createa redhat account

we created a redhat server in Aws and on the redhat walls, we want to install maven sofware and once it is installed we can call the server our maven server
*** ITS NOT A MAVEN SERVER YET UNTIL THE MAVEN SOFTWARE IS INSTALLED in it....



STEP 2
connect to the server ie(ssh into mobaxterm using the details below) and then setup/INSTALL maven:
  publicIP = 54.204.78.6
  userName = ec2-user 
  ssh-key  = class301key.pem 
  ssh -i class301key.pem ec2-user@54.204.78.6  

(****** you have to be in the in the dir where your downloaded key is and cd into the dir )

***Install Java JDK 11+ and other softares (GIT, wget and tree)
# install Java JDK 11+ as a pre-requisit for maven to run.
** based on our linux file structure, the "opt directory is recommended for installing packages 
            cd/opt

for our test and build, we are using maven which clone our codes and for maven to run codes the git clone has to be installed as well 
***1.01.00
why do w need git
we are trying to create our maven server bc we are using maven for test and build 
so when developers push the codce, we need maven ie our build server to clone the code 
therfore the git plugging has to be installed for us to be able to run git commands 
so we are installing all of the prerequisite software java
java must be installed for maven to run
java is the compiler 


***** Next: 
sudo hostnamectl set-hostname maven     ****** change hostname to maven
sudo su - ec2-user                      ******  changing my shell
cd /opt
sudo yum install wget nano tree unzip git-all  -y
sudo  yum install java-21-openjdk-devel  -y
java -version
git --version

 
(sudo yum insatll wget nano tree unzip git-all-y)
(sudo yum install java -11-open jdk-level java-1.8.0-open jdk-devel-7)

*** for maven to run, java must be installed (java prerequisite for maven to run)
java is the compiler 


***** we can easily run yum install maven to install maven easily but ther are some additionale setup which we had to change some files in the setting.xml ,
we change our maven local repo , we configured a customized maven local repo but when you install using package manager yum install, it limits what can be customised but we 
wanted to customise our server thats why we downloaded and extracted



1:08
STEP 3; https://maven.apache.org/download.cgi
                    DOWNLOAD AND EXTRACT AND INSTALL MAVEN 
 
opt dir needs root access thats why for us to download we need sudo

 to download            :  https://dlcdn.apache.org/maven/maven-3/3.9.0/binaries
 to unzip               :  sudo unzip apache-maven-3.9.0-bin.zip
delete downloaded file  :  sudo rm -rf apache -maven-3.9.4 - bin.zip
Rename                  :  sudo mv apache-maven- 3.9.4/maven             * 1:08, for good naming convention, we have to rename the file 

we see maven   : run LL = drwxr-r-xr-x.6 root root 99 july 26 09 :37 maven





    What is MHD ==  
The maven home directory is wher the maven software is extracted == /opt/maven 
and we can ls to see the content of the MHD



  Maven home directory:  /opt/maven
the directory is represented by = M2 _HOME
MHD = /opt/maven [ M2_HOME ]:

1:12:40
MHD = /opt/maven 
The MHD is where the maven software is extracted.  *** meee** ie where we downloaded & unzipped the maven file

*** some companies, the home directory can be /app/maven
so if thats where the software was extracted then thats the home directory fo rmaven 
   
***** wherever you extract your maven software is your MHD 
in OUR CASE = /opt/maven               ***** ie opt is the home  for maven dir 

(in my own understanding) ie bc we had to cd into opt directory to download and install and the download name was changed to maven 


now we ls to see the content /composition of our maven home dir 

 [ec2-user@maven maven]$ ls
mavenHomeDir = M2_HOME = /opt/maven :
  bin --- binary files and the most impoetant file is mvn        *** 23,maven 1b, (the paths to where the dir are found in )
            
  conf  --configuration files and the most imp fie is settings.xml 
          
  lib -- jar files and libraries 
  boot  


STEP4 :

SEt environmental variable for specific user eg ec2-user
vi ~/.bash_profile    and add lines below
export M2_HOME=/opt/maven
export PATH=$PATH:$M2_HOME/bin



STEP5: 
    Refresh the profile and verify if maven is running
     source ~/.bash_profile
  if maven has been installed: mvn - version



                                           BUILD APPS 


Ticket_0014_build_apps :
========================
We use maven to build and manage applications for java codes  in our environment :



Generally We have THERE ARE 3 CATEGORIES OF APPLICTAION :
  stanalone applications -            ***** when a stanalone appl is created, it creates jar packages -jar [app.jar, hello.jar]
  web applications    -     war [app.war] 
  enterprise applications - ear 

hello.java:
After using maven to build the following options are possible
   hello.java --> hello.jar  [stanalone applications] 
   hello.java --> hello.war  [web applications]
   hello.java --> hello.ear  [enterprise applications]

maven: creates packages (jar, war and/OR ear)
  jar: Standalone Applications
    ebay.jar
    paypal.jar
    tesla.jar 
    *.jar  

  war: web Applications
    boa.war
    tesla.war

  ear: Enterprise Applications
    aa.ear 
    tesla.ear
    td.ear 

Archieves:
  tar files = tesla.gz.tar   
zip files = tesla.zip 
  tesla.jar  
  tesla.war  
  tesla.ear 


                                                      DIFF BETWEEN STANDALONE /WEB/ENTERPRISE


Standalone Applications â€“ *.jar  Java Archieve
=============================================  
 java code ONLY   
    contains only java classes
    jar = .classfiles
    maven-standalone-application.jar
    app.jar 

Web Applications  â€“ .war  web Archieve
======================================
Java code +                                               ********* Single module, ie java code + web content
web content ( CSS, HTML, JS, videos, imagesâ€¦,) 
Backend code   - frontend code
maven-web-app.war
tesla.war

Enterprise applications â€“ .ear â€“
==================================
 Enterprise Archieve
    Multiple Modules
      Java code + web content 
    Ear =  war(s) + jar(s)
    Banking applications
    maven-web-application.war
    maven-enterprise-application.ear


eg
you are build a banking app and you decide to have a seperate module
for :   each of this module is expected to contain java code + web content
Modules:
for     login / 
for     accountCreation / 
 for    moneyTransfer 

Based on our project we are going to create 
   multiple packages either;  jar, war or ear packages:



                                                            BUILDING
1:36

for Build to take place we are going to be using the pom.xml
thats why they say maven uses the project model, the file is called pom.xml

(developers should have written the source code , unit test cases and buildscript for our packages to be created (4 ds to create our packages eg mvn packages


What are we building? 
 we are creating deployable packages from java codes:
  1.  src-- source code   :
  2.  Unit-Test-Cases     : 

the unit test cases will depemd on the language ie if they are supporting a java project  they will write a 
         JAVA  --> JUnit test cases 
       if its is .Net >>>> they will write Nunit test cases ,   .Net  --> NUnit test cases 
          C++  --> CPPUnit test cases   

********* developers need to bring something serious to the table which is called Buid script

3. BuildScripts  -- pom.xml     :    (project object model)
        xml  = extensible mark-up language 
               It is a dynamic language. - why

why because :
               Tags can be created based on the user preferences , ie the user can decide to create whatever tag they want using xml 

the direct comparison which we can use is html
html = hypertext mark-up language
     it comes with pre -defined tags that cant be changed
TAGS like: h1, h2, h3, p (paragraph) , h (heading)

eg using xml : the wat the tag starts its how its going to end 
             Paul: <welcome>Welcome to Landmark</welcome>
             Mary: <tesla>Welcome to Tesla</tesla>
             Obi : <greet>Welcome to Landmark</greet>

        html = you must enter information based on predefined tags   (ie tags that already exists
               eg
                   <h1>Welcome to Landmark</h1>

   pom.xml = This is the BuildScript for maven  
             developers should define name, plugins, tags, versions,  ( your artifacts needs to be assigned versions)
             project dependencies and more in the BuildScript(pom.xml)



   ********** maven uses project ,the project object model 


1:38:39 maven also have to be installed properly for mvn command to run


Standalone Applications
Ticket_saa_tesla0014  
===================
Requirements:
1. project repository in the SCM [GitHub / GitLab]
   https://github.com/Landmark-Technologies/maven-standalone-application       ********** our repo from our source code mgt is in github
2. We need a server with java & maven installed and configured   
3. Create a project directory in the maven/build server
    mkdir java-projects  
4. Clone the codes from github in the project directory  
   git clone https://github.com/Landmark-Technologies/maven-standalone-application         ********  this means that developers have written code and committed to github
     src/main  
     src/test


1:41:00
1) mkdir java-projects , then ll
2) cd java-projects/ (my project repository ) inside this repo developers are working on this project
now we need to clone the codes frm scm in github with the git clone command 
3)ls 
4) rename the file = mv maven-stanalone-application/msa
run the tree command = tree msa/, now we see our project 
file (pom.xml) we can see the 12 dir and 3 files , we have the pom.xml, the code ('helloword.java), the test case (hello world test.java)
developers are working on this application , they hv written the code , test cases and the project pile (pom.xml)

vi pom.xml >>> in pom.xml it has defined the project properties, dependencies (Junit testing has to be performed


5) cd msa/ 

6) ls and we see pom.xml & src

7)ls src/ & we can see main & test case file 


in maven we are running the mvn package command bc in maven we are building package, when we run the command it create the packages in the target directory , so we can find
the packages in the target directory 

maven has a goal called the clean rule 
== mvn clean: delete everything in the target directory
rm -rf is also an option but mvn clean is better


cd msa/
head pom.xml : this project file will include stuffs like project dependencies and Artifacts (it will be creating some artifacts)
for this project to be executed a few things are needed,
scm is in github , everything has been defined



Maven uses dependencies and plugins to test and create packages. 
Examples of maven dependencies 
   Selenium 
   JUNit 
   log4j
build.gradle   --- BuildScript for gradle
pom.xml        --- BuildScript for maven
pom = project object model      
dependencies:  are also written in pom language and all dependencies are found in the dependency tag 
repositories  
plugins:    
properties: 
version:

<dependencies>                             **** developers are doing this stuff for us for the dependency tag
      <dependency>Selenium</dependency>      *** selenium, or log4, or Junit will be used to test automation
      <dependency>log4j</dependency>
      <dependency>JUNit</dependency>
</dependencies>


DEvelopers will identify the dependencies, plugging and properties version

Repositories:
pluggins: to run the testing ( maven  1b 56:30)
properties:
versions:

maven 1b 40:45
******* dependencies are just what the project depends on eg the project needs to perform unit testing so all what is needed for the unit testing will be defined in the 
dependency 


                                               WHERE DEPENCIES ARE FOUND 

==================
where are these dependencies found/located??? :
dependencies and/or are located in maven repositories
  https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/4.6.0
    
          we can have diff repository
                                                                                                                                                       for the project
<repositories>             **** dependencies and pluggins are found in any of these repo, maven will search for the project dependencies in any of these repo & use the repo
   mavenLocalRepo         (maven server)    ****** .m2/repository = default                             
   mavenRemoteRepo         (nexus server)
   mavenProxyRepo           (nexus server apache maven )
   mavenCentralRepo         the internet    ****** https://mvnrepository.com/repos/central
</repositories>


maven 1b 39:30
when maven is trying to create packages it will use these pluggin


                                   
MAVEN 1B 40:50                                           TYPES OF DEPENDENCIES

selenium:
  <dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>               these are my project dependencies
    <version>4.6.0</version>
  </dependency>
log4j: 
  <dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
  </dependency>

we go to the internet to get these dependency on maven central repository



this extract is from our file pom.xml
pom.xml
the group id              : <groupid> com.Mt </groupid>
the name of the artifact   : <version> 0.01-SNAPSHOT </version>
<packaging> jar <packaging>

<name> maven-stanalone-application </home>
<url>http://mylandmarktech.com </url>

1:46    if you create this artifact based on what developers have created versioning 
== maven -stanalone-application-0.0.1-SNAPSHOT.jar               ****** the packaging says its a jar pakackage 


IQ : Explain the maven lifecycle  ??
Maven has 3 lifecycles: 
  Clean, 
  site/swagger and 
  default
  Clean, site and default

Lifecycles      Goal(s)
----------      -----   
1)  Clean            clean  (mvn clean)
  mvn clean         delete old builds 

2) Site/Swagger       site
                    create java classes (byte code)
                    JVM 
                    app.java = 'echo DevOps is great'        **** side goal
                    app.class = 012450012354


for eg if you have app.java once the side goal is executed it will create binary codes ie app.class that can be understood by JVM

   ******** MAVEN HAS TO HAVE BEEN installed before we can run mvn package


                  Goals:
3) default        mvn validate:
                  It will validate the project structure and resource files
               mvn compile:
                  It will compile all java classes and test classes
                  these are byte code that will be used to create packages     ***** byte code that is used to run the test cases
               mvn test:
                  It will run the unit test cases (JUNit)
               mvn package:
                  It will create packages in target directory 
                      (*.jar/*.war/*ear) app.war
               mvn install:
                  It will store the build artifacts in MAVEN LOCAL REPO
                     default location: .m2/repository
               
               mvn deploy:  NEXUS
                  It will upload the build artifacts into maven-remote-repo
                   by default it will be in nexus in our environment




               ON OUR PROJECT

1) mvn package - to create package
  we ls  - a new dir target has been created 
 ls target/ - in target , maven - standalone -app has been created
 mvn clean - to clean the build (the whole artifacts)
again we run : mvn package  >log
vi log - to check that the build, testing was successful
ls -a /home/ec2-user/ .m2/  to see hiddden repository               ******* or tail log  (58:00 maven 1b)
ls  /home/ec2-user/ .m2/repository
rm -rf /home/ec2-user/.m2/                       **** to delete our repository (.m2)
ls -a  to see .m2



***** maven uses plugging/dependencies in the build process
WHICH ARE FOUND in maven local repo=.m2/repository
ls -a/home/ec2-user can be represented as ls -a
/home/ec2-user = the home dir of ec2-user 
ec2-user owns the m.2/repository



principally by default, 
maven wil search for the the pluggins and dependencies in maven local repo 
1)maven local repository :.m2/repository = default, if its not here   , it will search in no.2                      ****** no.1 fastest and most secured ;
2) maven remote /proxy repository , if it is configures, if its not here, it will search in no.3
3) maven central repository (the internet)              ****** not a secured option , which takes more time in building 
     https://mvnrepository.com/repos/central


***** WHEN a package is being created (mvn package), maven will search for the pluggings in the local repo, if its not there it search in remote repo, if its not there it 
downloads the pluggins from maven central (internet) which takes more time for the buid process compared to if it had sourced the pluggins from the maven local repo

once the package is successfully created, our .m2/repository which is our maven local repo is created automatically and in the repo we can locate our dependencies

**** therfore, maven has downloaded our dependencies from maven central and has stored them in .m2/repository (our local repo) and then use the dependencies to do a build
or building for the first time
this is for situation where the mvn package is being run for the first time or situation where the maven local repo (.m2) doesnt exists.

subsequently, when mvn package is run, it doesnt need to download pluggins and dependencies from the central repo because we now have the .m2 and this will make the package
build process time lesser compared to when it had to download pluggins from the central 


** even when target is deleted, the .m2 (where we have our stored dependencies/pluggins ) remains because its owned by ec2-user and available in our server


****** our build time increases if our maven local is deleted in error


   2:38:38 
                                                      QUSETION

is it possible to create the maven repo without vi/ing into the file,   ???
    without vi into the /opt/maven/conf/setting.xml   ??

                                                                       (THIS IS JUST ME on why we cd into msa)
                                                                     1:43:33 
                 cd java-projects  ,  now i run tree msa, n we see we hv 12dir &3files, this is the project we are working on,we see d code,include d pom.xml d project file
                                        ( msa is maven stanalone appl)         cd msa/  & when we ls we see (src and pom.xml), now no package hv been created
                                            to create a package we run mvn package, packages created build successful and a new dir target has been created

                                                 2:20:14   ( now this is the file we are modifying;  opt/maven/conf/setting.xml ) , seacrhing for maven local repo        

ANS:
ITS possible to create the maven repo without vi/ing into the file but again you need to vi

but how could we create the maven repo without vi/ing??
                                                                                                          
 now this is the file we are modifying;  opt/maven/conf/setting.xml                                        
we could do something like this, like we can also

we can aslo : sudo echo "<localRepository>/home/ec2-user/.mlr</localRepository>">> /opt/maven/conf/setting
so we want to echo this information, we are redirecting to this file .. /opt
so i want to append this line into this file 
                    **********  you hv to do sudo before you can echo bc not every user can write in this file , the file is owned by the root user
 if you run it the first time it will work but if you try to change it again it will be a problem 
so vi/ng into the file is the best




                       SECURING THE MAVEN LOCAL REPO

Securing the maven local repo:
  1. By creating a custom maven local repo  
       .m2/repository/                              ***** our default repo ( if maven local repo is deleted, it is a serious problem that will cause us time and security
     settings.xml  
to create a new maven repo in the home of ec2-user
        /home/ec2-user/.mlr  
   sudo vi /opt/maven/conf/settings.xml               *** because 
  ls -l /opt/maven/conf/    shows us that settings.xml is owned by root user , the file is rw-r-r, no executory access for any other user but root


******** once we sudo vi vi /opt/maven/conf/settings.xml  
if we write a comment in the commented line, it willl not run

line 49: our local repsitory                              maven1b 1:24:50  <!--- to comment a line & the line / --> 
  
we add: <localRepository>/home/ec2-user/.mlr</localRepository> in the file below (outside the comment )ie  <--!    -->

now maven will search from somewhere else when its building bc we hv changed the tag  .m2/repository  to .mylr and the build process will take more time (( we hv configured 
maven to search elsewhere because our maven local repo is no longer .m2/repository, we now hv a custom)


2:27

so when we run = rm -rf target
then runnmvn package
maven will download our dependency from maven central and store them in our custom repo = mylr
therfore our build will be searching for dependencies from .mylr
ls -a ~
ls -a /home/ec2-user/ , we can see .mylr


***** maven is our build tool, we use maven to do a build and in doing so, some goals are being executed and we use the default life cycle goal (mvn package) but for 
packages to be created maven will be searching for dependencies to do a build
ie maven will download/need dependencies to do a build 


                   SCM/Github                                    test build                                     paypal
                    paypal                                          maven                                      application
                     source code                        >>>>>>     clone code               >>>>>>>>>            server1
developers   >>>>>     src                                           git clone
                      unit test cases                                mvn package
                      build script                                         !
                                                                           !
                                                                           !
                                                                           ! 
                                                                       dependencies
                                                                        maven local repo       >>>>>>> using this is fast and time is of the essence
                                                                        maven remote repo
                                                                        maven proxy repo
                                                                         maven central repo




maven need dependencies/dependencies are required
pluggins can be gotten from one of the dependencies 


                                                       TO RUN OUR APPLICATION

     to run our application/ access our project

java -jar target/maven-stanalone-application-0.0.1-SNAPSHOT.jar 



                                                  TO SET OUR TIME

2:35                      our time is not correct lets set it 

             to set our time zone
timedatectl list-timezones
sudo  timedatectl list-timezones         **** to get the diff time zones  ( the time zone u want to change to must be listed on the time zone list for it to be changed)
 to set a time zone :  sudo  timedatectl set-timezone America/New_York



                                 HOW DO WE KNOW THE DEPENDENCIES TO DOWNLOAD 

our project ahs a project file called pom.xml and when thers a project, thers a meeting where DEVOPS and developers will agree/decide that for this project there are the 
dependencies  we are going to need, so it makes it a smooth process in terms of how we are going to define our dependencies in pom.xml

eg
if ther are 100 dependencies, they can decide thay are goin to use 10 and define the 10 in pom.xml, therfore the project will be deploying with just the 10 that have been 
choosen to ensure the right dependencies are deployed to production


***** maven 1b , 1:40:00

mvn command will not run if maven is not installed correctly and ensuring our maven home is defined  accordingly 

mvn is a binary file that we use to run packages and it can be found in bin 


                              TO SEE FILES IN BIN

files in bin = ls /opt/maven/bin/



-
