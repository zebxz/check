deployment as an object; deployment strategy: ReCreate strategy & RollingUpdate.  Deployment techniques; blue green & carnary deployment strategy 


  DEPLOYMENT AS AN OBJECT, ADVANTAGES, DEPLOYING USING RECREATE STRATEGY, DISADVANTAGES, WE CAN EXPOSE BY CREATING THE SERVICE, 
DEPLOYING USING ROLLING UPDATE/ROLLING UPDATE STRATEGY HAS NO DOWNTIME, UPDATE DEPLOYMENT WITH SET IMAGE OR EDIT MANIFEST FILE, DEPLOYMENT TECHNIQUES


                                       DEPLOYMENT AS AN OBJECT

Deployments  
==========
Deployment is a kubernetes object. 
k8 objects are used to run workloads in k8
Deployment is the recommended kubernetes object for deploying applications,  
running workloads and managing/contolling pods in our environment.   


                                                 ADVANTAGES
Advantages:
     Deploy/rollout a RS.
     Updates pods (PodTemplateSpec).
     Rollback to older Deployment versions.
     Scale Deployment up or down.
     Pause and resume the Deployment.
     Use the status of the Deployment to determine state of replicas.
     Clean up older RS that you donâ€™t need anymore.
---
e.g we create a deployment called webapp and say that replica is 2
with deployment as an object :2 rplicas of the appl wil b deployed &2pods for d webapp  &when an update is done ie verson2, the update is deployed wit a new
set of 2replicas and new pods but the previous replicas will be zero (0) bc the pods wil be 0 bt the replicas stil exists and the webapp for each version 
still exists, this is the same process for each version that is rolled out and so we can easily delelete or roll back to a previous set bc their replica sets
were recorded
---

************************************************************ CLASS 33 vide 5&6.... 52:30 .... i will watch the video later...........
************* for each of the version it goes tru this steps: we create the packages, then run docker build to contianersrize the appl and ship the image with
docker push to the image registry 
#########can i use vscode to create my deployment ?????  ..... YES 
MY QUESTION: .. WHAT is vscode????????

this is an extract of the entire CI/CD process  .......7:58 ....(qusetion n answer vidoe 5&6)
b4  we containerize, containerize, b4 we ar creatin images, we had gone tru code quality analysis, and depending on the type of project, der are projects were
we execute sonarqube analysis b4 even creating packages wit mavin,, so if u do that u are good to go, so dis is jst a summary  bc we didnt hv nexus or sonar 
qube connected in this k8 but on our CI/CD pipeline, we hv developers write code, developing new update of the appl, and once they do that they commit to 
github and we can connect github to soanat cloud wer once der is a new commit, sonar cloud wil run code quality analysis, its only when that process passes,
wher our sonarqube or sonar cloud report indicates that it has gone tru all our quality threshold, evrytin is fine , der are no vulnerability in the code, no 
smell, bug n issues , then once we v realised that then we now bring in maven wich then creates packges , once maven is done we upload artifacts into nexus
and frm ther we can now build our image using docker, once image is built we use k8 4 deployment.

INORDER FOR US to update the new versionin on the deployment session on k8, that is done by webhook or pull ACM 
*************SOME ONE SAID ,, with the help of the webhook created in github wich is triggered when thers a new comit, github  then notify jenkins to do a
build ...32:17

*******i will share the jenkins kubernetes integration, it covers evrytin am tryin to xplain to u now, ,, a lot of folks have had jobs by just goin tru that
video, hw all this tools connect to ecah other

********************************************************************************........................


                              USE IDES TO GENERATE FILES

#### i can use IDES to generate a file and just copy, then jst use what i nid v... integrated development env
*****strategy can be rolling update or recreate... 
rolling update is the default startegy  so if u dnt enter a strategy, it wil be uisng rolling update
also if w dnt define replica only 1 replica will be created
------------------------------------
kind: Deployment   
apiVersion: apps/v1    
metadata:
  name: <deploymentName> 
  labels:
    <key>: <value> 
spec:
  strategy:
    rollingUpdates   
    recreate  
  selector:
    matchLabels:
      <key>: value           
    matchExpressions:
    - key: <key>
      operator: <in /not in>  
      values: 
      - <value1> 
      - <value3>      
  template:
    metadata:
      name: podName  
    labels:
      <key>: <vales>  
    spec:
      containers:
      - name: containerName
---
---==----------------------we are nt passing strategy bc we want the default strategy to be used and we didnt define replica too
vi apps.yml

deploy.yml      *we didnt indicate d strategy, so it will use the default; rolling update, & we didnt indicate d replica, so by default, 1replica wil be made
===========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: mylandmarktech/hello:1    
        ports:
        - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  name: appsvc
spec:
  selector:
    app: myapp
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31400 #[30000-32676]

**************kubectl apply -f deploy/ ...... to deploy the file  ......................   .21:33
ubuntu@master:~ kubectl apply -f deploy/
deployment.apps/myapp created
service/appsvc created
ubuntu@master:~ 
ubuntu@master:~ kubectl get deploy 
ubuntu@master:~ kubectl describe deploy   ..... we can see 1replica created and strategy type: RollingUpdate
ubuntu@master:~ kubectl get svc........we can see the appsvc service routing service to the backend application
and we can access the appl online 
ubuntu@master:~ kubectl scale deployment myapp --replicas 2    



what is the default deployment strategy?
  RollingUpdates  

kubectl scale deployment <deploymentName> --replicas <noOfReplicas>
kubectl scale deployment myapp --replicas 2    



                                          DEPLOYING USING RECREATE STRATEGY
Deployment strategies:
====================== ..........................  ******************       25:33
ReCreate strategy  --- 
  It comes with downtime because the current application version is destroy entirely
  before creating the new version  


                                   DISADVANTAGES
  eg; 8 pods of version1 running and you want to 
   deploy 8 pods of version2 , recreate will first destroy all the 8pods of the current version
therfore ther will be downtime
-------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 4
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: mylandmarktech/hello:1    
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: appsvc
spec:
  selector:
    app: myapp
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31400 #[30000-32676]

---
ubuntu@master:~ kubectl apply -f deploy/
deployment.apps/myapp configured
service/appsvc unchanged
ubuntu@master:~  kubectl get deploy  ......... we see 4replicas running
ubuntu@master:~ kubectl describe deploy myapp  ... and the strategy type is recreate
we can also access it online
we can also deploy version2 but der wil be some downtime bc all the applications will go offline


# Create Deployment
kubectl create deployment <deployment-Name> --image=<Container-Image>
kubectl create deployment my-first-deployment --image=mylandmarktech/hello

##### but since we are using apply:  ** i bliv it means using declarative approach ie manifest file
kubectl apply -f deploy/app.yml  

# Verify Deployment
kubectl get deployments
kubectl get deploy 

# Describe Deployment
kubectl describe deployment <deployment-name>
kubectl describe deploy deploymentname    

# Verify ReplicaSet
kubectl get rs

# Verify Pod
kubectl get po

Scaling a Deployment
====================
# Scale Up the Deployment
kubectl scale --replicas=20 deployment/<Deployment-Name>
kubectl scale --replicas=20 deployment/myapp 

# Verify Deployment
kubectl get deploy

# Verify ReplicaSet
kubectl get rs

# Verify Pods
kubectl get po

# Scale Down the Deployment
kubectl scale --replicas=2 deployment/myapp  
kubectl get deploy



                                           WE CAN EXPOSE ***i bliv the app.. BY CREATING THE SERVICE
we can expose by creating the service
==============================
---     we were able to create a service like this for our deployment
kind: Service
apiVersion: v1
metadata:
  name: appsvc
spec:
  selector:
    app: myapp
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31400 #[30000-32676]


                                                 ROLLING UPDATE STRATEGY HAS NO DOWNTIME
RollingUpdates strategy:   no downtime 
-# Deployment RollingUpdate
---------------------
vi roapp.yml and paste

kind: Deployment
apiVersion: apps/v1
metadata:
  name: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 1   ****************** ie the max number of pod that can be created at once is 1 
       maxUnavailable: 1    *********** the ma xnumber of pod that can be brought down is 1
  minReadySeconds: 30   *************when it brings up a new pod, it waits for 30second for the pod to get ready b4 bringing down the next pod
  selector:
    matchLabels:
      app: myapp 
  template:
    metadata:
      name: hello
      labels:
        app: myapp
    spec:
      containers:
      - name: helloworld
        image: mylandmarktech/hello:1
        ports:
        - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  name: appsvc
spec:
  selector:
    app: myapp
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31400 #[30000-32676]

ubuntu@master:~ kubectl apply -f deploy/roapp.yml
deployment.app/web created
ubuntu@master:~



                                       UPDATE DEPLOYMENT WITH SET IMAGE OR EDIT MANIFEST FILE
Update Deployments  (mayb by rolling out a new version) ,,,,, .......................52:38
Introduction
    We can update deployments using two options
        Set Image   ...OR
        Edit Deployment(manifest file)

# Update Deployment -uusing set image  SHOULD WORK NOW
kubectl set image deploy Deployment-Name> <Container-Name>=<Container-Image> --record=true
kubectl set image deploy web helloworld=mylandmarktech/hello:2 --record=true

Rollback to previous version
============================
# Undo Deployment
kubectl rollout undo deployment/web  

# List Deployment Rollout History
kubectl rollout history deployment/web    


                                            
  1.08.30                 DEPLOYMENT TECHNIQUES
we have blue green techniques & carnary technique

                                                                    2:21:21
DEPLOYMENT TECHNIQUE  ************************************(this is under using deployment not deploymnet as an object) ............1:08:44
Blue Green deployment Technique :    
   version1/blue running in production
   version2/green  Just 2 replicas deployed in testing env    ... 1.15.30  
   we deploy version2 in the test environment and observe its performance, 
   Once the performance is good then we deploy version2/green in production    
the problem with blue green deployment is that it makes use of lot of ressources bc we need to hv 2sets of deployment running.. each set is consuming 
resources

1.14.00
the issue with rollingupdate deployment, if you release an important appl like a medicapp for an hospital then you realise ders an error and need to rollback
but before you can rollback lives are gone so we dnt want to deploy using rolling update, we want to deploy using blue green...
so using blue green deploying we have version1 running in production , then we deploy version2 , so  version2 is green and its deployed in the testing/UAT 
env, which cud be in a diff name space(in k8 we use namespace to isolate clusters) and while its deployed (ders anoda service use To expose it), further test
is being done ,we are observing hw its performing, we can decide to test it on a client with less severe cases or some rabbit & by the time d testing is 
saticfactory, we need it to be running in production and in k8 we expose it using a service.the application already runing in prod is being accessed using 
d service its a nodePortSVC MEDSVC (selector app:medic) wich is routin traffic .the deployment runing in UAT has label=app:med
NOW for the service MEDSVC to  start routing traffic to the appl in UAT and stop routing traffic to the appl in deployment, i will need to change my selector
in the service from medic to med and immediately the appl in UAT is now being exposed in production and traffic is no longer routed to the previous appl  and they can be brought down...
thats how blue green works by switching the service over once we are sactisfied with testing. .... this  is not just a quick switch , this is an ultra fast 
switch.. so oncee we are satisfied, we then bring the old version down.
 1:19:46


**********with roling update we can decide to push out 10 replicas of the new version and keep 10 replicas of the old version to that xtent ders a kind of
trafic mgt and trafic is flowing to both version1 and version2 bt we cant deter who is goin to get version1 and who gets version2 like we ar able to det in
deployment technique anoda problem of rollin updtae is that even after completely deploying version2 if ders a problem, you still v to rollback

*********testing in UAT doesnt mean that ther is no possibilty that der could still be a problem n we wud need to roll back.....1:14:30

Canary deployment Technique :  this gives you a longer time to test ur appl ... (class33 video7a....1:12:35)
   - TRAFFIC MGT   
   - 25% traffic VERSION2 goes to Canada  , and if we are sactisfied with how its running we can then switch all the traffic to to version2
   - 75% traffic VERSION1 goes to USA  
   - VERSION1 -- 40% to version1    ...e.g we can decide that we hv version1 runing we can decide that since we ar rolling out vesion2 let 40% of our traffic go to version1
   - VERSION2 -- 60% to version2              and  40% go to version2 and we observe for an extended period and if its sactisfactory we move all the traffic to version2
   - 40years+   75% traffic VERSION1    OR  we could use the cx age group (using canary setting u can set all that up,, der are some appl that ask for your date of birth etc
   - 18-39years 25% traffic VERSION2
   -we can alsouse based on biometrics e.g sex or ages



                               QUESTIONS
QUESTION......1:24:35
1) can a file be use to taint a node or must it be only commands in the CLI
ANS : anyting can be done with a file ,,,, i will have to check it up and you can check it up too

2) WHAT IS THE MOST used type of deployment
in k8 we can deploy with our containerized appl directly in a pod or we can use controler Managers like RS,RC or daemonSet bt most importantly we can use deployment and we 
use deployment it gives us the option to use diff deployment stragey like recretae, rollingUpdate and part of the deployment strategy we can use deployment techniques like
blue green OR canary deployment and that is you makingyour application available and infact deployment is maeking ur application available
once the applictaion has been made available the nxt quetsion hw wil the appl be discoverable ,hw wil ur cx discover and ultilize the appl , hw wil it be useful to them
there services need to be created, we need to expose the appl using services and der are diff services categories :
cluster IP permits you to access the appl within the cluster ,, so it exposes the apl to objects insid ethe cluster bt if its an appl that end users nid to access clusterIP
wont work therfoer wil use nodePort service or LB service to make it accessible  bc deployment makes your appl available bt  hw to i access it : service discovery


3) CAN deleted replicas be retieved  ,, bc you say we can delete it bt then hw do we roll back if for e.g a junior staff deletes it
we cant retrieve a deleted replica , once its deleted its gone
*the fact i sthat someone doesnt jst cm to ur offic eand u give him access bc in ur wrk env, we will use roll base access control like if u ar new we can permit you to hv 
access only to pod and since our pod are behind a controller managers and when the junior staff delete a pod it will be recreted again so u shu dbe senesitive enough nt 
to grant him mangers access...

4) for best practice what is the recommended number of replicas to keep  ie replicas of diff versions 
we cud keep a max of 5replica sets bc it will mean you have deployed about 5versions and the cx is happy with new verion 
bt its also subjetive to the client , some may decide to keep up to 10 replicas

5) when we rollback wnd then rollout again are new pods always created or the pods are reserved when thay are inactive
when you store those inf k8 will store the data in etcd , so it knows that version6 has the version6 of the image so when you roll back to version6, it goes back to that
particular image that was in version6 , thats what happens 
you can also rollback to a particular version choosing the version you want so when u run kubectl rollout undo deployment/web, u can choose the exact version ur rollin bk to

6) when we deploy w ecan choose for e.g 4replicas  bt when we scale to 2 is there any prefeernce in the pod that are created
d pods are identical in everything,its nt a matter of  no preference ,if you are updatingnscaling frm ur manifest file it will wrk inline wit d latest version ie d number of 
replicas u hv defined in the file bt in terms of if it will chooose which pod to create it wiill bring down all the pod wit the old versionof the imgea n bring up the pod 
wit the new version u now want and in terms of number of replicas its goin to be a function of what is defined in the manifest file 

5) when we taint a node and its undergoin an upgrade when u pass a toloration will pods be schedued on that node?
what is the rationale behind tainting a node , u taint a node bc u wnat to upgrade the node so if the node is already under upgarde ders no nid to be assigning toloration
that wil still create a pod on the node right,, we only do that in rare cases .. so toloration is now that pod is nt schduled on dis node bt i am tolorating that to happen
bt that shud only happen if the node is nt under any maintenance, if its under maintennace u wont want to do that bc what is the rationale

6) hw do we rollback to a specific version???  ..
. go to k8 and check it out so that  in the  nxt class u can give us a briefing on that
kubectl rollout undo deployment hello --to revision=1 OR revision2 n so on   ..... class33 video 5&6


class33 video5&6
1) when we create toloration, can we create it so it doesnt create pods in the master node??
ans: YES, we can do that, ther are many other options when it comes to toloration, which means we have  diff operators and diff keys and wil look at that when we look at
scheduling, how pods are scheduled on a node.

2) why will we want to schedule pod on a tainted node
e.g we want to  ensure a particular pod is scheduled on all nodes including master bc the pod wil be gathering logs on the master node to tell us if the node is healthy or nt
the master node for e.g is tainted by default but we can use toloration to allow a pod to be scheduled on the master node probbaly bc the pod will be gathering logs on the 
master node

3) what is the actual function of the selector support function of the replica set bc when we were doin the controller managers we had the replication controller n u then
showed us the replica set and u said the replica set has a selector support but when we did both of them the only diff that i notice is in d format we wrot e our API veerison
ie in the replica set and also that match label key that we used
ANS: 

we hv equality based selectors and it is used for what?  
   ReplicationCOntrollers
key:values       ********** eaulity based selectors talk abt equal conditions like key:values
app:myapp
Set base selectors: is used for ;
  Deployments
  Replica Seta
  DaemonSets
  StatefulSets
  NodeSelectors
  NodeAffinity
key: app                    for set base we can have key , value in .. lets assume the key is app , value in:javawebapp could be my app
value in:                            so 1key can hv multiple value , dats why we say setbase selsctor and it basiclaly comes wit stuff like daemonset,RS, deployment etc
   -javawebapp                     its jst that all the examples we hv done so far we v not needed to get to get into set base selector bt as we progress, we are going to
   -myapp                          look at set base selector and if u hv any problem jst wqually go to the k8 official documentation
                                    kubernetes.io abi na oi

4) is der any scenario that will rEQ us to create stactic pods manged by the kubelete service as opposed to using the controller managers bc static pod itself has healing 
capabilities ACTIVATED 
ANS: YES , BT Static pod cannot scale, so if it created a pod is just a single replica
2ndly, static pod are used to create components that manage k8 like kube proxy, dns, all of those pod that manges your cluster, we use that pod to create them so that they 
will always be recreated even by the kublete service.

5) what det the object we use in deployment, is it coy base ??/ wxcept daemonSeT cos i understand its used for e.g logmgt
so what det the obj w euse for deployment
ANS:
the obj to be used depends on the diff/other components that obj will bring to the table 
deployment is said to be the recommended object for deployment in k8 or for running/deploying workload in k8 bc when u create a deployment, it creates a replica set so
it records whatevr u created such that if anything is wrong it can always rollback, thats why most of the time we use deployment bc deployment will rollout a replica set
u can rollout n rollback ,,, so from a very strong perspective we use deploymentas the recommended obj to deploy workload in k8
****************************************************************************************************

class33 video7a....1:17:10)
hw is trafic manged wit canry is dis  solely on the k8 side or we are goin to be depending on the cloud provider like aws to manage the taffic
ANS;
for canry we are goin to be use what is called a k8 operator  der are k8 operator like estil that wil enable us to deploy canary so its nt abt cloud side or whatever, u jst 
need to deploy a particular operator or an add on to your cluster that wil permit that to happen.

2) is there a duration for wich blue green deployment can last 
ANS: for blue green, its nt very wide, u cud hva testing period for mayb 7day or 30day bt that may
nt really detect all the problems bt with canary we cud run a canary deployment for asl long as 6months so at a higher level of security we cud want to consider more of 
canary

most critical appl, we use blue green to deploy them e.g u want to test a vaccine , in this type of scenario we use blue green bc we cant be carrying out n operation on a
client and then realise that ther is a fault, the new version is nt as gud as the previous one and you need to roll back , that rollbk cud be diasterous, so w edeploy a 
blue green env and run a test on maybe guinea pig etc , we observer hw itruns and if it is very sucesful, we deploy to production knwing thta it shud nt fail
even wit tha ther cud stil b afailure bc the tasting period is nt like inifinte for blue green, its nt very wide, u cud hva testing period for mayb 7day or 30day bt that may
nt really detect all the problems bt with canary we cud run a canary deployment for asl long as 6months so at a higher level of security we cud want to consider more of 
canary

1:21:30
is it that each time you refresh it takes you to a diff replica set???
ANS:
************here is our cluster ,, whta is manging this pod manifest????
we are using deployment as the object. .. our deployment is hello , this deployment is manging this 2pods , bt it doesnt manges the pod directly, it manges it via ,
bt it doesnt mange the pod directly, it manges it via a replica set so when u rol out this deployment, it creates a replica set, SO FOr each version that is rolled out it
creates a replica set for it and the previous replica set becomes 0  bt they stil exists such that if you want to roll back its done with relative ease.

if am logged in and an upgrade is done will i be logged out such taht i hv to login again into a new replica set
ANS:
if its a 0downtime technique that we are using , you wont be logged out
**************************************************************************************************************************************




Ticket 007:
  Setup a multi nodes kubernetes cluster using the kops software.

Ticket 017:
  Setup a kubernetes cluster using the amazon EKS? .

Ticket 019:
  Instal tree, unzip, git and nano in a windows system and an ubuntu.

kubernetes 3 Video
====================   
Imparative approach - Pods/Deployments  
Delarative approach - Pods/ReplicationControllers
ClusterIP and NodePort Services
Jan 28, 2024  
 
