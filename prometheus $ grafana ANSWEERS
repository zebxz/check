NICE explantion for :  .. 2) Explain your experience in kubernetes?? .......  18:00

4:00     ................... watch it
you would be ask what you have been able to use k8 to solve in your environment
ITS A Common experience when it comes to k8, either they want u to explain your experience or they just want todiscus some problems u may v encountered using k8 and hw you
were able to fix those problem. also when u apply k8 thersa lot of xperience u gather n der a lot of problem uve been able to solve, 
so the xpectation is for you to be able to state clearly the kind of problems uv been able to fix applying k8 in ur env

also at times , they ask to xplain  k8 architecture
this is a very imp aspect in k8                              



helm to install and deploy:
  P/G  
  EFK  
  Rancher    

6:00
this is a very imp aspect in k8 n u shud be able to xpln dem                        

1) Explain the kubernetes architecture??  
   masterNodes/controlPlane:
made up of 
      apiServer  : wich is the main adminstartor, the entry point into our cl8
/etcd/scheduler/controllerManagers
   WorkerNodes:
      kubelet/kube-proxy/containerRuntime-Container-d/  
these are the component
we also have the
   kubernetesClient|: 
      kubectl / UI- Kuberenets dashboard
********thes are what we can use to mg8 task in k8 when it comes to architecture

2) Explain your experience in kubernetes??

3)What problems have you encountered applying kubernetes in environment?
we kn the k8 mg8 containerized appl, if ders a problem in the app 
How can you troubleshoot application related issues in kubernetes??
our appl are running in pods so if ders a problem, we v a few things we can do , we also saw dat when it comes to docker 
now if u look at k8 n docker, if ders a problem in doker in our container we can run the below , also for k8 we run the command below
kubernetes manages containerised applications:
  kubernetes                                                    docker    :
  kubectl get pods                                          docker ps or docker ps -a      
  kubectl describe pods podName                             docker inspect containerName/ID  
  kubectl get svc/service  
  kubectl get endpoint/ep  
  kubectl logs podName                                        docker logs containerName/ID 
  kubectl exec podName  
exec to execute command inside the pod ..... 24:00                       docker exec containerName/id 
  kubectl top podName                                            docker stats/top   
we can also pipe n grep for errors
kubectl logs app-(app name) | gre errors
 
#############more xplanation  .................13:05
kubectl get po 
he tried to access his kops cl8 bt it didnt wrk so  he said 
when we v dis rror msg   to get it fixed we go to our kops cl8 setup n export the kube config file that is the file we used for kops inatallation
kops export kubecfg $NAME  --admin
then run 
kubectl get pod 
so if ders a problmr in our appl we can run that and we can also describe the pod 
kubectl describe po (pod name)

IN K8 appl IS EXPOSED USING SERVICE DISCOVERY
 service discovery:
    webAppservice ---> 7webAppPods
lets assume i hv 7 webApppods
THEREfore i will create a webapp service wich will lb traffic to the 7pods
############for me to knw my webappservice is routing traffic to all of this pod i can run
kubectl get svc
impotrantly we can get the endpoints/ ep

#############   also  .................................................NICE .........................################################18.00
we run kubectl get deploy  to see the app we deployed
kubectl get ep 
WE SEE THE CURRENT EP is 2 
kubectl scale deply (app name) ----- replica 4
we run kubectl get ep again 
now we see Ep is 4
############### there fore we can rightly say that the service is routing traffic as expected
so i can be abl rto xpalin this in real time bc it is working as expected
#########we can aslo check kubestl get svc 
to see if we can accesss the app and also check online

********** we can also get logs for the appl
kubectl logs app-(app name) | gre errors
if ders an error the error msg is able to tell us 

########################################we cud also have these errors ............27:00       our images are found in dockerhub or amazonECR
WE can run kubectl get events
in the process of pulling the image
creating the container and
strating the container there could be a problm inbtw this proceses
iys either we are pulling the wrong image
we cud hv the right image but wrong authentication with the image pull sercert when pulling frm a private repo

common errors in kubernetes:  
#  pods are in pending  state 
  pullimage error / imagepulloff   
   WRONG  image: mylandmarktech/hello:20     
          mylandmarktech/hello:22   
# authenticationerror:
  mylandmarktech/nodejs-fe-app:2  
  imagePullSecrets:
  - dockerhubcred
#KOPS CLUSTER DEPLOYMENT ISSUES: like
  IAM user not authorise     ............. we nid this to create a kops cl8 in aws
    create an IAM role with required permissions/policy  
       VPCFULLACCESS/EC2FULLACCESS/S3FULLACCESS and attached
       to the kops control server 
    Attached required IAM policies to the IAM user/group and   
    run aws configure  

  #vpc limit reached / :............ by default when u run a vpc tier account, the max numbe rof vpc u can crtae in one regionis 5, so when u reach this u can request#
    5 vpc running in production  
    Request additional vpc quota from aws  
  deploying a kops cluster [ a new vpc,s3, ec2-instances, ELB, ASG ]

node notReady: when u deploy self mg8 cl8, u hv to deploy ur node , u hv to mk sure that ur nodes are ready bt  mg8 cl8 like  EKS we dnt worry abt d node nt being ready
  kops/kubeadm = kubernetes CNI [flannel, weave, calico] is not deployed our node will nt be ready
NODES not ready cud be bc of k8 cli, k8 netwrk interfaces nt installed 
  ensure that the kubelet service is running [systemctl start kubelet]   if not node wil nt be ready    
  node is stopped/terminated in aws , in this case restart it 
 OR  Place the nodes behind an ASG with a ELB for health check  
  use kops/eks over kubeadm    to manage such problem
#crashloopbackoff 
  # pod repeatedly crashing
#ReadinessProbeFailed or 
#LivenessProbeFailed
#Insufficient resources
#persistent volume mount failures
#InvalidNamespace
#cni plugin error
 
# error converting YAML to json
=============================

k8 manifest file can be written in json or yaml
bt whenu run kubectl apply, it has to us ethe file 
e.g   ............. this is an erroe bc we dnt hv any kind as devops
kind: Devops
apiVersion: PODS    
metadata  
spec

kubectl api-resources | grep devops  
but no result
 bt grep for pod n we v result
kubectl api-resources | grep i pod



# what about issues when all pods are running but the
applications are unable to communicate?
this cud be as a result of misconfigurations.
for example: for external access we use a nodeport service type
pod.yml   
-------
kind: Pod    
apiVersion: v1   
metadata:  
   name: myapp  
   labels:
      tier: be  
spec:
   containers:
   - name: myapp   
     image: mylandmarktech/hello   
     ports:
     - containerPort: 80

svc.yml  
-------
kind: Service
apiVersion: v1
metadata:
  name: websvc
  namespace: dev
  labels:
    app: web
spec:
  type: NodePort # ClusterIP
  selector:
    app: myapp # labels= tier:be
  ports:
  - port: 80
  - targetPort: 8080  # containerPort80/8080
  - nodePort: 40200   # 30000 - 32676
we dnt hv port range of 40200, its out of our service range

################################ so if u go for an interview and u are asked what is wrong with this script, why cant we route traffic what cud be the problem
 its just misconfiguration   , also our target port has to be the same with container port, also my selector has to match to my labels

*********** so if am given a scenario like this i identify problems and fixed them

so if u are asked did u encounter any problem using k8 ????
the answe is yes
did u suceesd in fixing them ?
most of the time yes




PROMETHEUS AND GRAFANA               *********************47:40  .............########### check powerpoint
if we want to ensure our server is function well we hv to install a software that will monitor the server and give us info abt it 
=====================
its an open source monitoring aaaaand alerting toolkit. prometheus consists of serveral components some of which are listed below:

importance os monitoring:
  •  avoid reactive panics  
  •  Increase uptime. webapp pod    in k8, automatically it wil restart the pod or if the pod goes down it will recreate a new pod replace it. 
  •  Improve hardware and software performance.
  •  Plan for the future by making the best use of your resources.
  •  get an almost immediate return on investment

************if ur server is abt to go doen or is running short of resources, it may get to a point wher the appl can no longe rrun in the server 
e.g 
server [mem4GB ] --- maven[2BG], at all  time i need 2gb for my maven service to run                                             to avoid reactive panic
  OTHER SERVICES/processes are using 3G , then maven will nt run , therefore no bill can be done appl can run n dats a server so to avoid this we can monitor the server
  BOA.COM  / aa.com / cnn.com /     to avoid reactive panic  ,, imagine this server goes down, so we can monitor the env so that even b4 cx notice it we ar already aware 
  facebook.com  / 3B active users                                                                                        n fix it b4 they even notice 
  whatsapp.com /  3B active users 

  accessBank = 25B Naira as at Jan 1, 2023 
    Jan 1, 2023 - assets = 25,000,000,000/400 = $62.5m
  November = 62.5 * 1400 = 87.5B Naira 

WITH monitoring:
 Date       assets  NAIARA   USD   
 Jan 2023            25b    62.5m   
 Dec 2023            87.5b  62.5m  

WITHOUT monitoring:
 Date       RATES  NAIARA   USD-Asset   
 Jan 2023   400      25b    62.5m   
 Dec 2023   1400     25B    17.9m  

=====================================
Prometheus/Grafana 
=====================================
application performance monitoring = APM   
monitoring (micro-service) applications with  
Prometheus and Grafana
======================================
deploy prometheus using helm:
  helm: CLI/charts/repository  
 helm-charts  
helm-cli 
helm-repository  
helm charts for:
nginx-ingress   https://helm.nginx.com/stable
grafana         https://grafana.github.io/helm-charts
prometheus      https://prometheus-community.github.io/helm-charts

make sure that helm3 is installed   
================================
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
chmod 700 get_helm.sh
 ./get_helm.sh

deploy33.sh    
helm repo add nginx-ingress https://helm.nginx.com/stable
helm repo add prometheus https://prometheus-community.github.io/helm-charts 
helm repo add grafana https://grafana.github.io/helm-charts 

helm install prometheus  prometheus/prometheus 

deploy prometheus using helm   
==========================
helm repo add prometheus https://prometheus-community.github.io/helm-charts   
helm install prometheus prometheus/prometheus
helm show values prometheus/prometheus
helm template prometheus/prometheus

helm install prometheus prometheus/prometheus
helm upgrade prometheus prometheus/prometheus -f prometheus-values.yml -n dev


deploy grafana using helm   
==========================
grafana   https://grafana.github.io/helm-charts   
  helm repo add grafana https://grafana.github.io/helm-charts
  helm install grafana grafana/grafana -n dev  

git clone https://github.com/myLandmakTechnology/prometheus-grafana-ELK-EFK

kubectl get secret --namespace dev grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

  username = admin  
  password = 5ibxy9DOfkwuTjyWaW34T5wKAmA5sQ7Dp7aBkvmh

helm charts for:
nginx-ingress   https://helm.nginx.com/stable
helm search repo  nginx-ingress    
helm install nginx  nginx-ingress/nginx-ingress -n dev   

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress33  
  namespace: default  
spec:
  ingressClassName: nginx
  rules:
  - host: springapp.landmarkapp.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: springapp
            port:
              number: 80
  - host: java.landmarkapp.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: javawebappsvc  
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingresspg
  namespace: dev
spec:
  ingressClassName: nginx
  rules:
  - host: grafana.landmarkapp.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: grafana
            port:
              number: 80
  - host: prometheus.landmarkapp.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
  - host: alerts.landmarkapp.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: prometheus-alertmanager
            port:
              number: 9093


-
Sample Dash Board IDS: 
  3119, 7249,  8919, 6417 ,11074

kops@master:~$ kubectl get po -n dev
NAME                                                READY   STATUS    RESTARTS   AGE
grafana-948dd5956-xcn5q                             1/1     Running   0          35m
nginx-nginx-ingress-controller-7f48d57b4c-7tghw     1/1     Running   0          43m

1. alertmanager-0       -- statefulset
2. kube-state-metrics   -- deployment
3. node-exporter        -- DaemonSet
4. pushgateway           - deployment
5. prometheus-server     - statefulset/database  

  EFK =  

Rancher and kubernetes:
PROVIDE A Kubernetes platform  
With Rancher we can import and manage multiple kubernetes clusters    
We can create clusters like EKS / AKS / GKE, etc.   
Rancher provide a dasborad for kubernetes
Rancher is deployed using docker  

#!/bin/sh  
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt install docker.io -y  
sudo docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher

sudo docker logs  container-id  2>&1 | grep "Bootstrap Password:"
sudo docker logs  b3e4c58c646c  2>&1 | grep "Bootstrap Password:"
b3e4c58c646c


  https://18.119.126.168

  security and EFK  
