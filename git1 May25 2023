GIT,  VERSION, SCM, creating git account, GIT INSTALLATION


Git and SCM 
============
Landmark-SS -                 Paypal:
===========                   =======

Applications are the output of softwares
Applictaions are developed by developers

******** we are deploying a web application for our client paypal , once it is devloped, tested, built, we monitor the application for paypal so the customers can connect to
paypal website and carryout transactions


    Develops, Tests, Builds, deploys & monitors applications 
    Applications are the output from Softwares  

paypal:
  Releases:
   Releasing an application is taking/deploying it to the client
   In realtime we have multiple Releases.     

*** once the app are developed they are released to the client 
release1 = version1   = 1000lines of code  
   echo 'Welcome to LandmarkTech'

release2 = version2  = 2000lines of code  
   echo 'Welcome to Paypal'
   echo "Your convenient payment gateway"

Release3  = version3  = 1000 lines of code  
echo "Paypal the best payment gateway"

**** but if The client is not happy with the latest version of the application.   
What can be done??? RollBack
eg we can roll back from "version2" to "version1"

for us to be able to rollback to version1 will depend on if we have the record of version1 (versioning) 
we need versioning, 
version is also important for us to move from versin1 to version2 and from version2 to version3

Rollout   --> version1 --> version2 ---> version3  
RollBack  --> version3 --> version2

                                            
                                          VERSIONING
I n the diff VCS , WE have  alocla system and in the local system there are developers writing code


Versioning in Software Development:
===================================
Version control systems = VCS:
  Local = version1, 
          version2,[5000LINES ] 
          version3 [2000LINES ] 

   cons: Single point of failure                 **** no other option available to access its data or to resolve the issue
         lacks collaboration                   ******** bc developers cant relate
         in-efficient use of resources including time  
         can't RollBack        *** ie , if the local environment goes down its a serious problem

 
 
  
  Centralised:             *** here we create a server
    cons: can't RollBack
          The central server can fail    ** the server wher developers have saved data can fail 

  pros:  
developers can collaborate to an extent



Distributed VCS:
===============
GIT: DVCs 
  Distributed Version Control system 
  - Git manage data as snapshots. 0 / 10 / 20 / 30 / 40 / 50 / 60 / 
  - It takes a picture of what all your files look like 
     at that moment and stores 
    a reference to that snapshot.

  Benefits: Nearly every operation is local
            git has data intergrity
            Git generally only adds data
            Rollout and RollBack  
other DVCs:
SVN --> Sub Version
CVS --> Concurrent Version system
TFS --> Team Foundation Server
Git --> 95% plus of companies are using GIT   



******* SOFTWARE Engineers and evelopers develop applictaions


Git is a Distributed Version Control systems. DVCS
In our environments (Landmark) we use Git for Versioning.  


                                                         SCM
git comes with source code managers
in each loacl environment gitbash is installed so it captures everything that is done with relative ease
so before we even submit the codes from our local env to scm, GIT  is already installed


SCM = Source Code management
=======================-====  
SCM service plaforms :
  GitHub - MS
  GitLab
  BitBucket (Stash) - A
  awsCodeCommit 

IQ: As a DevOps Engineer, what are your roles & responsilities
    in Versioning with Git?
Answer:
  1. We ensure that Developers environments are configured and secured 
     We create an enabling environment for Developers to code/Develop
       DevelopmentServers are created in AWS/GCP.  
       share login details with Developers/Team [ userName/password ]  
       Ensure that git package/Software is installed 

*** at thi spoint w realise that our main task is project onboarding 
if approached by a cx to help mange their applications with git 

2. Project Onboarding: 
   1. create a github account for your organisation or self              ***** if necessary or in rare cases you may hv to create a github account for the org or yourself
   2. Create organisations where applicable in a SCM ['GitHub']  
       url =  https://github.com/landmarkss
   3. Create teams in SCM/github and assign members[Developers, etc.]                   ***** 54:30
       Team url = https://github.com/orgs/landmarkss/teams/paypalteam
        assigning members to teams using GitHub account userName/email
           oogunbiyi22
           amambua
           pride22
           Anyong87
           Ngohtez
           angeltemmy
       Grant permissions/roles to team members and collaborators:
           read  -- you can view codes   
           write -- you can view codes and make changes  
           admin/maintainer - ownership  
   4. Create repositories in SCM [GitHub] 
      repo url = https://github.com/landmarkss/paypal

   5. login into github
       website = https://github.com/                   ********website to create git account  and info needed
            name      = Amambua Ivoline Nkimih
            email     = amamivoy@gmail.com
            userName  = amambua
            password  = Admin@123.. 
            https://github.com/landmarka  

       website = https://github.com/
       login url = https://github.com/login
            userName  = amambua
            password  = Admin@123.. 


login url = https://github.com/login
url =  https://github.com/landmarkss
Team url = https://github.com/orgs/landmarkss/teams/paypalteam
repo url = https://github.com/landmarkss/paypal

  6. Ensure that Git and relevant IDEs are installed by Developers 



                                     GIT INTSTALLATION

Git Installations
-----------------
Git Installations differs depending on your operating system:
Pre Requisite Software Download/ Registration :
Install git in Windows   :  
  Install gitbash @ https://git-scm.com/downloads [git.exe]
  $ git -v
    git version 2.38.1.windows.1

Install in RedHAT Linux servers:
    sudo yum install git  -y 

Install in ubuntu Linux servers:
    sudo apt install git  -y 
=============================
remote repository in github 
https://github.com/landmarkss/paypal
mkdir paypal && cd paypal

Assume the role of a Developer
We are developing for our paypal FinTech client. 
1. create a directory for Development   
   mkdir paypal && cd paypal  
2. Initialise this directory to keep track of 
   any change or changes in the files/codes  

[obim@demo22 paypal]$ git --version
   git version 2.39.2

Git Commands:
  git status 
  git init 
    create a Local repository [.git]  
    initialises the git repository
  git add 
  git init  

 touch list  
 echo simon >> list 

 workingArea  stagingArea LocalRepo RemoteRepo  :
   git add *   
              git commit  
                           git push 

  git add fileName  
  git add .   
  git add *  

[obim@demo22 paypal]$ 
 git config --global user.email "legah2000@gmail.com"
 git config --global user.name "Simon Legah"

with THE "git commit command -m " a version is created with a version number[commitID]  

git init          = to initialised a git empty repository
                    create the default branch[master, main]
git status        = to track files location
git log           = list all commits  
git add           = move files to staging area from working area
git commit -m     = move files to the local repository FROM STAGING AREA
                    good commit message for tracking changes created by authors are recommended

remote repository in github 
https://github.com/landmarkss/paypal

  git remote -v 
  git remote add aliasName repoURL  
  git remote add paypal https://github.com/landmarkss/paypal
 git push aliasName branchName  
  git push paypal master  
  [obim@demo22 paypal]$ git push paypal master
Username for 'https://github.com': legah2045
Password for 'https://\legah2045@github.com': 

Class32Teams:
Project:
  1a. Create your GitHub account 
  1b. Onboard a new project for a FinTech Client
        organisation / teams / repository
  2. Managers and assistant
       Create a Team in your created organisation for paypal and add members of your 
       your group with write access 

