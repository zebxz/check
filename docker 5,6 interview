CREATING DODCKER FILES , LAYERS EXPLAINED , HW TO TRACK ISSUES IN CONTAINER/ How to troubleshoot or debug applications running as docker containers, 
to run command inside a container, docker cp = used to copy files into the container from the dockerhost and vice versa, TO KNOW THE CHANGES THAT V OCCURED 
IN THE CONTAINER, DOCKER COMMIT, DOCKER FILE N THE RYT DEPENDENCY, DOCKERFILE INSTRUCTIONS/KEYWORD, MAINTAINER, .IGNOREFILE, DOCKER ADD, 2WAYS WE CAN PASS THE
RUN/CMD/ENTRYPOINT INSTRUCTIONS, SHELL FORM OR EXECUTABLE FORM, WHATS THE DIFF BTW SHELL FORM AND Executable form (parent/child process),
CREATING A DOCKER FILE FOR RUN INSTRUCTIONS, What is difference b/w RUN & CMD, DOCKER BEST PRACTICES, IT IS DIFFICULT TO WRITE ALL THE STAGES OF THE FILE, 
MULTI STAGE DOCKER FILE, EXECUTE THE MULTI STAGE DOCKER FILE, PREPARING FOR MY PROJECT, DEPLOY NODE JS APPLICATION,

****************** MUST be able to explain WHATS THE DIFF BTW SHELL FORM AND Executable form
########################## ## ####### for u to explain in the interview that ur job includes writing and modifying docker files as as gud as thats what u do ############
                                          ******************   i can practice 3:11:25        *************************************

QUESTION
WHAT problem have you encountered in ur project before
when i joined my team, they had particularly entry point and CMD instructions that were written uisng shell form for that reason they were nt running as the parent process
so they were killed unnoticed

******** bt very soon i wont need to check stuffs externally bc am now a DEVOPS engr.
#### if i wnt to knw if my appl is running or nt i can run commands inside my docker container
************************************************************************************************************** START

docker ps  to list the running containers
to stop the container u can execute 
   docker kill/stop  
and once the containeer is stopped, you can start the container
BUT DOCKER Stop is recommemnded bc it will give a warning b4 stopping whie docker kill doesnt give a warning

How to troubleshoot or debug applications running as docker containers?
1. docker ps -a =
= will check if the container is running, paused or exited
 docker start/unpause
﻿﻿﻿2) docker top = check resources
﻿﻿﻿3) docker stats containerNAME/ID
﻿﻿﻿4) docker logs containerNAME/ID
5) ﻿﻿﻿docker exec = run command inside the container
6)docker exec app 1s 
docker exec -it app/bin/bash
7)﻿﻿﻿docker inspect containerNAME/ID
8)99﻿﻿﻿docker attach containerNAME/ID
﻿﻿﻿netstat -tulpn

26:24 , also is der ar issues in the container, we can track them frm the log files

  to TS 
the first command to run is docker ps to check if the container is running
1) then docker ps -a ,to check if it stopped
if its in stop state , u strt the container
but if it not stopped but the process is stopped u hv to unpause it
2) docker inspect  ... "will show us network ie is the container in a ntwrk" does it v ip adress, a container thats running we shud see the ip address in networks
and we can see the state as shown below that the container is nt running based on my inspeection, so we can start d container to solve the problem bc d container is exited
e.g
"State": {
"Status": "exited"
"Running": false,
"Paused": false,
"Restarting": false,
"OOMKilled": false,
"Dead": false,
"Pid": 0,
"ExitCode": 143,
"Error". ""
"StartedAt"? "2023-01-23T11:43:20.4499908057"
"FinishedAt": "2023-01-27Т00:14:15.

### most of the time when we look at networking after we kill a container n start a container, we ll see the ipaddresss will change

3) docker top container name/id  ...to check the process running inside a container 

4) docker stats ... resources being consumed by the cointainer process
5) docker update container name/id

13:13 to run command inside a container
﻿﻿﻿docker exec app pwd 
﻿﻿﻿docker exec app ls   .. to see the files
we can actually get into the container to execute command by accessing the container in intercative mode
docker exec -it app   .. for interactive mode
to interact with the container we nid a shell
so we can use a bash shell  .. : docker exec -it app bash
or bond shell sh
docker exec -it app sh
then pwd : 
/usr/local/tomcat      :shows me wher i am
but when i tried to exit it says not found
so we can see the bond shell is limited compared to the bash shell
now we change to bash shell
docker exec -it app bash
ls
pwd  ,, we can seee we ar inside the container

16:39 docker cp = used to copy files into the container from the dockerhost and vice versa
#### i can also get the commands online
docker cp foo.txt container_id:/foo.txt
docker cp , file name, container name/id: root dir 
docker cp web app:/usr/local/tomcat/

26:49##### to copy frm the container to the local host
we wnt to copy the log files to the home of ubuntu and  
docker cp app:/usr/local/tomcat/logs /home/ubuntu
if home/ubuntu is wher we ar currently carrying out our task, means we wnt to copy to our pwd so i can jst put a dot
docker cp app:/usr/local/tomcat/logs .
also if i dnt wnt to put a dot i can use the ¬ , the tilter sign

28:49 
#### when the process in a container is running der ar obviously some changes
when u deploy a container, der wil b some changes btw the container n the image wich was used to create the cointainer e.g we v copied some files into the container

**** TO KNOW THE CHANGES THAT V OCCURED IN THE CONTAINER
docker diff container name/id
its the diff btw the image used to create the container n the changes tahe v occurred in the container
 
###### to maintain the changes in future application , we can commiit the changes
docker commit 
enables us to extract an image frm a running container



**********(i copied this frm the previous video 5/5b )*************************************************
          webapp is the container name 
docker exec webapp ls webapps/tesla/jsps ... **** this is interacting with the container
home.jsp
i wnt to copy this file called home.jsp n modify smt 
docker exce webapp ls webapps/tesla/jsps/home.jsp
now ders a command called docker cp
we wnt to copy the filw called home.jsp to the container called webapp
  this relative path didnt wrk :.   docker cp webapp webapps/tesla/jsps/home.jsp .   ,, i bliv webapps is wher deployment takes place in tomcat
 WE run decker exec webapp pwd ,, we can see,  /usr/local/tomcat   ,   wich is the absolute path

1:40;34 **** so we use the absolute path 
docker cp webapp:/usr/local/tomcat/webapps ***** here we copied the webapps dir to the container webapp
and it says successfully copied to /home/ubuntu/.   ,, we wre unable to copy bc we wre using the relative path
ls n we can see /webapps  ...... i bliv this was copied to the pwd ,, i understand bt i can still ask ??????????????????????????????????????????????????????
now if i wnt to copy that exact file that is inside webapps (/tesla/jsps/home.jsp)
  docker cp webapp:/usr/local/tomcat/webapps/tesla/jsps/home.jsp . 
successfully copied , we can see /home.jsp ,,,, i bliv this was copied to the pwd ,, i understand bt i can still ask ??????????????????????????????????????????????????????
COPIED TO  /home/ubuntu/ .

*******1:45:28 copy file to a container:
docker cp home.jsp webapp:/usr/local/tomcat/webapps/tesla/jsps/ 
now we v successfully copied it to the webapp conatiner 
it shows :COPIED TO webapp:/usr/local/tomcat/webapps/tesla/jsps/ 
and when we check in the browser we can see the line that we changed

*************************THIS IS FRM DOCKER I&2 VIDES

so we wnat to build our image and the command is  
  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla .  

we wnt to build our image, the command is docker build, + so i give a name to my image called telsa image, what version:version 1
am building frm a file , the file is called docker fileand its found in /home/ubuntu/web,,...wher am i building, docker build image 1

FRM DOCKER1 video: 
 1:14:00  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla . 
 docker build -t teslaimage:1 -f Dockerfile . (since am located in the web dir i could jst do a .,ie my docker file is found in my pwd
 docker build -t teslaimage:1 . (the . means its building frm d docker file bc d defaut name for doecker file is docker file bt if am using a dif name e.g 
docker build -t teslaimage:1 -fdockerfile-tesla then i must pas the -f option bt if am using docker file wich is d default name i cna decisde nt to pass the -f option



*********************************************************************************************************************************************************



******What is docker commit?
Using docker commit we can create image from a continer.
docker commit <containerId/Name> <imageName>
docker commit webapp newimage:1 

***** docker commit webapp mylandmarktech/maven-web-app:class34  
then when i run docker image, i can see the new image with tag class34
**** then push to my docker hub account so members of my team can understand/see the change
docker push mylandmarktech/maven-web-app:class34  ,, now if u go to my docker repo u wil find thi simage 
**** create a container wit the imge 
docker run -d --name app -p 8088:8080 mylandmarktech/maven-web-app

===============================================

Dockerfile running notes starts 

Watch and practive the video below paying attention on the
Dockerfile section of the video.
NB: Watch the dockerfile video before Saturday's class.

We shall start with docker networks and Micro-services on Saturday.
===================================================================


Dockerfiles:
============ 
Dockerfiles are input use to build docker images, docker file is a simple text file that consists of instructions to build/assemble a docker image
Docker can build images by reading the instructions from a docker file
Docker images are input needed/used to create containerised applications  


FROM tomcat:8.0.20-jre8      e.g the this docker file is tryng to containerize this application using FROM tomcat:8.0.20-jre8  , as the base iamge
COPY target/*war /usr/local/tomcat/webapps/tesla.war


           

THE INTENTIONN OF ANY DOCKER FILE that we ar trying to create is to be able to package the application plus all its dependencies
DockerImage: --> It's package which contains application code 
        + all it's dependencies(Software+ENV Varibles + Config Files) 
        together.
so the docker file is written to achieve this objective

what type of projects do you support in your env ,,,, we support java base projects 
java-based projects:
                                                                                   59:49

53;40 #### this is another java or docker file
FROM tomcat:8.0.20-jre8  ....  tomcat is nt the ryt dependency
COPY target/app.ear /usr/local/tomcat/webapps/app.war
   in this example,  since we ar passing tomcat, the application code cannot be copied in a tomcat base image
bc its nt the right dependency , tomcat is nt the ryt dependency, we cannot deploy ear on a tomcat base image
we should be copying from  jboss/wildfly , as shown below and this is nt the home directory for jboss (/usr/local/tomcat), and (/webapps) is nt the deployment dir for jboss 
to deploy in jboss, its deployed in deployments dir
FROM jboss/wildfly ....  
ADD target/maven-web-app.war /opt/jboss/wildfly/standalone/deployments/


1#   .... this is correct
FROM tomcat:8.0.20-jre8     
COPY target/*war /usr/local/tomcat/webapps/tesla.war
2#
FROM tomcat:8.0.20-jre8   .. this is nt correct , we cannot deploy ear on a tomcat base image , the tomcat base image is nt the ryt dependency 
COPY target/app.ear /usr/local/tomcat/webapps/app.war  

3# this is correct
FROM jboss/wildfly:latest   .... when no tag is chosen, docker wil download the latest version
ADD target/maven-web-app.war /opt/jboss/wildfly/standalone/deployments/
ADD target/*war /opt/jboss/wildfly/standalone/deployments/   .. we can also deploy a *war file in jboss,, we can deploy web aplication in jboss



57:29
if we run docker pull jboss/wildfly
.... it shows : usinng default tag: latest
latest: pulling from jboss/wildfly
we can see it pulled the latest of the image 
cd web/
docker images
now we can seee the image was successsfully downloaded
### to check how to better use the image
we run docker inspect docker image id  
****** THINGS TO LOOK OUT FOR IN THE IMAGE, when we run docker inspect  ****mee**contains lot of info, i can tk a SCREEEN SHOT COPy n paste & memorize
58:25 
1) we can see java is installed
jbooss depends on java 
2) the working dir " /opt/jboss
3jboss hm dir /opt/jboss/wildfly
4) jboss image is exposed on : 
     "ExposedPorts": {
                "8080/tcp": {}      ... so this is the container port , it cannot be changed
the jboss is  now the base image 
i can use the image to containerize the appplication 

FROM jboss/wildfly:latest 
ADD target/*war /opt/jboss/wildfly/standalone/deployments/ 
am copying the file with the keyword ADD n am changing the file
ls 

1:01:30
vi Dockerfile_JB
CREATing a new dockerfile , i will containerize the application n what eva name was here before(tesla.war) is going to change to landmark.war ie deployed as landmark.war
FROM jboss/wildfly:latest (am copying this JBoss file we pulled n whateva name is here is going to change to landmark.war, bc dats wot we indicted it to deploy as when we created the new file
ADD target/*war /opt/jboss/wildfly/standalone/deployments/landmark.war  ,, whateva is here is going to be copied and deployed as landmark.war
am copying the file with the keyword ADD n am changing the name 
##### docker file created ,, exit
i wnt to build anod aimage , custom image that will v all my application .. the image name we ar building is jblandmark
docker build -t jblandmark:1 -f Dockerfile_JB .
1:03:09
#### earlier, we pulled the docker image n when we run docker image , we can see the docker file name is teslar.war
now after we build a new image frm the new file we created (name landmark.war) it will deploy as landmark.war
we run docker image, we can see the name for the new image we created as :
jblandmark********************************************************************************************** iMAGE HAS BEEN CREATED ......
SO I V CONTAINERIZE MY APPLICATION

### JBOSS/wildfly image... size is 742MB
jblandmark  image . ..  size is 736MB 
so i can delete  the jboss , i dnt nid it anymore ,, i only needed it to containerize my appl  , my appli has been containerized wit all its dependencies

1:04;30 
docker rmi -f jboss/wildfly  ,, we can delete without stating the tag, if it is latest and in this case , it is latest
bt i must stage the tag if its not latest
e.g  docker rmi -f image2:1

we ar deleting to free up my cpu space  
to check memory usgae :  df-h

### now i can deploy my application with the jblandmark image bc  i v containerize my appli , it has been packaged in an image 
                                container name:jbapp $ image name: jblandmark
docker run -d -p 6000:8080 --name jbapp jblandmark:1
we cant deploy anoda application on the same host port number, it has to change 
e.g 
docker run -d -p 8888:8080 --name jbapp2 jblandmark:1
docker run -d -p 8880:8080 --name jbapp3 jblandmark:1
docker run -d -p 81110:8080 --name jbapp4 jblandmark:1    ,, but thisa wil nt work bc the port range for addresses is (0-65535) ,, 81110, is out of range

of course at work u wnt be accessing application frm the console , it wil be frm the CLI
curl localhost:6000/landmark
the application path is /landmark as seen in the docker file we created ( cat Dockerfile_JB) ***** landmark.war but so the path is landmark
i can also run 
i can also make it to be verbose : curl -v localhost:6000/landmark
to access it externally,  on the browser publicip:6000/landmark  ,, 1:16:00 ,, site cant be reached on the browser
curl -v publicip:6000/landmark
curl -v 44.211.75.85:6000/landmark 

******** bt very soon i wont need to check stuffs externally bc am now a DEVOPS engr.
#### if i wnt to knw if my appl is running or nt i can run commands inside my docker container
 to knw the path to my application path, i can run: 
docker exec jbapp pwd
/opt/jboss
docker exec jbapp ls /opt/jboss
wildfly
docker exec jbapp ls /opt/jboss/wildfly   ,, inside wildfly, deployment is taking place in standalone
bin
READme.
docs
stanalone 
docker exec jbapp ls /opt/jboss/wildfly/standalone    ,, inside stanalone we v deployments
lib
configuration
log
deploymenbts
docker exec jbapp ls /opt/jboss/wildfly/standalone/deployments  ...******************************** now we can see landmark.war was deployed
landmark.war


1:16:30 ... READ UP POWER POINT SCRIPT


                              DOCKER FILE INSTRUCTIONS/KEYWORDS
Dockerfile instructions/keywords:   instructions can be used to execute commands/scripts
       in writing a docker file these ar the keywords we shud tk specific note of 
===================    
FROM   ,, this defines the dependencies , this is the most imp key work 
FROM:   The FROM instruction initializes a new build stage and sets the Base Image for subsequent instructions
MAINTAINER
COPY
ADD
RUN
CMD
ENTRYPOINT
WORKDIR
ENV
EXPOSE
USER
VOLUME
LABEL
ARG

Base image generally contains Libraries and dependencies  :1:19:14
 E.g for a:   java-standalone applications
FROM  openjdk11     , we use this to determine our base image
 
then  for: java-web applications
FROM  tomcat:9.0.7-openjdk11 ,    we use this to determine our base image
FROM  jboss/wildfly        ,        we use this to determine our base image


****************** he went into docker hub repository and typed tomcat in the search bar, When u click tag,we see the diff tomcat tags, that v been pushed then he click any
one :
docker pull tomcat:9.0.71-jdk17-corretto-al2
***** then copy my application code and am gud to go


FROM --> FROM indicates the  base image(Layers) such as OS(Libraries)
 like centos,alpine,ubuntu or any programatic language(java,python,node,go) 
 or some other sofwares like tomcat,nginx,mysql..etc. Using base image 
 we can create our own image. All sub subsequent instructions(Layers) 
 will be executed/created on top of base image
layers.

Syntax: 
FROM  <ImageName>
Ex:
FROM tomcat:8.0.20-jre8
FROM openjdk:8-alpine
FROM nginx
FROM node
FROM python


MAINTAINER --> It's will be used as comments to describe 
author/owner who is maintaning the docker file.
This instruction allows you to set the Author/Owner of the Image.
so if ders a problem 

MAINTAINER <name>
MAINTAINER <LandmakTechnology mylandmarktech@gmail.com>
MAINTAINER <Docker Community> ..e.g,we can have docker community as the maintainer, so if ders an issue with the image we should contact the docker community 


COPY  --> Using COPY we can copy files/folders to the image. 
COPY : this keyword is used to copy files from the host to the container 
using COPY, Files/Folders will be copied to the image while building an image.
Using COPY instruction we can COPY local(build context) files or directories(folders) to the image while building image.

e.g
to copy a file in the target dir to /usr/local/tomcat/ 
COPY target/tesla.war /usr/local/tomcat/ 
i can aslo do : COPY . .  (this means it wil copy all the files in my pwd into the working dir of the container) 


***********************************************************************************************************************************
COPY . .        1:32:30
applying : COPY . .
e.g 
ubuntu@docker:¬/web$ ls
Dockerfile          jnekinsfileDeclarative   jenkinsfile_tesla                pom.xml
Dockerfile_JB       jenkinsfileJuly2021      JenkinsfiledeclarativeJuneBathc  src
Jenkinsfile         jenkinsfile_docker       jenkinsfiles-declarative29       target
Jenkinsfile-ebay    jenkinsfie_paypal28      deploy-k8s.yml
Jenkinsfile11       jenkinsfile_sep22        docker-compose.yml

ubuntu@docker:¬/web$ Docker images
REPOSITORY                  TAG    IMAGE ID    CREATED   SIZE     
jblandmark                   1
Ubuntu                       latest
mylandmarktech/sping-boot-    latest

e.g   (from ubuntu below means we are creating this new image from Ubuntu 1:52:50) 
echo  FROM ubuntu > Dockerfile_copy 
echo COPY .. >> Dockerfile_copy
*** if i cat Dockerfile_copy  ,, i can see 2lines
FROM Ubuntu  
COPY . .          this is hw simple docker files are
********** COPY .. means it will copy all the files and folder in my pwd to my container and in this case, i am building an ubuntu container 
so if i execute this Dockerfile_copy  to build my image , it wil copy all the files above but if i dnt want to copy a particular file, to ensure that all the files ar copied
exceppt a particular file e.g src

                                     .DOCKERIGNORE
e.g i dnt want to copy: src then i wil create a new file called .Dockerignore , then any file i dnt wnt to copy, i can move it into this file 
ubuntu@docker:¬/web$  touch .Dockerignore 
ubuntu@docker:¬/web$  vi .Dockerignore
then write  src      , when i cat, i can see src
ubuntu@docker:¬/web$ cat .Dockerignore 
src

**** once the file have been moved into .Dockerignore, if i run COPY . . , those files will not be copied 

FROM Ubuntu    (this is our build image)
COPY . .
******** this build image and COPY.. Which is the content of  Dockerfile_copy .  can be used to create an image 
docker build -t imageone:1 -f Dockerfile_copy .                                      *********** 1:38:00
and we can also use the image to build a container then when we run ls, we can see all the files that were copied **** bt the src was stil copied, bt the .DOckerignore file
is used for files we dnt wnt to copy, dnt knw why it didnt work

this is the sytnax
SYTNAX:
======
COPY <source>                <destination> 
      ServerFile/FolderPath   PathInsideImage


                   DOCKER ADD

Docker ADD does the same tin as docker COPY but it has some advantages bc it can be used to copy files from external sources e.g to download files
ADD -->
     ADD also can copy files to the image while creating image. 
     ADD can copy local files from host server(build context) 
     and also  can download files from remote HTTP/S locations 
     while creating a image.

  e.g if my WAR file is somewhere in    https://8.25.3.9:8081/repo/tesla/tesla.war , and i want to copy this information while creating my container 
                                d server ip/neuxs server port/repository and in the repo, i v created a repo called tesla and inside tesla ders tesla.war
therefore i can use the keyword ADD , 
ADD https://8.25.3.9:8081/repo/tesla/tesla.war /usr/local/tomcat/   ,, this way we can download files from remote https location
this is the source:       https://8.25.3.9:8081/repo/tesla/tesla.war
and i want it to be in   /usr/local/tomcat/  

e.g, i want to download this tomcat9 to my server:     https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz /opt/
the file is found in a https location, so ill use the keyword ***** ADD
I WANT To install the tomcat from ubuntu  and download it into /opt 
FROM ubuntu
ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz /opt/ 

TO COPY THE PREVIOUS DOCKER FILE 
cp Dockerfile_copy Dockerfile_ADD
TO BUILD AN IMAGE WITH THE FILE Dockerfile_ADD
docker build -t imageone:2 -f Dockerfile_ADD

1:46:50
if i decide to put another ADD In my  Dockerfile like this  ie (ADD target /opt)
FROM ubuntu
ADD target /opt              **************  its going to copy from the host in the container in the opt dir
ADD https://dlcdn.apache.org/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz /opt/
******** its going to copy from the host in the container in the opt dir
then run 
docker build -t imageone:2 -f Dockerfile_ADD
when i run :docker run imageone:2 ls /opt
i can see the files were copied to /opt
        1:49:46


                 READUP POWERPOINT...   HOW CAN WE PASS THE RUN/CMD/ENTRYPOINT INSTRUCTIONS
RUN, CMD, ENTRYPOINT:  instructions can be used to execute commands/scripts. 
These RUN,CMD,ENTRYPOINT can be defined in 2 forms. we can pass them in 2forms  either we use the shell form or the executable form 
****** he then continued later 1:59:50 

RUN --> RUN instruction will  execute commands/scripts.
        RUN commands or instructions will be executed while creating an image on top 
        of the previous layers(Image). 
        Next to run you can mention any command based on base os of image.... (he didnt xplain this)
        We can have number of RUN instructions in a docker file 
        all the RUN instructions will be exectued one after the other from top to bottom.
  if a file needs multile 'run' instruction, writing the run command several times is not necessary, we can reduce them with the && operator(copied frm below)

*****layers means: when you create a docker image, it is created on multiple layers depending on the instruction that have been passed
***************** LAYERS EXPLAINED   ***************************************************

Docker history (image name OR image ID) : this will define all the layers on/of the image e.g files that were added on the image 
if i want create images, i can decide to use RUN instructions to add to the layers
e.g 
ubuntu@docker:¬/web$ Docker images
REPOSITORY                  TAG    IMAGE ID    CREATED   SIZE     
imageone                     2
imageone                     1
jblandmark                   1
Ubuntu                       latest
mylandmarktech/sping-boot-    latest



CREATING A DOCKER FILE FOR RUN INSTRUCTIONS    1:53:35
vi Docker_RUN 
FROM imageone
RUN mkdir /opt/class30    ie mkdir /opt and i wnt to call the dir class30
RUN touch /opt/class30/jobs    ie i wnat to touch a file insideinside /opt and i want to call the file jobs 
ADD . /opt/class30             ie add all the files in my pwd and add them in my container in this dir
RUN apt install tree wget unzip -y    ( we use apt bc imageone is running on ubuntu ie we created imageone from ubuntu as seen above )
exit
then run docker build -t imageone:3 -f Dockerfile_RUN
***** build wasnt successful bc some RUN command failed e.g apt install failed: WARNING apt does nt have a stable CLI interface. Use with caution in scripts, dis is bc the
base image is minimal, it contains just relevant libraries
********* now we vi into  Docker_RUN again and remove the apt command then our build was successful
now when we run docker history imageone:3 , we can see the 3 new layers that were added as well as the previous layers (ie imageone layers)
so when a RUN command is executed, a layer is added , they are added ontop of the previous layers that exited before   1:58:51

thats why we say: RUN instruction will  execute commands/scripts.
        RUN commands or instructions will be executed while creating an image on top 
        of the previous layers(Image)
 Next to run you can mention any command based on base os of image.... (he didnt xplain this)
        We can have number of RUN instructions in a docker file 
        all the RUN instructions will be exectued one after the other from top to bottom.


CMD: cmd instruction is executed while starting the container, it Specifies the command to run when an container is launched/started
there can only be one CMD instruction in a docker file, if there are more than one then only the last one will take effect
CMD instructions are nt executed when ur creating ur image ( i copied  this frm below)


ENTRYPOINT; Allows to configure a container that will run as an executable, its executed while starting a container
its similar to CMD, the diff is entrypoint command & parameters are not ignored(cant override) 
if we hv CMD & entry oint in a docker file then CMD parameters will be used as default parameters or entry point
if there are more than one entrypoint, then only the last one will take effect

**online*** 
The ENTRYPOINT command in a Dockerfile is used to define the main process or executable that will always run when a container starts.
It is particularly useful when you want to create a container that behaves like a standalone application or service.

Key Features of ENTRYPOINT
Primary Command: It sets the container's main process, ensuring that the container always runs this command.
Non-Overridable by Default: Unlike CMD, the ENTRYPOINT command cannot be overridden when starting a container unless the --entrypoint flag is explicitly used.
Flexibility with CMD: You can combine ENTRYPOINT with CMD to provide default arguments or flags for the main process.
By combining both entrypoint& CMD, you can create flexible and reusable containers. For example:ENTRYPOINT ["python"] an CMD ["app.py"]




1:59:40 *************HOW CAN WE PASS THE RUN/CMD/ENTRYPOINT INSTRUCTIONS
RUN, CMD**online command prompt, ENTRYPOINT:  instructions can be used to execute commands/scripts. 
we can either use shell form or executable form 
e.g 
ubuntu@docker:¬/web$ ls
when u execute command like this, a shell is been used to excute the command 
also
ubuntu@docker:¬/web$ echo $SHELL
/bin/bash  ........******************* so this is the shell that is been used to execute commands
ubuntu@docker:¬/web$ /bin/bash -c pwd   (using the bash shell to see our pwd)
/home/ubuntu/web 
ubuntu@docker:¬/web$ /bin/sh -c pwd     (using the bond shell to see our pwd, we also get a response )
/home/ubuntu/web 
**************************** so when u execute a command when creating images or container,  u can pass ur instruction using shell form or executable form

                               
1) -#Shell Form
and for shell form, we can have command and argument
RUN <command> <arg1> <arg2>
  **************** e.g   mkdir /opt/class  
CMD <command> <arg1> <arg2>
      catalina.sh  start  
ENTRYPOINT <commond> <arg1> <arg2>
      /bin/bash -c catalina.sh  start 
     /bin/bash -c catalina run ******** as  a child process, it can be killed unnoticed, so the recommendation is to run it as a parent process

2) -#Executable Form

RUN ["command/executable" , "arg1","arg2"]
    ["mkdir" , "/opt/class30"  a single argument ]   ************* we can hv mulitiple argument or a single argument

CMD ["commond/executable" , "arg1","arg2"]
    ["catalina" , "run"]

ENTRYPOINT ["commond/executable" , "arg1","arg2"]
           ["catalina" , "run"] 


WHATS THE DIFF BTW SHELL FORM AND Executable form....  CHILD/PARENT PROCESS (executable is preferred)
the main difference is :
when u run a command using the shell form (/bin/bash), the principal process is the shell
***me ie, eg; ubuntu@docker:¬/web$ echo $SHELL, or ubuntu@docker:¬/web$ ls; when u execute command like this, a shell is been used to excute the command 

ubuntu@docker:¬/web$ ps 
PID TTY        TIME CMD
12752 pts/0   00:00:00 bash    **** ( this bash is the principal  OR the parent process) 
19837 pts/0   00:00:00 ps
************ the shell becomes the principal process or the parent process and the command becomes a child process
ubuntu@docker:¬/web$ /bin/sh -c pwd  (and as can be seen here as well ... -c pwd)
thats the problem when u execute using shell form 
2:05:51  **************************   and as a child process, it can be killed unnoticed,so the recommendation is to run it as a parent process

####### WHILE FOR EXECutaBLE FORM , 
the command ( CMD or RUN instruction wil run as a parent process ) 
e.g to start a command in tomcat: 
CMD ["commond/executable" , "arg1","arg2"]
    ["catalina" , "run"

QUESTION
WHAT problem have you encountered in ur project before
when i joined my team, they had particularly entry point and CMD instructions that were written uisng shell form for that reason the instructions were nt
running as the parent process so they were killed unnoticed
eg  ues this; CMD [" catalina.sh run]  NOT this; CMD sh catalina.sh run

e.g 
when we run 
ubuntu@docker:¬/web$ docker ps
CONTAINER ID      IMAGE                               COMMAND                 CREATED                   STATUS 
      PORTS                                              NAMES
a6df14f48a8e      idfdac3b467f                          "catalina.sh run"       About an hour ago
 
2:07:27 *********************** "catalina.sh run"  is the command starting this application  .... this is in the executable form , so it cant be killed
                                                                                                                                  Expose: 8080
ALSO, when we open a docker file in docker hub (search tomcat), we see how the application is starting : the command in executable form "catalina.sh run" and 
it cant be killed bc tomcat is the main process and i am containerising my application
and my docker file is very important, in the docker file i want to deploy my application:
Dockerfile_RUN:  
  FROM tomcat:9.0.71-jdk8-corretto-al2   (he copied this tag from  when u log into docker hub (search tomcat)
  ADD target/tesla.war  /usr/local/tomcat/   ( being copied to /usr/local/tomcat)
  CMD [" catalina.sh run]
  CMD sh catalina.sh run    **********************  using this shell form is still going to work, but the danger is that, the reaason for containerization is
to b able to deploy application seamleasly so if u wnt to deploy dis application ontop of a tomcat image n it has been containerixed, it doesnt mk sense to run 
the application process as a child processs
**** so if u join a coy and they are rn their application process using shell form as seen below, thats a big issue n i v to advice them that we cannt be runing
our application as a child process,so we shudnt us shell form bt executable form
Dockerfile_RUN:  
  FROM tomcat:9.0.71-jdk8-corretto-al2   
  ADD target/tesla.war  /usr/local/tomcat/
sh catalina.sh run



2:13:50

FROM ubuntu
RUN mkdir /opt/class30
RUN touch /opt/class30/jobs
ADD . /opt/class30
CMD pwd  
CMD ["echo", "I am rich"]

docker build -t image2 -f Dockerfile_CMD . **** BUild was successful bt the CMD is nt excuted bc CMD instructions are nt executed when ur creating ur image bt
run instruction ar executed when creatin d image
*********if u want to create ur container, the run command ,the CMD instruction wil be executed bt only the last CMD will be executed while when creatin an image 
all the run command wil be executed
###############################i see i can create my image severally ie i can run docker build -t image2 -f Dockerfile_CMD . severally , especially if i
change or add /smt in the docker file


What is difference b/w RUN & CMD?

RUN instructions will be executed while creating a image. 
CMD Instructions will be executed while creating a container.
We can have more than one RUN keyword in a docker file.
All the RUN keywords will be processed while creating an image in the defined order(top to bottom).

Can we have more than one CMD in dockerfile?
Yes you can have. But only the last one/recent one in the order will be proccessed 
while creating a container.


                         (entry point and CMD do the same tin)
ENTRYPOINT --> ENTRYPOINT configures a container that will run as an executable.
           ENTRYPOINT is a command or script that is executed when you run the docker container. (that is executed when creating a container)


Dockerfile_EP:  
FROM ubuntu
RUN mkdir /opt/class30
RUN touch /opt/class30/jobs
ADD . /opt/class30  
ENTRYPOINT ["echo", "I am rich from ENTRYPOINT"]

docker build -t image3 -f Dockerfile_EP
(he first run mkdir lap and cd lap) before he run docker build -t image3 -f Dockerfile_EP

2:25:30
How is ENTRYPOINT different from CMD? .. WHAT IS THE diff btw entrypoint and CMD
1. Both are command instructions executed while creating a container 
2. ENTRYPOINT can't be over riden while we can over ride CMD (as seen below)
the use cases:wher u hv an application and u wnat it to be DynAmic  then use CMD (Ie while running the application u wnat the result to be dynamic, choose CMD)

################# (docker file for image2 has the CMD command while Dockerfile for image3 has the ENTRYPOINT command ) 
so when we run docker run image3, we can see the last command in the docker file bt when we run anoda command docker run image3 pwd , we see its nt executed bc 
EntryPOINT cant be overriden bt when we run ocker run image2 pwd, we see it is executed bc CMD can be overidden

docker@docker:~/web/Laps$ docker run image3
am rich from ENTRYPOINT 
ubuntuddocker:~/web/Laps$
ubuntu@docker:~/web/laps$ docker run image3 pwd
I am rich from ENTRYPOINT pwd
ubuntu@docker:~/web/Laps$ 
ubuntu@docker:~/web/laps$ docker run image2
I am rich
ubuntu@docker:~/web/laps$ docker run image2 pwd
/ 
ubuntu@docker:~/web/laps$
ubuntu@docker:~/web/laps$ docker run image2 whoami
root ******************************** ************************by default, it wil run the container as root user but we can stil change the user
ubuntu@docker:~/web/laps$
ubuntu@docker:~/web/laps$ docker run image3 whoami
I am rich from ENTRYPOINT whoami 
ubuntu@docker:~/web/laps$
ubuntu@docker:~/web/laps$|


ENV --> ENV instruction sets the environment variable and this sets the environment for the subsequent build instructions.
It takes two forms: one with a single variableENV <key> <value> and another with multiple variables ENV <key> =<avlue> <key> = <value>.

*****************we are passing environmental variable
ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH      ***** this is the path to the executables
RUN mkdir -p "$CATALINA_HOME"    ******* a run instruction is been pass here
WORKDIR $CATALINA_HOME

*******************RUN mkdir -p "$CATALINA_HOME" ie we wnt to mk dis dir "$CATALINA_HOME, which is /usr/local/tomcat dir is been created and we use the -p to create both 
the child and the parent dir(i bliv /usr/local) and we ar now stating that the working dir wher our job wil be carried out is:  $CATALINA_HOME


ARG -> ARG Instruction defines a variable that can be passed at build time. Once it is defined in the Dockerfile you can pass with this flag --build-arg while building the 
image. We can have multiple ARG instruction in the Dockerfile. ARG is the only instruction that can precede the FROM instruction in the Dockerfile.

ARG values are not available after the image is built. A running container won’t have access to an ARG variable value00


EX:

ARG TAG=latest
FROM centos:$TAG
docker build -t <image-name>:<tag> --build-arg TAG=centos8 .

                         WE Can see the the wORKDIR: IN docker hub (tomcat overview) in the docker file
WORKDIR --> WORKDIR  is used to define the working directory of a Docker container at any given time. The command is specified in the Dockerfile.It is optional 
(default is / , but base image might have set it), but considered a good practice. Subsequent instructions in the Dockerfile, such as RUN , CMD and ENTRYPOINT will operate
in this dir.
WORKDIR-----   this is used to der wher task will be executed

Ex:

WORKDIR /app


LABEL

The LABEL instruction adds metadata to an image. A LABEL is a key-value pair. To include spaces within a LABEL value, use quotes and backslashes as you would in
command-line parsing. A few usage examples:
e.g to set our branch name

LABEL branch=develop

LABEL description="This text illustrates"


An image can have more than one label. You can specify multiple labels on a single line.

LABEL label1="value1" label2="value2" other="value3"

VOLUME: we wil look at Docker Volume when we get to volume

USER 
The USER instruction sets the user name (or UID) and optionally the user group (or GID) to use when running the image and for any RUN, CMD and ENTRYPOINT instructions that 
follow it in the Dockerfile
ubuntu@docker:~/web/laps$ docker run image2 whoami
root ******************************** by default, it wil run the container as root user but we can stil change the user with d keyword user as well  2:31:22

  
  
EXPOSE: used to der the port the process wil listen on OR the application is going to be running on 

The EXPOSE instruction informs Docker that the container listens on the specified network ports at runtime.

The EXPOSE instruction does not actually publish the port. It functions as a type of documentation between the person who builds the image and the person who runs the 
container, about which ports are intended to be published. To actually publish the port when running the container, use the -p flag on docker run to publish and map one or
more ports.

EXPOSE 8080  

ARG : we can also pass some arguments while tryin to create our containers as well


                                       

                                                  DOCKER BEST PRACTICES

Dockerfile Best practices: 2:32:40
==========================
1. We should use executable over shell form for CMDs and ENTRYPOINTs instructions (so our process will be running as parent process n cant be killed unnoticed)
2. Reduce the number of RUN instructions as much as possible. bc the more the number of layers the lager the image size
   This will reduce the number Layers and keep our images light weight.  bc we expect our images to be light weight
*************play around with this**********************************
https://github.com/landmakTechnology/Dockerfiles

2:37:15:   ALL the run instruction here is not necessary, we can reduce them with the && operator
FROM ubuntu:latest
RUN apt-get -y update && apt-get -y upgrade \
RUN apt-get -y install openjak-8-jak wget
RUN mkdir /usr/local/tomcat
RUN wet http://apachemirror.wuchna.com/tomcat/tomcat-8/v8.5.46/bin/apache-tomcat-8.5.46.tar•gz -0 /tmp/
RUN cd / tmp && tar xvfz tomcat. tar•gz \
    && cp - Rv /tmp/apache-tomcat-8.5.46/* /usr/local/tomcat/
EXPOSE 8080
CMD /us/local/tomcat/bin/catalina. sh run

********************************************************* we can reduce them like this : this wil mk the image to be light weight
FROM ubuntu:latest
RUN apt-get -y update && apt-get -y upgrade \
   && apt-get -y install openjak-8-jak wget \
   &&  mkdir /usr/local/tomcat \
   &&  wget http://apachemirror.wuchna.com/tomcat/tomcat-8/v8.5.46/bin/apache-tomcat-8.5.46.tar•gz -0 /tmp/
   &&  cd / tmp && tar xvfz tomcat. tar•gz \
   &&  cp - Rv /tmp/apache-tomcat-8.5.46/* /usr/local/tomcat/
EXPOSE 8080
CMD /us/local/tomcat/bin/catalina. sh run

3. Use Official/Trusted docker base images in your Dockerfile 
    FROM ubuntu/tomcat  bt mk sure  it is official (can search in dockerhub tomcat , then tag then copy, i can also search for the jboss, ubuntu, alpine etc )

4. Use light weight alpine linux where ever possible  ...its light weight
   https://hub.docker.com/_/alpine
   ubuntu/centos/alpine   (linux distributors)

5. scan images before usage 
     docker scan imageID/Name  
also, in dockerhub, i can enable scanning (in my docker hub repository, in his repository we can see, scanning enabled , to enable go to settings, i cann also enable
webhook : vulnerability reporting so that if ders any vulnerability i wil be alerted
e.g 2;48:50
docker scan image3 .......********************** bt it didnt work 
he pulled nginx in his other system wher he said he already downloaded scanner and it workd 
irrevent ##################i guess we can use or not use the tag ,, therfore, it wil pull the latest  (he just did docker pull nginx and it worked )
then : Docker scan nginx    ...........it worked 

********so i can scan my image using docker scan command n der are some software i can use to enbale scanning in my image registry

(6) Don't install/have unnecassary packages(Softwares) & Don't
   copy unnecassary files & Folders . .. bc that wil create heavy weight images n that wil challenge the purpose of docker 

7) Don't run container process as root user. Start container
   process(Application) as non root user. THen u can always change the user in the docker file

8) Try to Scan images for fulnerabilites(Clair ,Anchor or Trivy or Inbuilt Scaning in amazon ECR: elastic container/GCR: google container/ACR:asure conatiner registry). all
have inbuilt scanning
even dockerhub has inbuilt scanning if ur paying for it, thats why his inbuilt scanning is enabled

????????????????WILL U B charged if u use amazon  ECR
dnt forget that in interview u wont be answering these qiestions like someone who is a student bt one who is working in landmark and 
in landmark project we dnt car eif we ar going to be charged or nt bc the charges cannot b compared to the benefit 

9) Try to use multi Stage Docker files to reduce size of the image where ever it's applicable 
https://github.com/LandmakTechnology/Dockerfiles

10. Keywords should be in uppercase to distinguish it from arguments 


2.55.00
                                         

                                  IT IS DIFFICULT TO WRITE ALL THE STAGES OF THE FILE (Instead use multi stage file)

multi Stage Docker files: 
in this file our target is that we want to :
1. Clone  
2. Build  
3. DeployAsContainer 
****************************** for us to mk this application light weight, we ar going to use a multi Stage Docker files,bt if i dnt want to use multi Stage
Docker files
then ill hv to do smt like this: 
FROM ubuntu:git   (in this ubuntu server, for me clone my code i nid git, so i can download an ubuntu server that has git installed, we can go to ubuntu n 
search d ubuntu that has git with any desired version , remember that we saw that u cud go to dockerhub & search for tomcat that comes with java,jdk with 
any version you want. 
similarly, we can search for ubuntu with our desired git version
after that we need to clone the code 
so we run clone 
WORDIR /home/ubuntu/
******* may also nid to run some command to be able to install maven for e.g git ....bc git is prerequisite for maven to run
RUN clone https://git/repo/webapps \   ( we are running the instruction)
    && cd  webapps
    && mvn install     2.58.15***  if maven is not installed, it means that we shud hv run some command to be able to install maven

 MULTI STAGE DOCKER FILE
 multi stage docker file  :  it has multiple FROM keyword
******************************thistype of docker file wil be very complicated, so we wil use the multi stage docker file for this task 
********************** advicable to use a multi Stage Docker files wherver necessary
e.g for tomcat
FROM tomcat:71-jdk8-corretto-al2   



                                 MULTI STAGE DOCKER FILE
 multi stage docker file  :  it has multiple 'FROM' keyword

EXPLAINING the multi stage file below;
FROM alpine/git as repo, stage1 cloning the code, so frm alpine as repo , stage2 from maven as build; we ar copying wotever is in repo (maven-web-application)
into /app then mvn instal and the final stage we ar deploying the application from tomcat ..........  from build, it will copy the war file in the target dir 
 

                              This IS THE MULTI STAGE FILE FROM HIS REPOSITORY
#git             ** this is stage1
FROM alpine/git as repo  (frm alpine we assigning  a name here as repo)
MAINTAINER mylandmarktech@gmail.com
WORKDIR /app
RUN git clone https://github.com/LandmakTechnology/maven-web-application
  **3.00.5, so we are saying clone this 

#Maven    **stage2, frm maven as build
FROM maven:3.5-jdk-8-alpine as build
WORKDIR /app
COPY --from=repo /app/maven-web-application  /app
RUN mvn install

#Tomcat
FROM tomcat:8.0.20-jre8
#COPY  /app/target/*war /usr/local/tomcat/webapps/maven-web-app.war
COPY --from=build /app/target/*war /usr/local/tomcat/webapps/



                   EXECUTE THE MULTI STAGE DOCKER FILE 
ubuntu@docker:~/web/laps$ vi multi-stageDF                              3:01:00 
docker build -t image4 -f multi-stageDF .   ,, the image was created successfully 
we see the size, i think the size was larger 493mb but he said we gives us a light weight image ... how??
docker images
we see we hv a lot of images that are untagged 
***********************IMAGES without a name or tag are called dangling images

ubuntu@docker:~/web/laps$ docker system prune      **************** it deleted all the dangling images
WARNING! This will remove:
  - all stopped containers
  - all networks not used by at least one container
  - all dangling images
  - all dangling build cache  ........**************** it deleted all the dangling images



3.05.40
#### working on docker files is going to be part of your job, so for u to explain in the interview that ur job includes writing and modifying docker files 
is as gud as thats what u do 
and you making use of these keywords
FROM /COPY/ADD /RUN /CMD /ENTRYPOINT /WORKDIR ENV /LABEL/ARG/USER /EXPOSE /VOLUME/MAINTAINER  
and docker best practices


next class;
Micro-services and Docker networks   
volumes and 
Docker compose  
docker swarm


                                   PREPARING FOR MY PROJECT
3.09.20
*** the purpose of all these is for you to understand how to use docker in your project, we hv a lot of docker files which w ehave used in our project
he wnt to project package in github
for eg, this is spring boot docker, this a key project we are going to be looking it 
this project has a docker file 



                              DEPLOY NODE JS APPLICATION
3:11:25  i hv this nodejs applcation,  this is a public repository ....: https://github.com/LandmakTechnology/nodejs-application
and i hv already  done a build on the application, in this nodjs appl there is a docker file here as well, i have already done a build on this appl
i hv built the application n pushed it to dockerhub 
we hv a few folks that are already working and atimes they want them to work on nodejs application , now once u understand the principle, any application will
not be a big deal for you, like this is a node js appl, i hv this image already on docker hub, but if i needed to build this appl here
let me clone it
gitclone https://github.com/LandmakTechnology/nodejs-application
cd nodejs-application/
ls  ... can see the dockerfile  and other files too
vi docker file .......to see the content
what will this dockerfile do
we have 
FROM node 10
work dir is defined ; WORKDIR /usr/app
COPY.. it will copy all the code & create the package
RUN npm install 
EXPOSE 9981
CMD ["node", "app.js"]   and once you start the appl, the container is running

docker build -t nodeapp .       (i called the image nodeapp)     image built successfully
when i run doxker images, i see the nodeapp 
docker images      nodeapp   TAG: latest
docker run --name wed30 -d -p 3000:9981 nodeapp    .... deployed sucessfully 
we can also access the appl on the browser:3000 

********this is a nodejs appl, it can be containerized, i already have the image in docker hub, so i can jst pull the image frm dockerhub and do the same tin

so to access the application we just built: still in the nodejs-application file in github, we v the app.js file, the application has some context path like 
/landmarktechnologies , thers multiple rest API's wich can be used to access particular end point for the application : thers /html , /jsonData, /landmarktechnologies
this application has been developed by our team of developers and once the application was developed they created some resT API's
http://44.211.75.85:3000/landmarktechnologies
we can also  curl : curl -v 44.211.75.85:3000/html  
3.18.50
if u go to our dockerhub repository, i have a repository for my nodejs appliaction, so if i want to deploy this application, i can equally deploy from the image
that already exists in ther 
docker push mylandmarktech/nodejs-fe-app:tagname
docker run -d -p 30000:9981  mylandmarktech/nodejs-fe-app     ... port 30000 is in the range , if i run that, it will deploy the application but it will pull the image frm
docker hub
***************he ran it and it was succesful so, same application was deployed on port30000 bt the image is pulled frm dockerhub , the same result
although we didnt assign a name, when he run docker ps, we can see docker demon assigned a name: crazy grothendleck

3:21:05   #########  all applications can be deployed using docker ###########################
docker rename : to rename an application

on saturday we will look at micro services & hw we can use netwrk for those appl to communicate with each other



                                         QUESTIONS



QUESTION
do you summarize evrything u nid to define in the dockerfile, inside the application file already, is that why u v only 2lines in the docker file; FROM & COPY ?
ANS:  3:23:45
FOR e.g in doockerhub, this tomcat base image is running on an OS,, Click on the tomcat n select tag, we can search for apline,ubuntu,centos , e.g we search 
alpine, we can see a number of alpine images and for each we can see the tomcat is running on an alpine base image and this means that this wil cm only wit 
the lib that are sufficient for the said tomcat aplication to run althoug a normal OS  wil cm wit all lib and all thats needed
secondly:  if u go tru all our docker files, u wil see docker files with diff number of lines as well, u will see docker files wit more oda configuration also
in dockerhub in overview of tomcat, click on any of the files n we see the content like FROM, env variables

FROM amazoncorretto:8-al2-jdk

ENV CATALINA_HOME /usr/local/tomcat     .. tomcat home dir  defined as : usr/local/tomcat  
ENV PATH $CATALINA_HOME/bin:$PATH   ... path to start tomcat, in d tomcat home dir the command to start tomcat is found in bin, so $CATALINA_HOME/bin ie d path to d commands 
RUN mkdir -p "$CATALINA_HOME"     .... then this home dir is been created "$CATALINA_HOME" wich means  /usr/local/tomcat is being created
WORKDIR $CATALINA_HOME    .....   and the workdir is tomcat

######### so ders no problem here, the main stuff is to undertsnd the principle, onCe i understnad them, i can apply them to multiple environments wil be no 
big deal

3:28:00
######### like someone is saying sonarqube image has a good explanation abt it, so he went to sonaqure page .. 3.27.33
 he said there are going to be diff OS,u ar going to choose the OS u wnt to 
choose bt this sonarsoftware is running on a base image OS 

CAN WE USE VSCODE TO WRITE DOCKERFILE
Yes, and it wil make ur job easy 

IS WRITING OF DOCKERFILES PRIMARILY PART OF MY JOB
yes , docker file is nt coding .... u shud write and be able to modify docker file ,, if  ar given a docker file to work on in an interview, that shud be among the easiest 
interview u can think of

MUST DOCKER FILE START WITH FROM
the only word that can come in front of of FROM is ARG 
ARG 
FROM 

ARG TAG=latest   e.g our argument is to der the tag we wnt to use, we wnt to set set a tag while craeting our image
FROM centos:$TAG
                                                            3:31:50
docker build -t <image-name>:<tag> --build-arg TAG=centos8 .  ************ we can aslo do smt like this ,,, tag is equals to whatever info u want to pass

MUST ALL THE KEYWORDS BE IN CAPITAL 
NO ... but for best practice theyshould

Docker update
can be used to change some settings and parametsr on  running conatiners e.g we can change d memory limit of a container,bc a container can be killed bc of out of memeory 
so we shud be able to modify such parameter so that we can keep our container running

#####u guys dnt nid to freakout, the big issue of docker u can explain it in less than 2minutes in an interview
my experience inclues writing docker files, maintaining docker files, to containerize our applications, we generally have java base application in our envr, 
we run those application on a CI/CD platform and before we run the application , we nid a odcker file to containerize it as part of the CI/CD process , so i am 
task to write and modify docker files and when i do so, i mk use of key Docker words like: FROM for my base image , COPY to copy files from the host to the 
container,RUN to execute commands ,CMD and ENTRYPOINT instruction to execute command while creating d container and it is important for me to make mention tht 
in writing my docker file in our env we mk use of docker file  best practices and these practices that we implement in our env include ensuring that our images 
are light weight and for that to happen, we are adviced nt to download unnecessary packages, nt to copy unnessary files into our containers, nt to use multiple
run instructios, so we use the && instructor as much as possible and that reduces the number of layers and by so doing we are going to be creating light weight
portaBLE images.also we only make use of official images as our base images, so docker official images those are the ones that we choose. in an attempt to keep
our images as light weight as possible, in our env we use alpine images as much as possible bc linux alpine is the lightest OS for linux that u can get bc docker
is intended to be light weight
In Passing our CMD and ENTRYPOINT Instructions, we are using executable form over shell form this will be enable our application process to run as a parent 
process and as such, it cannot be killed unnoticed
We also enabled scanning in our env, such that everytin is autoscanned and if thers any issue, pull REQ are been deployed for us to take remedial action 
*************docker is intended to be light weight bt then u nid to do smt to mk it light weight by making the right choices

WHAT IS SOME OF THE PROBLEMS U HAVE FCAED IN UR ENVR RECENTLY AS A DEVOPS ENGR.
we hv some of our docker files which we hv used to build and deploy applications and we had issues wher  applications were failing, endusers were complaining,
so i had to TS , ha sto check hw the docker files were written and i realized that our CMD were been passed in shell form and as a result, the applications 
process were been killed unnoticed and i quickly modify the dockerfile, changed it from shell form to executable form such that the application will run as a
parent process. 

there are some things u are going to explain, that will be the end of the interview , they wil knw that u knw, bc ther are some intricacies that somebody who is at work
whose hands are dirty like yours, u ar going to be making mention of them n they will knw this guy his hand is really dirty when it come sto containerization 
with docker




