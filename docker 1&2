containerization, docker ... virtualization  ... read powerpoint script

to deploy application, we nid systems to mange the deployment, so either i geta  physical system, it comes wit harddrive/RAM, then on this physical/hardware system we
install operating sys in the software componant,  e.g of Op system :windowns, linux,,, for the instalation we nid we ill nid some storage like database wher we ll hv all dis
  inatalled and the storage wil  be captured in the harddrive.. on the storage we v our application running and on the op sys we ar able to deploy our application
  the op comes with the bin dir wher d commands ar found,opt,sbin etc dir bt what is very imp is the bin dir.. on the op sys we v our application deployed n running like 
  dbase appl etc n this is called traditional deployment of application and with dis traditional approach we ar heavily depending on a physical sys, physical sys ar used
  from dis we move to virtualization
  
  7:59 VIRTUALIZED DEPLOYMENT  ... XEN IS an hypervisosr e.g is EC2 INSTANCE VM 
ON THE PHYSICALsys we already hv, we ar able to create a virtual sys and we ll nid a hypervisor, on the op we install the hpervisor e.g virtual box,hyperV/xen/vmware 
  this are sofwares that can permit to host a virtual sys on a phy sys like laptop, servers, or even in the cloud
  e.g of a physical sys is the laptop wit any of the op sys running on it ,, then we instal a guest op sys, we wnt to deploy our appl so we create virtual machines on d 
    phy sys .. e.g on our laptop the  windows op sys is the host oS  ,, on th host oS i can install a guest OP sys like ubuntu and it wil cm wit its own binaries & lib files
  so in the guest op we assign 8GB ,,, it is possible to v a guest op sys on the phy sys .. wit the help of softwares called hypervisor... i can v as many guest sys on the 
  host sys e.g centos, windows2019, ,,on the guest systems i can deploy my appl or multiple web appl 
  but in the traditional approach all the application wil be installed on jst one op sys and the disadv is that ders no isolation, if ders a problem in one appl it is 
  possiblre to affect the others bt with virtualized approach we ar able to isolate 
  trad was very common right uo to the 1980s and virtualized deployment ihas been used7 right up to the 2000s

  thers a more powerful approach called containers,
 CONTAINERS its very common today
CONtainers ar  dynamic bc it is nt tied to any infrastructure , can run on any computer, infrastructure n cloud 
it mean dercan b an aplica tht can only be deployed on a particualar op sys b4 it can run bt containers can run on any op sys bt containers does nt req an entire guest sys

  so again we hv an op sys that comes wit bin files n lib, running on a phy sys ,, before deploying any appl we install a containerization software and genrally its docker
18:00  ders ar others as well,, we ar now able to deploy our appl as containers ,, appl are nt deployed in virtual machines bt as containers, light weight conatiners  
e.g  we hv 90 containers deployed and are running, the appl does nt req an entire guest sys.. e.g d appl size can be for appl 1 ;cpu 400mb n memory of 32mb n its light 
  weight compared to virtualized

  d virtualized nid an entire guest op sys wich comes wit its own file n lib bt for containerisation, al d containers share d kernel e.g lib n binary file, so virtualzation
  doesnt require a guest sys
  therfore ths virtualized system has a faster start time to install, it starts up very fast like a cheetah n the integration is very easy than virtualization

*********8READ UP POWER POINT SCRIPT

OPTIONS TO USE FOR DEPLYMENT

 1) Traditional/Physical Deployment
 2) Virtualized Deployment (Hardware level Isolation) 
 3) Containerized Deployment(OS/Process level Isolation)


  
Docker 
======
7 years Experience in IT and DevOps:
How applications were deployed in the past and today:
1.  1990S --- 10 years 
2.  2000S ---   CAN claim 7yrs working xperience
3.  TODAY  

 
====================================
Docker -- Is a containerization software use to create, build
          ship and deploy applications as containers
            Build applications  
            ship applications  
            deploy applications  

IQ: How many environment are you supporting in your CURRENT role??
         Development environment    
         Testing/QA environment    
         Production environment 
In docker applications run as containers   
******33:07 .. e.g we v repos in git hub we wnt to deploy tonthe dev env using our vm/ec2 instances, on the instance, if i wnt to instal tomcat i v to first install all its
dependencies java then once the tomcat is installed i v my appl running
then to the test env, the same task is been done , lots of repitition and the same in production
bt ders the possiblity that smt is workiing in in one stg bt its nt working in the oda n dev can tell u its working in dev env bt when u tk it to prod its nt working n dis
a serious problem
we mk use of containers to resolve or avoid all dis issues

Containers --> contains everything required for an application to run create or evry tin req for appl to run 
               (App Files (code), Dependencies 
              (Softwares +Libraries), ENV vars & Other Configuration files) 
              which is required for a piece of application/process to run.
          app.war   -----> can be deployed ina  Virtual Machine  n in the vm 
                           java and Tomcat installed and configured  


   app code     = app.war + 
for a java web app to be deployed
   Dependencies = tomcat9 + openjdk11+

   app code     = app.ear + 
for a ear app, we nid
   dependencies = openjdk11+ + jboss/wildFly 

   for standalone app , we nid 
app code     = app.jar + 
   dependencies = java1.8+    

 *****now the quetsion is whta can be done to be able to package d appl plus its dependencies n kip such dat if i wnt to deploy d appl all i hv to do is ship the app to 
the deployment enev and it come swit the dependencies alreday packgedmening ders nid going to the dev enev n carry out conf, test n run , wecan easily ship dis appli
how can we mk this process simplified?
therefore we will be usisng :
Containerization Software/Runtime --> : with this we can package an appl code plus its dependencies
 these ar the dif dockerization software
Docker, = over 80% usage , in the industry, it has the most level of trust
  Rocket, 
  Pod man, 
  CRI-O, 
  Core-OS,
  Container-D. 

Docker:  
  Is a containerization multi-platform software use to;    
  create, build, ship, share and deploy containerize applications  

O.S --> Cross Platform (Docker can be installed in any O.S)
        Docker Can Be Installed on Linux, Windows OS, macOS  
        Desktops as well as servers.

Docker is available in 2 Editions:

 1) Docker CE: --> Community Edition (Free to use)
 2) Docker EE: --> Enterprise Edition (Commercial/Licensed)
     EE is the docker CE+ is
     ---
      1) Vendor Support = docker.io 
      2) Additional Features like DTR (Docker Trusted Registry),
      3) UCP (Universal Control Plane) GUI. for docker 
der ar diff options for installing docker

Docker is developed in Go Lang/Go Language. 

Docker Desktop (Local Laptops/Desktops) --> ,,, this link can be use to install docker desktop 
https://docs.docker.com/engine/install/#desktop
  Developers/DevOps Engineers Systems

Linux Flavors :we can install docker on esp CE 
 CentOS
 Amazon Linux
 Red Hat   : nt for docker CE 
 Ubuntu
 Debian
 Fedora
 SUSE Linux â€¦etc.
 
Officially, Docker CE is not supported for Red Hat. 

**** go tru the power point note,,, advantgaes of docker
Install Docker on  Ubuntu
###########################
#!/bin/bash
sudo apt update -y
sudo apt install docker.io -y
sudo service docker start
sudo docker info
sudo hostnamectl set-hostname docker 
sudo usermod -aG docker ubuntu
sudo su - ubuntu    

#apt or apt-get is package manager for ubuntu /debian systems
#yum and dnf are package managers for redhat systems
 

 # Amazon Linux
###########################
sudo yum update -y    
sudo yum install docker -y
sudo service docker start
sudo usermod -aG docker ec2-user
sudo su - ec2-user

NB:
Add Regular users to docker group for them to run docker commands/tasks  
sudo usermod -aG docker <username>

ex:the users can be 
sudo usermod -aG docker ec2-user
sudo usermod -aG docker ubuntu   
sudo usermod -aG docker simon   

during installation, bc he commented ..#sudo usermod -aG docker ubuntu.. ie to add ubuntu user to the docker grp 
after docker installation, he ran.. docker ps ..without sudo bt permision denied 
 then we run this command as root user ..sudo docker ps: to check containers that are running, and we got a response
bt for automation, we add ubuntu to the docker grp... sudo usermod -aG docker ubuntu and change the shell
if we check id ubuntu, can see its in the the docker grp 
and when we run docker ps we get a response

Ticket011:
  Containerise the java based application in the SCM repository below;  
  https://github.com/LandmakTechnology/maven-web-application

Content:.. of the application 
  source code      = src/main/app.java    
  JUNitTestCases   = src/test/appTest.java  
  build script     = pom.xml 
  Dockerfile :
we can also v jenkins and other files

******the docker file contains 2key words FROM and COPY
    FROM tomcat:8.0.20-jre8
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war   
what the from & copy means is that this docker file is goin to b  copying some war files in the target dir n t wil deploy it as app.war
with thw help of the docker file, we can create a docker image

Docker Image: --> It's a package which contains
                 everything (+Application Code + Libraries, Softwares+ENV)
                 needed to run your application.

Ticket011:
  Containerise the java based application in the SCM repository below;  
  https://github.com/LandmakTechnology/maven-web-application

**************1:09:00 ***** to containerise this appliction
1) we clone the repository
git clone https://github.com/LandmakTechnology/maven-web-application
ls
rename .... mv maven-web-application/ web
ls
cd web/
vi docker file and delete all except the 2lines ofcode FROM&COPY and change maven-web-application to tesla.war
THE KEYWORD *FROM IS used to get the base image and the base image comes from some softwaers smoe depencies that are req forthe appl to run .. nomrlaly, we deploy web app
in the web apps dir
my base image is tomcat:8.0.20-jre8 ,, so i nid tomcat for my appl to run ,, so my teslar web app depends on this base image


  Dockerfile :
    FROM tomcat:8.0.20-jre8    ......so tomcat:8.0.20-jre8 ... this is the tag
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war  
***** so we hv tomcat 8.0.20 and java runtime 8

so we wnat to build our image and the command is  
  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla .  

we wnt to build our image, the command is docker build, + so i give a name to my image called telsa image, what version:version 1
am building frm a file , the file is called docker fileand its found in /home/ubuntu/web,,...wher am i building, docker build image 1




Docker containers: Run time instance of a docker image. 
     If you execute: docker run, 
     a container is created from the image 

 1:14:00  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla . 
 docker build -t teslaimage:1 -f Dockerfile . (since am located in the web dir i could jst do a .,ie my docker file is found in my pwd
 docker build -t teslaimage:1 . (the . means its building frm d docker file bc d defaut name for doecker file is docker file bt if am using a dif name e.g 
docker build -t teslaimage:1 -fdockerfile-tesla then i must pas the -f option bt if am using docker file wich is d default name i cna decisde nt to pass the -f option


so my file is docker file so i can execute this command like this: docker build -t teslaimage:1 
we wnt to build an image ,, bt lookingat this image,my docker file says copy  the war file frm the target dir and move it to web...
so we wnt to create an image and wit the docker file an image can be created


1:14:44 continuing frm the steps above
2) to build the image:     docker build -t teslaimage:1 . 

docker build -t, i wnt to attach a tag to my image :teslaimage: version 1 and my docker file is found in my current working dir 
docker build -t teslaimage:1 .
####it downloaded bt it cant find the file so the copying failed, 
when we ...  ls ,, we cant see the target dir and we nid to copy a file frm the target dir that ends wit .war...
 COPY target/*.war /usr/local/tomcat/webapps/tesla.war  
the target dir means we v created the packages
3)mvn package , sudo apt instal maven .. if it says mvn not found
ls target and now our artifact has been creted ... teslar.war
cat Dockerfile and see ,, a very simple  file ,, this file has 2lines .. it wants to get (FROM tomcat:8.0.20-jre8) which is the base image 
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war    
if i excecute ...docker build -t teslaimage:1 .) we can see dat we v done a build and it shows successful
###we can exceute ....docker images) we can see hw the imgae v been created and its size 
  
   #####  Dockerfile : ....... so wit the help of this file,we created an image called telsa1
      FROM tomcat:8.0.20-jre8
     COPY target/*.war /usr/local/tomcat/webapps/tesla.war    ,, so wit the help of this file,we created an image called telsa1

ubuntu@docker:~/web$ docker images
REPOSITORY   TAG           IMAGE ID       CREATED          SIZE
teslaimage   1             13e31c5e87ff   14 seconds ago   498MB
tomcat       8.0.20-jre8   e88a065848be   8 years ago      493MB ... this the base image wit this tag >>jre8. d image has the dependencies for this application to run 





Docker Image: --> It's a package which contains
                 everything (+Application Code + Libraries, Softwares+ENV)
                 needed to run your application. ... it is shippable

Docker containers: Run time instance of a docker image. 
     If you execute: docker run, 
     a container is created from the image 


*****1:20:26  lets do docker run...  ie to create containers
4)docker run -d -p 80:8080 --name webapp teslaimage:1

we wn to deploy this application.. docker run , -d for detachable conatiner ,-p for port forwarding , port 80: marked to port 8080,wich is the port for tomcat
i wnt to deploy my appli and i can attach a name to my application (name webapp 0r tesla), so am deploying dis appl frm this image that has a tag as 1, bc docker
container is a runtime instance of a docker image 
so if i execute dis command:  docker build -t teslaimage:1 .  my webapp container wil be created frm dis docker image 

 after running dis : docker run -d -p 80:8080 --name webapp teslaimage:1
if i execute docker ps , i hv a container running 
to check if the application is running , curl public ip/tesla
can also paste the public ip in the browser n can see the tesla application has been deployed  successfully using containers

****also yes i can deploy multiple containers frm one image
i wnt to deploy anoda application

1:23:40 when u execute docker run dis is what happens 

docker run --name app -d -p 8000:8080 --name webapp teslaimage:1  ,, frm dis same image we can deploy billon of containers $ it can b deployed by diff persons if 
you mk the image became distributable 

docker run --name containerName -d -p hostPort:containerPort image:tag
  -d = detachable mode  
  -p = port Forwarding


  ****** 1:25:00 to deploy a 2nd conatiner using the d same image 
docker run --name app -d -p 8080:8080 --name webapp teslaimage:1  .. 2 containers cannot v the same host port number& name  , bt can v the same conatainer num

*** to deploy a 3rd conatiner docker run --name app -d -p 8000:8080 --name webapp teslaimage:1 ... here d port was changed to 8000

run docker ps and we v 3 containers running ,, so we can de














ubuntu@docker:~/web$ docker images
REPOSITORY   TAG           IMAGE ID       CREATED          SIZE
teslaimage   1             13e31c5e87ff   14 seconds ago   498MB
tomcat       8.0.20-jre8   e88a065848be   8 years ago      493MB ... this the base image wit this tag >>jre8... has the dependencies for this application to run 

  docker run --name webapp -d -p 80:8080    teslaimage:1  
  docker run --name app    -d -p 8080:8080  teslaimage:1 
  docker run --name myapp  -d -p 8000:8080  teslaimage:1  
  docker run --name nginx  -d -p 9000:80    nginx:latest    

   http://3.22.217.29:80/tesla/
   http://3.22.217.29:8080/tesla/
   http://3.22.217.29:8000/tesla/
   http://3.22.217.29:9000 

docker run --name containerName -d -p hostPort:containerPort image:tag 
  -d = detachable mode  
  -p = port Forwarding 

Docker Registry:
1. DockerHub public [80% usage]
2. DTR 
3. AmazonECR 
4. Nexus/
5. JFrog

dockerhub.io  
Create an account and a repository
docker push markwellams/tesla-web-app:tagname

Ticket012:
  Create and share a docker image   

docker architechture:
  - docker client - docker cli = The command line utility for docker   
      docker build
      docker tag  
      docker images  
      docker run    
  - docker Registry - Where docker images are stored and distributed    
  - docker engine - Use by the docker service to execute tasks  

 docker pull mylandmarktech/tesla:1

 docker run --name containerName -d -p hostPort:containerPort image:tag 
 docker run --name myapp -d -p 7000:8080  mylandmarktech/tesla:1 
 docker run --name app   -d -p 8080:8080  teslaimage:1
 docker run --name hello -d -p 80:80    mylandmarktech/hello   
  
  http://3.22.217.29  
  curl -v 3.22.217.29:7000/webapp   = http://3.22.217.29:7000/tesla  
  curl -v 3.22.217.29:8080/tesla
  curl -v 3.22.217.29:80 or curl -v 3.22.217.29

  11am - 2pm
