containerization, docker ... virtualization  ... read powerpoint script
script for build and deployment process


Docker 
======
7 years Experience in IT and DevOps:
How applications were deployed in the past and today:
1.  1990S --- 10 years 
2.  2000S ---   CAN claim 7yrs working xperience
3.  TODAY  


QUESTIO .. 2:27:00
is docker a replacement for tomcat
no its nt , its a newer version to deploy appl by containerizing the appl including the appl code n all its components ,, with docker u can deploy any type of appl including
python,nodejs, tomcat, docker can containerize any form of apllication

*********************************************************************************************************************************************



START

OPTIONS TO USE FOR DEPLYMENT, DIFF BTW VIRTUALIZED DEPLOYMENT & TRADITIONAL, CONTAINERS, VIRTUAL MACHINES vs CONTAINER, APPL RUN AS CONTAINERS,CONTAINERS HAVE ALL THE REQUIRED DEPENDENCIES,  DOCKER, ADVANTAGES OF DOCKER,
CONTAINERIZATION SOFTWARE RUNTIME,  INSTALL DOCKER ,CONTAINERIZE APPLICATION, DOCKER FILE, DOCKER IMAGE, STEPS FOR CONTAINERIZATION, BUILD IMAGE, INSTALL MAVEN, DOCKER RUN(CREATE CONTAINERS/DEPLOY),
2 CONTAINERS FROM THE SAME IMAGE CANT HV THE SAME HOST PORT NUMBER& NAME BT CAN HV THE SAME CONTAINER NAME, CAN I DEPLOY A CONTAINER FRM AN IMAGE I DID NOT CREATE, ACCESS MY APPLICATION, DOCKER REGISTRY,  DOCKERHUB.io,  
CREATE & SHARE DOCKER IMAGE, DOCKER ARCHITECTURE,  RUN CONTAINER WITH PULLED IMAGE.




developers commit their code in github , while in docker they mostly use docker hub

******1.38.00, dockerhub.io  ... docker is the worlds easiest way to create mange and deliver your teams conatiner applications 
you can Create an account and a repository or jst cm here to explore 

**********ENTRY POINT**** DOCKER 5&6 interview





OPTIONS TO USE FOR DEPLOYMENT

 1) Traditional/Physical Deployment                                                                        ie virtual box
 2) Virtualized Deployment (Hardware level Isolation) **me** requires a structure ie an entire guest op system-->each virtual machine includes the app, the 
necessary binaries & libraries
 3) Containerized Deployment(OS/Process level Isolation) **me** not tied to a specific structure, containers run on any computer, infrastructure & cloud.


to deploy application, we nid systems to mange the deployment, so either i geta  physical system, it comes wit harddrive/RAM, then on this physical/hardware system we
install operating sys in the software componant,  
e.g of Op system :windowns, linux,,, for the instalation we nid we ill nid some storage like database wher we ll hv all dis
  inatalled and the storage wil  be captured in the harddrive.. on the storage we v our application running and on the op sys we ar able to deploy our application
  the op comes with the bin dir wher d commands ar found,opt,sbin etc dir bt what is very imp is the bin dir.. on the op sys we v our application deployed n running like 
  dbase appl etc n this is called traditional deployment of application and with dis traditional approach we ar heavily depending on a physical sys, physical sys ar used
  from dis we move to virtualization


  7:59 DIFF BTW VIRTUALIZED DEPLOYMENT & TRADITIONAL ... XEN IS an hypervisosr e.g is EC2 INSTANCE VM 
ON THE PHYSICAL sys we already hv, we ar able to create a virtual sys and we ll nid a hypervisor, on the op we install the hpervisor e.g virtual box,hyperV/xen/vmware 
  this are sofwares that can permit to host a virtual sys on a phy sys like laptop, servers, or even in the cloud
  e.g of a physical sys is the laptop wit any of the op sys running on it ,, then we instal a guest op sys, we wnt to deploy our appl so we create virtual machines on d 
    phy sys .. e.g on our laptop the  windows op sys is the host oS  ,, on th host oS i can install a guest OP sys like ubuntu and it wil cm wit its own binaries & lib files
  so in the guest op we assign 8GB ,,, it is possible to v a guest op sys on the phy sys .. wit the help of softwares called hypervisor... i can v as many guest sys on the 
  host sys e.g centos, windows2019, ,,on the guest systems i can deploy my appl or multiple web appl 
  but in the traditional approach all the application (guest op)wil be installed on jst one op sys and the disadv is that ders no isolation, if ders a problem
in one appl it is possible to affect the others bt with virtualized approach we ar able to isolate 
  traditional was very common right uo to the 1980s and virtualized deployment has been used right up to the 2000s


          CONTAINERS
  thers a more powerful approach called containers,
 CONTAINERS its very common today
CONtainers ar  dynamic bc it is nt tied to any infrastructure , can run on any computer, infrastructure n cloud 
it mean there can b an aplication tht can only be deployed on a particular op sys before it can run bt containers can run on any op sys bt containers
does nt req an entire guest system.

  so again we hv an op sys that comes wit bin files n lib, running on a phy sys ,, before deploying any appl we install a containerization software and genrally its docker
18:00  ders ar others as well,, we ar now able to deploy our appl as containers ,, appl are nt deployed in virtual machines bt as containers, light weight conatiners  
e.g  we hv 90 containers deployed and are running, the appl does nt req an entire guest sys.. e.g d appl size can be for appl 1 ;cpu 400mb n memory of 32mb n its light 
  weight compared to virtualized

  when it comes to virtualization, we are using virtual boxes
The virtualized nid an entire guest op sys wich comes wit its own file n lib bt for containerisation, all d containers share d kernel e.g lib n binary file, so virtualzation
  doesnt require a guest system
 23.45 therfore the containerized system/infrastructure has a faster start time to install, it starts up very fast like a cheetah n the integration is very 
easy than virtualization

25.16 VIRTUAL MACHINES: each virtual machine includes the app, the necessary binaries & libraries & an entire guest op system
while
CONTAINERS  :include the app & all its dependencies but share the kernel with other containers
run as an isolated process in userspace on the host OS
not tied to any specific infrastructure; containers run on any computer, infrastructure & cloud.


VIRTUAL MACHINES vs CONTAINER
27.16*********8READ UP POWER POINT SCRIPT



                                            APPLICATIONS RUN AS CONTAINERS 

In docker applications run as containers   
******33:07 .. e.g we v repos in git hub we wnt to deploy tonthe dev env using our vm/ec2 instances, on the instance, if i wnt to instal tomcat i v to first install all its
dependencies java then once the tomcat is installed i v my appl running
then to the test env, the same task is been done , lots of repitition and the same in production
bt ders the possiblity that smt is workiing in in one stg bt its nt working in the oda n dev can tell u its working in dev env bt when u tk it to prod its nt working n dis
a serious problem
we mk use of containers to resolve or avoid all dis issues

Containers --> contains everything required for an application to run create or evry tin req for appl to run 
               (App Files (code), Dependencies 
              (Softwares +Libraries), ENV vars & Other Configuration files) 
              which is required for a piece of application/process to run.
          app.war   -----> can be deployed in a  Virtual Machine  n in the vm 
                           java and Tomcat installed and configured  

   app code     = app.war + 
for a java web app to be deployed
   Dependencies = tomcat9 + openjdk11+

   app code     = app.ear + 
for a ear app, we nid
   dependencies = openjdk11+ + jboss/wildFly 

   for standalone app , we nid 
app code     = app.jar + 
   dependencies = java1.8+    



             CONTAINERS HAVE ALL THE REQUIRED DEPENDENCIES 
 *****now the quetsion is what can be done to be able to package d appl plus its dependencies n kip such dat if i wnt to deploy d appl all i hv to do is ship the app to 
the deployment env and it comes wit the dependencies already packged meaning ders no nid going to the dev enev n carry out conf, test n run , we can easily ship dis appli
how can we mk this process simplified?
therefore we will be usisng :
Containerization Software/Runtime --> : with this we can package an appl code plus its dependencies
 these ar the dif dockerization software
Docker, = over 80% usage , in the industry, it has the most level of trust
  Rocket, 
  Pod man, 
  CRI-O, 
  Core-OS,
  Container-D. 

                                     DOCKER

Docker:  
  Is a containerization multi-platform software use to;    
  create, build, ship, share and deploy containerize applications  

O.S --> Cross Platform (Docker can be installed in any O.S)
        Docker Can Be Installed on Linux, Windows OS, macOS  
        Desktops as well as servers.

Docker is available in 2 Editions:

 1) Docker CE: --> Community Edition (Free to use)
 2) Docker EE: --> Enterprise Edition (Commercial/Licensed)
     EE is the docker CE+ is
     ---
      1) Vendor Support = docker.io 
      2) Additional Features like DTR (Docker Trusted Registry),
      3) UCP (Universal Control Plane) GUI. for docker 
42.00 der ar diff options for installing docker

Docker is developed in Go Lang/Go Language. 

Docker Desktop (Local Laptops/Desktops) --> ,,, this link can be use to install docker desktop 
https://docs.docker.com/engine/install/#desktop
https://docs.docker.com/desktop/setup/install/windows-install/
  Developers/DevOps Engineers Systems

Linux Flavors :there are diff linux flavors ie Linux distributors we can install docker on particularly the docker Community Edition 
 CentOS
 Amazon Linux
 Red Hat   : nt for docker CE 
 Ubuntu
 Debian
 Fedora
 SUSE Linux â€¦etc.
 
43.06***** Officially, Docker Community Edition is not supported for Red Hat. 
****me*** **from linux1 linux distributors, can also be called linux flavors
***meee** AWS2, Ec2 basic;  Computer vs  Aws-Ec2
                             OS      |  AMI (OS + Additional Softwares)



44.06                                                              ADVANTAGES OF DOCKER
**** go tru the power point note,,, advantgaes of docker

1) Rapid application deploymeny
2) portabilty across machines
3) version control and component reuse
4) sharing
5)light weight footprint & minimal overhead
6) simplified maintenance


50.07                                            INSTALL DOCKER 

TICKET
49.30 Script to Install Docker on  Ubuntu    ***46.57... ubuntu supports docker installation, we select it as the AMI/OS for the instance in AWS
###########################
#!/bin/bash
sudo apt update -y
sudo apt install docker.io -y
sudo service docker start
sudo docker info
sudo hostnamectl set-hostname docker 
sudo usermod -aG docker ubuntu
sudo su - ubuntu    

#apt or apt-get is package manager for ubuntu /debian systems
#yum and dnf are package managers for redhat systems
 

49.30  script for amazon linux
 # Amazon Linux
###########################
sudo yum update -y    
sudo yum install docker -y
sudo service docker start
sudo usermod -aG docker ec2-user
sudo su - ec2-user

NB:
Add Regular users to docker group for them to run docker commands/tasks  
sudo usermod -aG docker <username>

ex:the users can be 
sudo usermod -aG docker ec2-user
sudo usermod -aG docker ubuntu   
sudo usermod -aG docker simon   

59.35  during installation, bc he commented ..#sudo usermod -aG docker ubuntu.. ie to add ubuntu user to the docker grp 
after docker installation, he ran.. docker ps ..without sudo bt permision denied 
 then we run this command as root user ..sudo docker ps: to check containers that are running, and we got a response
bt for automation, we add ubuntu to the docker grp... sudo usermod -aG docker ubuntu  in the instalation script 
but if its the line is commented during installation then after installation you change the shell ie sudo su - ubuntu
if we check id ubuntu, can see its in the the docker grp 
and when we run docker ps we get a response

QUESTION 2:26:00
the recommended option is nt to run chmod bt to add the user to the manager grp
if u wnt any user  to run docker commands then the user should hv sudo access bt its a vulunerability to grant sudo access to anyone just to run docker commands so in our
env we add the user to the docker grp with dat the user doesnt nid sudo access to run docker command 


                            
1.05.00                                                           CONTAINERIZE APPLICATION
Ticket011:
  Containerise the java based application in the SCM repository below;  
  https://github.com/LandmakTechnology/maven-web-application

Content:.. of the application 
  source code      = src/main/app.java    
  JUNitTestCases   = src/test/appTest.java  
  build script     = pom.xml 
  Dockerfile :
we can also v jenkins and other files

                                                      DOCKER FILE

******the docker file contains 2key words FROM and COPY
    FROM tomcat:8.0.20-jre8
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war   
what the from & copy means is that this docker file is goin to b  copying some war files in the target dir n t wil deploy it as app.war
with thw help of the docker file, we can create a docker image



                                                                 DOCKER IMAGE
Docker Image: --> It's a package which contains
                 everything (+Application Code + Libraries, Softwares+ENV)
                 needed to run your application.


 
                                          STEPS FOR CONTAINERIZATION
Ticket011:
  Containerise the java based application in the SCM repository below;  
  https://github.com/LandmakTechnology/maven-web-application

STEP1 ; CLONE THE REPO
**************1:09:00 ***** to containerise this appliction
1) we clone the repository
git clone https://github.com/LandmakTechnology/maven-web-application
ls
rename .... mv maven-web-application/ web
ls
cd web/
vi docker file and delete all except the 2lines ofcode FROM&COPY and change maven-web-application to tesla.war (i bliv dats d name of d image we clone)
THE KEYWORD *FROM IS used to get the base image and the base image comes from some softwaers smoe depencies that are req forthe appl to run .. nomrlaly, we deploy web app
in the web apps dir
my base image is tomcat:8.0.20-jre8 ,, so i nid tomcat for my appl to run ,, so my teslar web app depends on this base image


  Dockerfile :
    FROM tomcat:8.0.20-jre8    ......so tomcat:8.0.20-jre8 ... this is the tag
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war  
***** so we hv tomcat 8.0.20 and java runtime 8



STEP2; BUILD
1.12.17                                   BUILD IMAGE
so we wnat to build our image and the command is  
  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla .  

we wnt to build our image, the command is docker build, + so i give a name to my image called telsa image, what version:version 1
am building frm a file , the file is called docker fileand its found in /home/ubuntu/web,,...wher am i building, docker build image 1



                                         
Docker containers: Run time instance of a docker image. 
     If you execute: docker run, 
     a container is created from the image 

 1:14:00  docker build -t teslaimage:1 -f Dockerfile /home/ubuntu/web/  
  docker build -t teslaimage:1 -f Dockerfile-tesla . 
 docker build -t teslaimage:1 -f Dockerfile . (since am located in the web dir i could jst do a .,ie my docker file is found in my pwd
 docker build -t teslaimage:1 . (the . means its building frm d docker file bc d defaut name for doecker file is docker file bt if am using a dif name e.g 
docker build -t teslaimage:1 -fdockerfile-tesla then i must pas the -f option bt if am using docker file wich is d default name i cna decisde nt to pass the -f option


so my file is docker file so i can execute this command like this: docker build -t teslaimage:1 
we wnt to build an image ,, bt lookingat this image,my docker file says copy  the war file frm the target dir and move it to web...
so we wnt to create an image and wit the docker file an image can be created


1:14:44 continuing frm the steps above
2) to build the image:     docker build -t teslaimage:1 . 

docker build -t, i wnt to attach a tag to my image :teslaimage: version 1 and my docker file is found in my current working dir 
docker build -t teslaimage:1 .
####it downloaded bt it cant find the file so the copying failed, 
when we ...  ls ,, we cant see the target dir and we nid to copy a file frm the target dir that ends wit .war...
 COPY target/*.war /usr/local/tomcat/webapps/tesla.war  
the target dir means we v created the packages


   STEP3; INSTALL MAVEN
3)mvn package , sudo apt instal maven .. if it says mvn not found
ls target and now our artifact has been created ... teslar.war
cat Dockerfile and see ,, a very simple  file ,, this file has 2lines .. it wants to get (FROM tomcat:8.0.20-jre8) which is the base image 
    COPY target/*.war /usr/local/tomcat/webapps/tesla.war    
if i excecute ...docker build -t teslaimage:1 .) we can see dat we v done a build and it shows successful
###we can exceute ....docker images) we can see hw the imgae v been created and its size 
  
   #####  Dockerfile : ....... so wit the help of this file,we created an image called telsa1
      FROM tomcat:8.0.20-jre8
     COPY target/*.war /usr/local/tomcat/webapps/tesla.war    ,, so wit the help of this file,we created an image called telsa1

ubuntu@docker:~/web$ docker images
REPOSITORY   TAG           IMAGE ID       CREATED          SIZE
teslaimage   1             13e31c5e87ff   14 seconds ago   498MB
tomcat       8.0.20-jre8   e88a065848be   8 years ago      493MB ... this the base image wit this tag >>jre8. d image has the dependencies for this application to run 





Docker Image: --> It's a package which contains
                 everything (+Application Code + Libraries, Softwares+ENV)
                 needed to run your application. ... it is shippable

Docker containers: Run time instance of a docker image. 
     If you execute: docker run, 
     a container is created from the image 




STEP4; DOCKER RUN/DEPLOY
*****1:20:26  lets do docker run...  ie to create containers
4)docker run -d -p 80:8080 --name webapp teslaimage:1

we wn to deploy this application.. docker run , -d for detachable conatiner ,-p for port forwarding , port 80: marked to port 8080,wich is the port for tomcat
i wnt to deploy my appli and i can attach a name to my application (name webapp 0r tesla), so am deploying dis appl frm this image that has a tag as 1, bc docker
container is a runtime instance of a docker image 
so if i execute dis command:  docker build -t teslaimage:1 .  my webapp container wil be created frm dis docker image 

 after running dis : docker run -d -p 80:8080 --name webapp teslaimage:1
if i execute docker ps , i hv a container running 
to check if the application is running , curl public ip/tesla
can also paste the public ip in the browser n can see the tesla application has been deployed  successfully using containers

****also yes i can deploy multiple containers frm one image
i wnt to deploy anoda application

1:23:40 when u execute docker run dis is what happens 

docker run --name app -d -p 8000:8080 --name webapp teslaimage:1  ,, frm dis same image we can deploy billon of containers $ it can b deployed by diff persons if 
you mk the image became distributable 

docker run --name containerName -d -p hostPort:containerPort image:tag
  -d = detachable mode  
  -p = port Forwarding



 2 CONTAINERS FROM THE SAME IMAGE CANT HV THE SAME HOST PORT NUMBER& NAME BT CAN HV THE SAME CONTAINER NAME

  ****** 1:25:00 to deploy a 2nd conatiner using the d same image 
docker run --name app -d -p 8080:8080 --name webapp teslaimage:1  .. 2 containers cannot v the same host port number& name  , bt can v the same conatainer num
host port 80 and container port: 8080 and it doesnt change
host port must change ie we hv to choose a port nmuber for each contaoiner but container port is nt changing

*** to deploy a 3rd conatiner docker run --name app -d -p 8000:8080 --name webapp teslaimage:1 ... here d host port was changed to 8000

run docker ps and we v 3 containers running ,, so we can deploy multiple applications wit the same image 

observing this deployment, we didnt change the container port 80:8080
##### docker run --name webapp -d -p 80:8080    teslaimage:1 
  docker run --name app    -d -p 8080:8080  teslaimage:1 
  docker run --name myapp  -d -p 8000:8080  teslaimage:1  
  docker run --name nginx  -d -p 9000:80    nginx:latest    



                   **** CAN I DEPLOY A CONTAINER FRM AN IMAGE I DID NOT CREATE  *** ME, yes... it will pull it from the appropriate repo/lib
****** if we dnt write the tag of the image as we didnt, it wil choose a default tag and that will be latest  ,, so it will go to d ngnix repository n check for what is 
called latest 

i want to deploy a web application frm my image ,,, the name is nginx, -d -p , am deploying nginx on port 9000 frm my host port n the container port for webserver like
nginx is port 80 and the image is nginx 

docker run --name nginx  -d -p 9000:80    nginx  

now , docker images to knw if we v nginx in our env bt we dnt 
####we wnt to deploy nginx container and we nid the image  .. docker run --name nginx  -d -p 9000:80 nginx   
1.28.25 if we dnt write the tag of the image as we didnt, it wil choose a default tag and that will be latest  ,, so it will go to d ngnix repository n check for what is 
called latest 
now its saying unable to find ngnix locally, so its pulling it frm the ngnix lib in docker hub 
##### now if i run docker ps  ,,, ngninx is running 



       ACCESS MY APPLICATION
to access my aplications online 
http://3.22.217.29:80/tesla/
   http://3.22.217.29:8080/tesla/
   http://3.22.217.29:8000/tesla/
   http://3.22.217.29:9000 

also i v to open the the specific ports on my SG to be able to acceess the appl onl


1.47.00           DOCKER REGISTRY
with the use docker Registry : how do we deploy ngnix when we dnt v the docker image ,, the nginx image was pulled frm the docker registry
Docker Registry: this is where we can ship docker images.. examples:
1. DockerHub public [80% usage]
2. DTR 
3. AmazonECR 
4. Nexus/
5. JFrog



 1.39.00                      DOCKERHUB.io 
TO CREATE REPOSITORY & PUSH IMAGES
                              
developers commit their code in github , while in docker they mostly use docker hub

dockerhub.io  ... docker is the worlds easiest way to create mange and deliver your teams conatiner applications 
you can Create an account and a repository or jst cm here to explore 

1:39:00 with the help of the repository u can push images to therepository
docker push markwellams/tesla-web-app:tagname

with the help of my github account ders a lot i can do when it comes to managing ....

1:42 we v a build server,with the ssrver we executing mvn package, creating package , we ar also building images  using docker file, docker build n once dat is done we
can distribute these images , we can use dockerhub or nexus ,or amazon ecr or jfrog to distribute the images .. these images are push into the image registry and frm
the registery a lot can be made to happen ,, we can pull the images and deploy appls in any enev, therfore ,we can pull the images for deployment, docker pull to pull
d image n docker run to deploy the application, in the deployment server we v the pull n run and dats where deployment is taking place and this can take place in
multiple env like dev, stage and prod,, the same image ,, we can deploy in any number of env... once they ar built these images are shared/distributed




                                        CREATE & SHARE DOCKER IMAGE

1.48:10 Ticket012:
  Create and share a docker image   

ANS; We can distribute the images we created earlier
when we run docker images, we see the images we already created
 *i bliv, we then run docker push; to push the particular image we want to share


1.49.20                                         DOCKER ARCHITECTURE
hw does the docker architec works
docker architechture:
  - docker client - is the  docker cli = The command line utility for docker   
      the  docker client/CLI has stuffs like : 
   docker build
      docker tag  ,, we can tag an image
      docker images  .,,, list images
      docker run    
  - docker Registry - Where docker images are stored and distributed    
  - docker engine==- - Use by the docker service to execute tasks  e.g when u run docker build, u ar inform the daocker engine, tk dis instruction n build a docker image
the emgnine tks the instructions n assigns tag to an image 


1.53.20             RUN CONTAINER WITH PULLED IMAGE

1) docker pull mylandmarktech/tesla:1
now we v an image  called , mylandmarktech/tesla:1
2) wit the image we v pulled in our deployment evnv, we can run a container wit the image ,,to delete previous containers .... docker rm -f (container name)
 ***docker run --name containerName -d -p hostPort:containerPort image:tag 
 docker run --name myapp -d -p 7000:8080  mylandmarktech/tesla:1 
 docker run --name app   -d -p 8080:8080  teslaimage:1
 docker run --name hello -d -p 80:80    mylandmarktech/hello   ,, initially he used host port 8080 bt we cudnt access d appl bc this is an ngnix base image, so changed to 80

#### if we execute docker run and the image does nt exists like mylandmarktech/hello, if it cant find it ,it wil pull the image frm the image registry
to deploy the 3applications , i can vi deploy.sh  ,, then  sh deploy.sh
  if i run docker ps .. all the appl ar all running

http://3.22.217.29  
  curl -v 3.22.217.29:7000/tesla   =  we were getting 404 error when we tried to access it onlin bc the path to the appl is webapp nt tesla 3.22.217.29:7000/webapp   
  curl -v 3.22.217.29:8080/tesla
  curl -v 3.22.217.29:80 or curl -v 3.22.217.29

we cudnt access, the container name my apps, so i can acces the appl by run: docker exec myapp ls 
then docker exec myapp ls webapps,, n  we can see the root path  , so we must watch for the direct appl path
ROOT
docs
examples
host-manager
manager
webapp

2:08:00
when endusers try to access our appli they ar entering the host ip & host port number , if the container has its own ip address , for traffic to get to my containers/server
the host server receives the traffic n its transmiyted to the appli/conatiners so when it gets in the containers it uses the container ip address n the port number , therfor
if the container listens on port 8080 and i change it to 8000, it will nt work .. this is port forwarding , this is routed internally frm the docker deployment server
