  
LINUX , scripting, git , maven, tomat/ngnix tomcat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR BUILD, JENKINS automates the end to end process, 
AWS for cloud computing services/resources, DOCKER for containerization, KUBERNETES for 







In docker applications run as containers   
QUESTIO .. 2:27:00
is docker a replacement for tomcat
no its nt , its a newer version to deploy appl by containerizing the appl including the appl code n all its components ,, with docker u can deploy any type of appl including
python,nodejs, tomcat, docker can containerize any form of apllication



***********   SUMMARIZED FOR INTRVIEW**********************


****i bliv the short fall of tomcat is resolved by docker & the short fall of docker is resolved by k8... 

In my environment we use docker to containerize applications ie applications run as containers
Docker: Is a containerization multi-platform software use to;create, build, ship, share and deploy containerize applications 
Compared to the Traditional/Physical Deployment & Virtualized Deployment options, containers are light weight,containers starts up very fast like a cheetah n the integration is very 
easy. containers also resolved the issue of repetitive task associated with the virtualized system, eg(having to install in the dev en & also testing env ) & thats because 
Docker containers: Is a Run time instance of a docker image docker image contains everything required for an application to run create or evry tin req for appl/process to run 
(App Files (code), Dependencies, (Softwares +Libraries), ENV vars & Other Configuration files) & we are able to build images from a docker file
we have a docker file from the file we build an image from the file n the process of building the image is called containerization IE PACKAGING THE APPL with all its DEPENCIEDS IN AN IMAGE N FRM DER WE AR
ABle to run containers/ deploy applications
1:42 we v a build server,with the server we executing mvn package, creating package , we ar also building images  using docker file, for docker build n once dat is done we
can distribute these images , we can use dockerhub or nexus ,or amazon ecr or jfrog to distribute the images .. these images are push into the image registry and frm
the registery a lot can be made to happen ,, we can pull the images and deploy appls in any enev, therfore ,we can pull the images for deployment, docker pull to pull
d image n docker run to deploy the application, in the deployment server we v the pull n run and dats where deployment is taking place and this can take place in
multiple env like dev, stage and prod,, the same image ,, we can deploy in any number of env... once they ar built these images are shared/distributed



*************** END**********************


  Is a containerization multi-platform software use to; create, build, ship, share and deploy containerize applications  
Docker is developed in Go Lang/Go Language.

O.S --> Cross Platform (Docker can be installed in any O.S)
        Docker Can Be Installed on Linux, Windows OS, macOS  
        Desktops as well as servers.

Docker is available in 2 Editions:

 1) Docker CE: --> Community Edition (Free to use)
 2) Docker EE: --> Enterprise Edition (Commercial/Licensed)
     EE is the docker CE+ is

Linux Flavors :there are diff linux flavors ie Linux distributors we can install docker on particularly the docker Community Edition 
 CentOS
 Amazon Linux
 Red Hat   : nt for docker CE 
 Ubuntu
 Debian
 Fedora
 SUSE Linux â€¦etc
