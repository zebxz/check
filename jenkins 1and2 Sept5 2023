refer to bootcamp33 1st video  and bootcamp26 (the last paragraph)

interview question   .. : EXPLAIN YOUR JENKINS PIPELINE 
 THere were 2 explanations 







######################################################     START 



JENKINS 1&2
STAGES IN A JENKINS FILE, WHAT TYPE OF ARTIFACTORIES CAN WE CREATE IN NEXUS, HOW DO WE EXPOSE THE APPLICATION TO ENDUSERS, WHAT IS DEVOPS, WHY CONTINOUS
INTEGRATION, WHO IS A DEVOPS ENGR, WHAT IS JENKINS AUTOMATION, INSTALL JENKINS, NATURE OF APPLICATION, DEPLOY JAVA WEB APPLICATION, DEPLOYMENT INTEGRATION
STEPS




                                  START
     
we are managing java projects so we are using amven to do a build 

STAGES IN A JENKINS FILE

10:00     stage1
maven is going to be using maven repository concept  ie searcihng for dependencies in the maven central repo of central repo, it downloads the dependencies into maven server b4 it 
can do a build 

stage2 : maven clones by automation

but its not a good security measure for the dependencies to be downloaded straighnt form the internet . it is not recommnded therfore we are making use of proxy server and we can 

stage 3: test and build
configure the maven proxy repo OR maven remote repo and this is found in nexus, so we can configure our proxy in nexus. therefpre the build server doesnt talk to the internet 
directl to get dependencies rather it talks to the proxy .
the proxy is configured such that it can download/get dependencies from the internet
once our build is done we deploy in tomcat (war artifacts) in /opt/tomcat/webapps/ or in the webapps dir . so we can have webapps/teslar.war

4)
but before deploy to tomcat we are running code quality analysis 
if this is a fail it prevents deploymnet to tomcat and developers will be informed to fix it. but if its a pass the good quality software can be deployed to the client
environment.

24.24  
stage 5)  Upload artifacts/artifacts 
but before we deploy to the client we upload packages in nexus/Jgrog
we backup in nexus b4 any deployment which makes nexus a very important tool in our sdlc

stage6)
we deploy in tomcat
in the webapps dir, we can deploy multiple applications (teslar.war/app.war

stage 7)
alert notification
email/slack
once ther is a problem members of the team wil be involved

27:14  this is the pipeline process
jenkins can help to automates the end to end process



27:31          WHAT TYPE OF ARTIFACTORIES CAN WE CREATE IN NEXUS

        we can create snapshot artifactories and releases artifactories
            these artifcatories are repositories

29:00
in nexus we can create snapshot and realease artifacts
Artifacts uploaded to the snapshots artifactory/repository is clone from the dev branch
artifacts uploaded from to the release artifactory is cloned from the master branch but some company call it release branch 
ie we are ready to deploy to production


32:15
Jenkins integration : for jenkins to clone a code, it needs integrtaion from git& github
Also maven to do a build, sonarqube for code quality, nexus, tomcat , ngnix webserver

we do not recommend to deploy to one appserver/tomcat bc if the app goes down it will be a problem, therefore in our deployment we use ansible or universal code UCD deploY, to deploy to multiple servers for high availability
for high availabilty we have multiple app servers eg app server 1, app server 2, app server3 with the help of another automation tool called ansible


   HOW DO WE EXPOSE THE APPLICATION TO ENDUSERS

eg we have 10m users therfore, we are use a webserver software ngnix or httpd with the help of the software , traffic from the endusers do not go directly to the application,
therforeform the as security measures, the traffic is routed via the webserver, it listens to the traffic form the endusers on port 80 or 443

36:40 
tomcate litens on port 8080, if the 1st tomact is on 10.05 and the 2nd is on 10.0.9 bc we can change the port of our tomcat in the frontend of ngnix it listens on port:80 &
in the backend we have to list all our tomcat ports
haven configured ngnix,  the webserver also , it also acts as a load balancer, so when it receives traffic from the 10m users, it routes the traffic based on our configuration,
41.26 using  difftype of algorithms, including round robbing, the most common is round robbing.
the integration with webserver is kind of independent, it doesnt necessarily depend on jenkins, its not 
41:00 part of the uatomation, the automation is just to help us deploy the application . once the application is deployed , we introduce a webserver to expose the 
application to endusers



jenkins  commute with Git and Github

                                 !  webserver
                                 !ngnix/httpd
                                 !  frontend :80
                        80       ! backend:
                        443      ! 10.0.0.5:8080
                                 ! 10:0;0;9:8080
                                 ! 10.0.0.8:8080





44:15     youa re a build and release enggr if you are able to deploy to tomact 
if you are able to carry out the automation where everything is configured to be able to deploy to tomcat. not even to deploy to tomcat, if you are able to upload artifacts to 
nexus, you are a build and release engr or CI, continous integration which falls under build and release engr which means you are a build and release engr


      43:00             WHAT IS  DEVOPS

     Its not (just) tools      eg maven is not equal to devops
 git is not equals to devops
 thefore, devops is the never ending process of continous improvement 
for eg it includes continous integration, continous development, continous testing, continous deployment and continous monitoring
thats what devops is all about 


                             WHY CONTINOUS INTEGRATION
continous integration helps in the early detection of bugs, helps in determining code-break, enables continous deployment, enables automated testing, reduce risk of longer time consuming project, increases the quality of software via 
43.24 continous code quality 


when developers comit their code thers a build, unit testing is done, integration testing is done and thats our CI pipline, once that is performed, (2nd part) we can now deploy the appl into production, so this entire process if it is
automated the first part is the CI proces and the 2nd is the CD process.
  (we are able to automate the task)
continous integration ensures continous deployment such that wherever our CI job succeeds we are going to trigger what is called cd jobs, cd is all baout continous delivery/
deployment 

   47:30                  
                jenkins      CI = continous integration
                 ci/cd        CD = continous delivery
                              CD = Ccontinous deployment


48.30  Ci pipeline


49:00                                   CD = Continous Delivery

       code            build        staging          MANUAL
     gitgithub     >>>>  test  >>>>> QA/UAT   >>>>   APPROVAL   >>>>>> PRODUCTION


                                   CD = Continous Deployment

        code            build        staging          
     gitgithub     >>>>  test  >>>>> QA/UAT   >>>>   AUTO  >>>>>> PRODUCTION
 

       CONTIONOUS DELIVERY
52:27 when ther is namual approval it falls under continous delivery

CONTIONUS DEPLOYMENT
 when it is automated

53.45 CONTINOUS INTGRATION
the process of deploying this to the staging environment is continous integration 


   Developers commit code using git& github once thers a commit we want to build, after build its testing then we deploy to a test environment, eithr to the staging env or 
QA or user acceptance testing from there we deploy to production bt before deployment we need to perform additional testing, the process of additional testing can be manual 
or automated, it its manual it could include integration testing and so on.
mauual testing implies thers a manual approval, maual gate somebpdy need to maullay approve and say the job done, its good, take it to the market and mauual approval is 
called continous delivery but when its automated its continous deployment and the process of deploying this to the staging environment is continous integration 


                     WHO IS A DEVOPS ENGR

56:30  
 A devOPS ENGR IS A subject matter expert bc he has subskills form all thses guys, he sits in the middle and connects with all these guys


         CODE                               PLAN                                MONITOR 


OPERATE                            D....... E......V..... O......P......S            DEPLOY



                  RELEASE                TEST                            BUILD


 The operation team that is configuring the entire infrastructure, they ensure all servers are up and running 



54:13  Git & Github 
what do you mean github is a source code manager

54.54
WHAT is github
it is a web based hosting service for version control using git

54.54 in pdf note
who is devops engr
devops engr is not a singular role or a type of developer or engineer and doesnt evn neccessitate any particular technical skills
instead a devops engr is a talented engr or developer with a certain subset of business, technical , organiztional and interpersonl skills 





      

    Jenkins integration with:
   Git/Github  
   maven  
   Sonarqube  
   nexus  
   tomcat  
   nginx webserver  




56:27

     JENKINS IS An automation tool
its an open source continous integration (CI) Tool within in java



                                                 WHAT IS JENKINS AUTOMATION  ??
 
What is Jenkins automating ?
  
How do you use Jenkins for CI/CD automation ?
In Landmark, we manage federated JAVA based web & enterprise applications
(web.ear) for Fintech Clients/ DOD/ E-commerce.
We also manage a few python, NodeJs and .net web applications

FinTech = Financial Technology : 

Financial Technology can perform the following;
1. payment Gateways   
2. account creation 
3. credit management 
2. etc. 

1:00 
FinTech = Financial Technology can be use by any company.  
POS Machine =   
  Banks     = TD / RBC / BOA / CHASE / Barclays / UBA / Ecobank / BICEC
  Insurance = STATEFARM, belair, Alstate/BeneficialLife 

  Payment Gateways = paypal, visa, master, interac, 
                     pushpay, cashapp, zelle, mobileMoney  

  E-commerce = amazon, ebay, alibaba, jumia, facebook MarketPlace 

  Telecoms  = MTN, Vadofone, Glo, verizon, tmobile, at&t

  Health care = NIS, NIH, 

  Retail = Walmart, cotsco, tesco, 

  Airlines = AA, UA, BA, KLM, AC, westJet, emirates, airpeace, camairco

  sports = FIFA, UEFA, CAF, FECAFOOT, NBA, UFC, ETC.
  
  Governments = DOD, IRS, CRA, FIRS , 
  
  betting = LOTTO, 1XBET, 

  Oil & Gas = shell, total, BP, NNPC 
  
  Crypto = coinbase, FTX, bitcoin

  over 95% of companies uses FinTech today =
  
  Taxi =  uber, Lyft, yango, bolt, swift    

  Food chain = pizza, ubereats, doordash, 

  IT Companies = AWS, AZURE, GCP, Landmarktech

  auto = Tesla, Toyota, Mercedes, BMW, Honda, GMC, 


  ****** FROm jenkins installation script 
always start jenkins
sudo systemctl  enable jenkins 
start



   *********** Saas ( software as a service) doesnt take much time like Iaas which requires server installation




Explain your experience as a DevOps Engineer?
I have over 6 years experience managing FinTech clients. 95%

1/2/3/4/5 =    

What is the difference b/w github and nexus??       They are both softwares 
  - infrastructure difference 
      - GITHUB is a SaaS tool ---  server Installation NOT required    
      - Nexus is an IaaS tool ---  server Installation required        
  - use cases:
      - GITHUB IS A SCM  
      - Nexus is an Artifactory Repository 

  - Vendor:
      - GITHUB = Microsoft 
      - Nexus  = Sonatype Nexus    

******* but github is a software as a service while Nexus is an infrastructure as a service, Nexus needs an infrastructure to install nexus software 


1;14:54   Jenkins can be installed in multiple platforms 
linux, windows, MacOs, Solaris

Jenkins, is an open source Continuous Integration (ci/cd)
tool written in Java. 
Jenkins can be installed in Multiple Platforms:  
  Linux 
  Windows 
  macOS 
  Solaris 


***** not all software can be installed on all platform eg Ansible 
ansible  can be installed in Linux Platforms ONLY  : 



Explain your EXPERIENCE in open source Technologies?? :
  Linux OS, maven, tomcat, sonarQube, Nexus, Nginx, Git, GitHub  




What is the difference b/w Sonarqube and SonarCloud??   
  - infrastructure difference 
      - SonarCloud is a SaaS tool ---  server Installation NOT required    
      - Sonarqube is an IaaS tool ---  server Installation required   



Explain your experience in SaaS solutions? 
   = Github, SonarCloud, 






IQ: Explain you EXPERIENCE in applying Jenkins?? 
Ticket001:
Install Jenkins in redhat9 server (ec2 instance in aws)
   https://github.com/LandmakTechnology/package-management
   https://www.jenkins.io/doc/book/installing/   :
   www.jenkins.io                             **********    the website of jenkins , this is the official document for jenkins 
   https://www.jenkins.io/doc/book/installing/linux/

Resource2: where can i go to either i can go to the company documentation



1:37:34     *********  jenkins installation script  (jenkins-Redhat-install.sh)
  ***jenkins 6*****  jenkins default user is jenkins


sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade
# Add required dependencies for the jenkins package
sudo yum install java-17-openjdk
sudo yum install jenkins
sudo systemctl daemon-reload

jk.sh  
==================
#!/bin/bash
# Author: Prof Legah
# date: 25/08/2020
# Installing Jenkins on RHEL 7/8, CentOS 7/8 or Amazon Linux OS
# You can execute this script as user-data when launching your EC2 VM.
sudo timedatectl set-timezone America/New_York
sudo hostnamectl set-hostname jenkins
sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade
# Add required dependencies for the jenkins package
sudo yum install java-11-openjdk
sudo yum install jenkins
sudo systemctl daemon-reload
sudo systemctl enable jenkins
sudo systemctl start jenkins
sudo systemctl status jenkins
echo "echo of jenkins installation"
sudo su - ec2-user

https://github.com/LandmakTechnology/package-management/blob/master/JENKINS-INSTALLATION/jenkins-redhat-install.sh

public-ip:  34.219.46.160   
Jenkins portNumber: 8080  
34.219.46.160:8080  




  35.92.54.50


jenkins was successfully installed with a script bc we did not have to give access to another user 
  ***jenkins 6*****  jenkins default user is jenkins


After installation, to get password, to unloack jenkins :
  initial password =  /var/lib/jenkins/secrets/initialAdminPassword
 sudo cat /var/lib/jenkins/secrets/initialAdminPassword

then install suggested pluggins

====
Installation of CloudBees Jenkins: ENTERPRISE  -EE

1:22:35 Launch jenkins AWS Redhat9 medium


1:45
IQ = Have you managed Continuous Delivery and Continuous Deployment projects??
YES:
 Internal projects: In house  --> Continuous Deployment, this is automated
 External projects: Clients  ---> Continuous Delivery,  ther a gateway where the cx will need to accept that it is waht they want before it is deployed


                                         NATURE OF APPLICATION

Nature of application:
  We support critical applications for a FinTech/e-commerce CLIENTS 

DevOps/JENKINS is all about automation   

7Cs:  to take note of
   CD,t---> Continuous Development [Git/GitHub/IDEs /GitBranch/gitTag
   
   CI --> Continuous Integration [Git/GitHub/Jenkins/maven/sonarqube/nexus] 
              [Build and Release Engineering]
   
   CD --> Continuous Delivery [build=packages/artifacts-->testing/UAT--manualApproval--- prod]   but wahen it goes to auto from UAT/testing = continous deployment
   
   CD --> Continuous Deployment [build=packages/artifacts-->testing/UAT--auto--- prod]
   
   CM --> Continuous Monitoring
            https://www.tesla.com/en_ca/powerwall  
            https://www.tesla.com/en_ca/modelx

   CS --> Continuous security
   CT --> Continuous Testing 



2:03:40
click new item 
enter new item name 
click freestyle project, then ok 
after which select project name 
then configure 


                                DEPLOY JAVA WEB APPLICATION

Tesla Client:
   java web applications    
1. We have created and shared the project GitHub repo  with developers 
      https://github.com/LandmakTechnology/maven-web-application 

Ticket002:
  Create an automation ci/cd job using Jenkins and other associated tools for a FinTech  
  Java based web application.    
 project repo: https://github.com/LandmakTechnology/maven-web-application
 private project repo: https://github.com/LandmakTechnology/maven-web-app

                           INTEGRATION STEPS
 
1. Jenkins Git Integration -- 
      Ensure that Git plugins/Software is installed in the Jenkins server   
      sudo yum install git -y  


***** 1:54:29,   unable to switch user to jenkins 
his username is jenkins bc when he first ran the script , it broke 



2:03:42
first and foremost, we are creating the job  -Github                       ******* (and git pluggins in jenkins website)
2. we need Jenkins Git Integration  ie, installing git in jenkins , we need this integration to be able to clone/pull the code/application from SCM - Github
   jenkins  Github   - jenkins need to integrate with git 
      configure github login credentials in the Jenkins server:  

******** to access jenkins
        userName: legah2045               ******* SCM management: selsct git , add repo link,select add , select jenkins then enter username and the token 
        password: Admin@123  or token
        PERSONAL Access token:  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    (generated in jenkins , classic)


2:08
b. Jenkins maven Integration               * to create packages form java based web application 
      Jenkins-Dashboard--manage Jenkins ---Tools and configure --maven  

ie       Jenkins-Dashboard--manage Jenkins ---Tools -- add maven :name version >maven  3.9.4--maven  & dashboard -maven
dashboard 
project -configure-buildstep-add build-targets
version :maven 3.9.4 -invoke top- level maven -goal :clean package, then save and build . 2nd video 17:00



2:09:32  after i build, check ***    , trget has been created and if i check my CLI i see tools 


2:13               2nd video 37:00 to remove sonar integration
c. Jenkins sonarQube Integration   mvn sonar:sonar :           ******To perform code quality analysis  
----------------------------------------------  
NB: Your SonarQube server must be running 
    sudo su - sonar 
      sh /opt/sonarqube/bin/linux-x86-64/sonar.sh status
      sh /opt/sonarqube/bin/linux-x86-64/sonar.sh start 
      curl -v 34.213.64.100:9000 


    1. Edit pom.xml propertiesTAG with SonarQube server URL and login Credentials 
       in the Property TAG  
       http://34.213.64.100:9000/
         username: admin 
         password: admin 

      <Property>          * then go to jenkins server,project configure, select build stseps and add build step, then invoke top level maven, maven version 3.9.4
                                     goal :sonar :sonar,  then save and build now. then login to sonarqube server

**** why cant we create a script and give it all necessary sudo power it needs regarding changing shell so the script can run once 


******* frank used my private ip and changed the version    ( i think this was when he was helping me troubleshoot)

ii. Open required ports in Jenkins server to allow traffic from jenkins server
         port 9000 should be open in the firewall/security group
  or Install and configure JaCoCo plugin in Jenkins UI:

d) Jenkins Nexus Integration;  mvn deploy:
Upload build artifacts:
  Jenkins nexus  Integration
E) Jenkins tomcat Integration 



***** he created one security group and leave all PCES open, so he can use it to create all server 









