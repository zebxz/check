
27:14  this is the pipeline process
jenkins automates the end to end process




                                  START
     
we are managing java projects so we are using amven to do a build 

10:00     stage1
maven is going to be using maven repository concept  ie searcihng for dependencies in the maven central repo of central repo, it downloads the dependencies into maven server b4 it 
can do a build 

stage2 : maven clones by automation

but its not a good security measure for the dependencies to be downloaded straighnt form the internet . it is not recommnded therfore we are making use of proxy server and we can 

stage 3: test and build
configure the maven proxy repo OR maven remote repo and this is found in nexus, so we can configure our proxy in nexus. therefpre the build server doesnt talk to the internet 
directl to get dependencies rather it talks to the proxy .
the proxy is configured such that it can download/get dependencies from the internet
once our build is done we deploy in tomcat (war artifacts) in /opt/tomcat/webapps/ or in the webapps dir . so we can have webapps/teslar.war

4)
but before deploy to tomcat we are running code quality analysis 
if this is a fail it prevents deploymnet to tomcat and developers will be informed to fix it. but if its a pass the good quality software can be deployed to the client
environment.


stage 5)
but before we deploy to the client we upload packages in nexus/Jgrog

stage6)
we deploy in tomcat

29:00
in nexus we can create snapshot and realease artifacts
Artifacts uploaded to the snapshots artifactory/repository is clone from the dev branch
artifacts uploaded from to the release artifactory is cloned from the master branch but some company call it release branch 
ie we are ready to deploy to production


32:15
Jenkins integration : for jenkins to clone a code, it needs integrtaion from git& github
Also maven, sonarqube for code quality, nexus, tomcat , ngnix webserver

we do not recommend to one appserver/tomcat, therefore in our deployment we use ansible or universal code UCD deploY, to deploy to multiple servers for high availability


   HOW DO WE EXPOSE THE APPLICATION TO ENDUSERS

eg we have 10m users therfore, we are use a webserver software ngnix or httpd with the help of the software , traffic from the endusers do not go directly to the application,
therforeform the as security measures, the traffic is routed via the webserver, it listens to the traffic form the endusers on port 80 or 443

36:40 
tomcate litens on port 8080, if the 1st tomact is on 10.05 and the 2nd is on 10.0.9 bc we can change the port of our tomcat in the frontend of ngnix it listens on port:80 &
in the backend we have to list all our tomcat ports
haven configured ngnix,  the webserver also , it also acts as a load balancer, so when it receives traffic from the 10m users, it routes the traffic based on our configuration,
 using  difftype of algorithms, including round robbing, the most common is round robbing.
the integration with webserver is kind of independent, it doesnt necessarily depend on jenkins, its not 

41:00 part of the uatomation, the automation is just to help us deploy the application . once the application is deployed , we introduce a webserver to expose the 
application to endusers



jenkins  commute with Git and Github

                                 !  webserver
                                 !ngnix/httpd
                                 !  frontend :80
                        80       ! backend:
                        443      ! 10.0.0.5:8080
                                 ! 10:0;0;9:8080
                                 ! 10.0.0.8:8080












