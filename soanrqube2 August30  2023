
56:30
************* before we deploy we make sure it is backedup in artifacts 



8.09
what does sonarqube use for the quality analysis 
quality profile for java, for jsp; xml, sonar way

meaning the developers wrote code in java, jsp and xml and code quality analysis has been executed



    KEY TERMS OF CODE QUALITY ANALYSIS TO NOTE 

Sonar Report depends on:
1) Rules 
2) Quality profile 
3)  Quality gates


               DIFF PROJECTS HAVE DIFF RULES
Rules are codes that have been defined to identify specific issues 
eg
Rules can identify if theres a bug in the code or code smell or duplicate lines
Rules are setting desired expectations , some rules are created by default and we can create customize rules by creating quality profiles and attach rules to them 


******** To set rules click on filter profiles by (then in set for eg java we can also change for jsp &xml)
then click create
Then for each rule click activate to set severity rule

i created a quality profile called telsa IQ & activated some rules against our project


2) Quality profiles are set of rules that we can use to achieve some specific quality threshold when it comes to quality software using sonar

**** A meeting is held where the diff members of the team will decide and identify the diff rules that should be applied against our projects


QUALITY GATES
with quality gates we can set conditions which means that for the software to be classified as a good software it must pass these condidtions
eg
if our coverage quality is 90% and there are 10written lines of codes, it means developer should test 9lines out of the 10lines
Duplicated lines: if duplicates exceeds 5%, sonarqube will fail the check
if the bug is greater than 2 then theres a problem
unit test success: if the number of test that passes is more than 95% we are ok


26:00   To assign admin priviledges
33:40     To use token instaed of PW

44:40 for code quality there are other tools but for the sonarqube family thers:
sonacloud & sonarqube


with sonarqube you need a server 
sonarqube = Iaas (infrastructure as a server)


with sonarcloud you dont need to configure a server, its like github, no server needed
sonarcloud = its called SaaS (https://does.sonarcloud.io
sonarcloud is an example of a software as service, all you have to do is create an account & start performing static code analysis



                           WHAT HAVE YOU DONE THAT YOU ARE PROUD OF 


41:55
some  of our developers are writing code without intergrity analysis tool to check for code quality, so code quality wasnt integrated in the project so in our review meeting 
i recommended that inorder to avoid a lot of bugs in the code and a lot of roll back  in deployment, we need to add code quality in our pipeline 
i adviced to use sonarqube and we had some working sessions where i was able to school other members of our team on how useful sonarqube will be once integrated in our
project and thats how it was applied and when it was applied initially developers were not happy because they had to do a lot of fixes whenevr the committed poor quality code
but eventually developers became so happy because they are very proud of their job.



i worked in a project but no code quality was been integrated in the project and i observed that we were having a lot issues because whenevr developers commit their code &
the code is developed to production we were having a lot of failures, code breaks and bugs and we had to always rollback to fix issues 
i had adviced that we should add a tool to check for code quality and in the process i recommended sonarqube, i had working sessions with the team where in general training
was done and i was priviledged to be the one teaching members of our team on how to use sonarqube and that happened effectively but initially developers were not happy. 


 DIAGRAM
                                                              Email Alerts
                                                            Slack notification
                                                                   ^
                                                                   ^
                                                                   ^
                                                                   ^
                                                                   ^
                                                                   ^
                                                                   ^
First stage:                                                       !   
                                 2)                             JENKINS                      Test/build              3) Mvaven Build , mvn package (teslar.war)                           
   Developers               SCM/Github   >>>>>>>>>>>>>>>>     AUTOMATION                  >>>>>>>>>>>>>>
1) COMMIT/PUSHES   >>>>     Repo/Tesla                         JENKINS                     code quality              4)  code quality
                              Src                             AUTOMATION                  >>>>>>>>>>>>>>>                 analysis
                             Junittestcases                                                   anlaysis                sonarqube   
                            pom.xml                             !       !         
                                                                !       !         !   
                                                                !       !         !
                                                  5)            !  6) Deploymnt   ! 
                                            upload artifacts    !       !         !
                                            nexus/Jfrog         !       !         !   7) Monitoring
                                        repo/tesla.war          !       !         !    NewRelic
                                                                        !         !    
                                                                       Tesla      !
                                                                    tomcat server1 !
                                                                    tomcat/JBOSS   !
                                                                                   !



developers write and comit codes to github, we will use jenkins for automation, with jenkins you are sure to automate these processes. once this is committed to github, a
new commit/version of the application for eg, jenkins will pull, so we are goin to configure an automation for between jenkins and github that automation can be configured
using pull SCM or github webhook.
once jnekins clone the version, it will communicate with another tool called maven and the use of maven is to create packages before the packages are deployed jenkins is 
comunicating with sonarqube/ sonarcloud for code quality to check if the software written by developers is good enough for deployment .
if code quality analysis results to a pass, it means the application can be deployed to an app server which can be running on tomcat or JBOSS ie our client environment.

56:30
************* before we deploy we make sure it is backedup in artifacts 


we need to create a backup for our artifacts so that if in the process of deploying tesla there happens to be a failure our backup system is called nexus or Jfrog and our 
artifacts will be bcakedup here, so we are going to have repositories and and inside the repo eg, we will have teslar.war
there should be a monitoring system to monitor our system. 
therfore, jenkins will connect with a notifier so we are configuring a notification called newRelic . if there is a problem an alert will be triggerred that will send out 
email notification so members of the team will be notified that something is going wrong 
jenins acts as a distributor.


                         BENEFITS OF SONARQUBE OVER SONARCLOUD







2:31:24    nexus
 we can decide that 25rules - have to be set for our quality profiles diff between code quality and code coverage
2:37:40 
code quality is the umbrella that code coverage comes under
code quality means that developers should write good software, should take their time in writing their codes and ensure the SOftware meets all our quality expectations and
code coverage is part of code quality and it means asking what is the proportion of unittestcases written by developers 
eg
10lines of code means they should write 10unit test cases.









