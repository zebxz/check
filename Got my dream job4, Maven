LINUX , scripting, git , maven, tomat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR TEST & BUILD, TOMCAT for deployment, 




MAVEN BUILD TOOL, WHAT IS YOUR TASK AS A DEVOPS ENGR ,WHAT DOES BUILD TOOLS ACHIEVED??, WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?, WHAT are the diffERENT
BUILD TOOLS FOR EACH OF THE PROGRAMMING LANGUAGE, WHAT IS EXPECTED FORM DEVELOPERS, TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS, TO AUTOMATE TESTING WE ARE GOIN TO ADVICE 
DEVELOPERS, DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING, MAVEN BUILD TOOLS,  INTERVIEW QUESTIONS, WHAT IS THE DIFFERENCE BTW THE 2 FILES ,MAVEN INSTALLATION,
PREREQUISITE, BUILD APPS, MHD, THERE ARE 3 CATEGORIES OF APPLICTAION , BUILDING, WHERE DEPENDENCIES ARE FOUND, TYPES OF DEPENDENCIES, MAVEN LIFE CYCLE, ON OUR PROJECT, 
QUESTION, SECURING THE MAVEN LOCAL REPO, TO RUN OUR APPLICATION, TO SET OUR TIME ZONE, HOW DO WE KNOW THE DEPENDENCIES TO DOWNLOAD , TO SEE FILES IN BIN



***** session with engr armstrong , think he was helping me troubleshoot tomcat 

          WHY DO WE START TOMCAT BUT NOT MAVEN 

We start tomcat because its a software that is accessible in the internet/browser and it has to be accessible because customers need to utilize the apps in tomcat server
but maven is a build tool, nothing is coming in or going out , maven doesnt listen to/on any port . it can do builds, change codes from machine readable to human readable
maven is not accessible on the internet , it uses just port 22and our server is ready to build.

we also access sonar qube, jenkins on the internet/browser because people need to see that ecerything that is required for the code is successful





  MAVEN BUILD TOOLS:
to download:   https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)


MAVEN = is an open source Java BASED Build  tool
        It was originally developed in java for java codes 
        The vendor of maven is apache  
Any software can be available in three options:
Licence edition: The software has to be paid for

Free edition: 
  Software is given for free BUT without source code - 
  How the software was developed is not shared.

Open source edition: 
   Implies both the software and 
   the source code are freely available.      
   You can download the source code and 
   develop on the existing features



***********************************************************************************

 START
******* maven has quality gates ie checking that test cases passes before packages are created  maven2


WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
Applications are the output from softwares development


In our env, we use maven maven is an open source java based build tool
Maven is a software project management and comprehensive tool OR 
we can use maven to mg8 our project, build, reporting and documentation
it is based on the concept of a project object model (POM), maven can mg8 a projects build, repository and documentation.
its most powerful feature, is its ability to download the project dependency libraries automatically from maven central repo, maven remote repo or local repo


Build tools are used to create deployable packages eg tomcat 
these are packages that the application server/sofwares can understand

Devops process
developers write code >>>> testing>>>  build>>>> deployed >>>> monitored


 


 WHAT DOES BUILD TOOLS ACHIEVED???
used TO Create deployable packages
ie raw code + build= results in packages that the deployment servers can interprete. build simply implies creating deployable packages

programmes are deployed using programming languages including java, python, nodejs, NET, javascript etc

each of these programming language has a diff categories of build tool

12:19

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java programming language, however; we also support a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language


WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 

UNIT TESTING
the process of writing and running unit-tests-cases is called : Unit testing

TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS 
TO integrate selenium (dependency)in their environment such that these unit test cases can be easily written and run



   BUILD MEANS 

Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes.
     for this to happen, it goes through a compiling process
codes can be written in these languages: java , py
     eg
       Hello.java  -->  these are raw java codes
       hello.py    -->   raw py code

for these codes to be converted to deployable packages there are few things that are very importnat to take note of 
this is goin through compilation so we need a compiler to compile codes

We need a compiler to compile java codes:
  java software is required for compiling java codes.
  hello.java -- print("Hello Engineers")   can be understood in human language bc its written in human readable format but it cant be understood by machines ( we are 
running the codes on some computer system) the jvf - java virtual machine cant interprete the humna readbale format

**** therfore , it is important to note that with maven,   java software is required for compiling java codes.
 once java is installed, java is the compiller , we do Javac   ( javac is the command)

eg
the file is called hello.java
when you execute the file; javac hello.java  ---> hello.class      ****** it generates hello.class  , this is a java class file


                                      WHAT IS THE DIFFERENCE BTW THE 2 FILES (hello.java & hello.class)
  hello.java ---> Human readable file  
  hello.class --> machine[JVM] readable file  [binary file = 012310123345] 

****** but for this compilation to take place, we need a compiler  - java software 




                                                      MAVEN INSTALLATION
Maven installation:
https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)
    Linux --: 
      RedHat / Ubuntu / CentOS
    Windows:
      server2012/2016/2019 
      Windows XP/7/8/10/11
    MacOS :
    Solaris:   


44:09

Ticket_maven-001 
Install Maven ****meee(software) on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

43:30
we already hv some notes in our githubwhich we can use for maven installation , package management, maven installation

WHAT CAN MAKE MVN COMMAND NOT TO RUN
1:38:39 maven also have to be installed properly for mvn command to run
ie downloaded and extracted properly
you have to determine where your maven home directory is defined with the export command
eg we defined ours in the file ; ~/.bash_profile , ****meeee** **when we copied and pasted the environmental variables
PLEASE COPY AND PASTE IT, ABOVE OR BELOW IN THE FILE, Not inbetween lines of information.
   **** we could also use a different location for eg if we use the .bashrc file.  
   ****** then we hv to refresh by running source ~/.bashrc



*** SEE MAVEN 1, FOR FULL INSTALLATION SCRIPT: https://github.com/LandmakTechnology/package-management
 Step 1 to 5



  ****53.04
STEP 1          

PREREQUISITE   = AWS Account
Then createa redhat account

we created a redhat server in Aws and on the redhat walls, we want to install maven sofware and once it is installed we can call the server our maven server
*** ITS NOT A MAVEN SERVER YET UNTIL THE MAVEN SOFTWARE IS INSTALLED in it....



STEP 2
connect to the server ie(ssh into mobaxterm using the details below) and then setup/INSTALL maven:
  publicIP = 54.204.78.6
  userName = ec2-user 
  ssh-key  = class301key.pem 
  ssh -i class301key.pem ec2-user@54.204.78.6  

****** you have to be in the in the dir where your downloaded key is and cd into the dir 

Install Java JDK 11+ and other softares (GIT, wget and tree)
# install Java JDK 11+ as a pre-requisit for maven to run.

sudo hostnamectl set-hostname maven     ****** change hostname to maven
sudo su - ec2-user                      ******  changing my shell
cd /opt
sudo yum install wget nano tree unzip git-all  -y
sudo  yum install java-21-openjdk-devel  -y
java -version
git --version


** based on our linux file structure, the "opt directory is recommended for installing packages 
            cd/opt

for our test and build, we are using maven which clone our codes and for maven to run codes the git clone has to be installed as well 
***1.01.00
why do w need git
we are trying to create our maven server bc we are using maven for test and build 
so when developers push the code, we need maven ie our build server to clone the code 
therfore the git plugging has to be installed for us to be able to run git commands 
so we are installing all of the prerequisite software java
java must be installed for maven to run

 
What is MHD ==  /opt/maven
The maven home directory is wher the maven software is extracted == /opt/maven 
and we can ls to see the content of the MHD

  Maven home directory:  /opt/maven
the directory is represented by = M2 _HOME
MHD = /opt/maven [ M2_HOME ]:

*** some companies, the home directory can be /app/maven
so if thats where the software was extracted then thats the home directory fo rmaven 
   
***** wherever you extract your maven software is your MHD 
in OUR CASE = /opt/maven               ***** ie opt is the home  for maven dir 

(in my own understanding) ie bc we had to cd into opt directory to download and isntall and the download name was changed to maven 


now we ls to see the content /composition of our maven home dir 

 [ec2-user@maven maven]$ ls
mavenHomeDir = M2_HOME = /opt/maven :
  bin --- binary files and the most impoetant file is mvn        *** 23,maven 1b, (the paths to where the dir are found in )
            
  conf  --configuration files and the most imp fie is settings.xml 
          
  lib -- jar files and libraries 
  boot  



    BUILD APPS 


Ticket_0014_build_apps :
========================
We use maven to build and manage applications for java codes  in our environment :



Generally We have THERE ARE 3 CATEGORIES OF APPLICTAION :
  stanalone applications -            ***** when a stanalone appl is created, it creates jar packages -jar [app.jar, hello.jar]
  web applications    -     war [app.war] 
  enterprise applications - ear 

hello.java:
After using maven to build the following options are possible
   hello.java --> hello.jar  [stanalone applications] 
   hello.java --> hello.war  [web applications]
   hello.java --> hello.ear  [enterprise applications]

maven: creates packages (jar, war and/OR ear)
  jar: Standalone Applications
    ebay.jar
    paypal.jar
    tesla.jar 
    *.jar  

  war: web Applications
    boa.war
    tesla.war

  ear: Enterprise Applications
    aa.ear 
    tesla.ear
    td.ear 

Archieves:
  tar files = tesla.gz.tar   
zip files = tesla.zip 
  tesla.jar  
  tesla.war  
  tesla.ear 
Based on our project we are going to create 
   multiple packages either;  jar, war or ear packages:


     BUILDING
1:36

for Build to take place we are going to be using the pom.xml
thats why they say maven uses the project model, the file is called pom.xml
 pom.xml        --- BuildScript for maven
in pom.xml it has defined the project properties, dependencies (Junit testing has to be performed


(developers should have written the source code , unit test cases and buildscript for our packages to be created (4 ds to create our packages eg mvn packages


What are we building? 
 we are creating deployable packages from java codes:
  1.  src-- source code   :
  2.  Unit-Test-Cases     : 

the unit test cases will depemd on the language ie if they are supporting a java project  they will write a 
         JAVA  --> JUnit test cases 
       if its is .Net >>>> they will write Nunit test cases ,   .Net  --> NUnit test cases 
          C++  --> CPPUnit test cases   

********* developers need to bring something serious to the table which is called Buid script

3. BuildScripts  -- pom.xml     :    (project object model)
        xml  = extensible mark-up language 
               It is a dynamic language. - why

why because :
               Tags can be created based on the user preferences , ie the user can decide to create whatever tag they want using xml 

the direct comparison which we can use is html
html = hypertext mark-up language
     it comes with pre -defined tags that cant be changed
TAGS like: h1, h2, h3, p (paragraph) , h (heading)

eg using xml : the wat the tag starts its how its going to end 
             Paul: <welcome>Welcome to Landmark</welcome>
             Mary: <tesla>Welcome to Tesla</tesla>
             Obi : <greet>Welcome to Landmark</greet>

        html = you must enter information based on predefined tags   (ie tags that already exists
               eg
                   <h1>Welcome to Landmark</h1>

   pom.xml = This is the BuildScript for maven  
             developers should define name, plugins, tags, versions,  ( your artifacts needs to be assigned versions)
             project dependencies and more in the BuildScript(pom.xml)



   ********** maven uses project ,the project object model 


Standalone Applications
Ticket_saa_tesla0014 

****After cloning the cde in the project directory
in maven we are running the mvn package command bc in maven we are building package, when we run the command it create the packages in the target directory , so we can find
the packages in the target directory 

maven has a goal called the clean rule 
== mvn clean: delete everything in the target directory
rm -rf is also an option but mvn clean is better


cd msa/
head pom.xml : this project file will include stuffs like project dependencies and Artifacts (it will be creating some artifacts)
for this project to be executed a few things are needed,
scm is in github , everything has been defined



maven 1b 40:45
******* dependencies are just what the project depends on eg the project needs to perform unit testing so all what is needed for the unit testing will be defined in the 
dependency 


Maven uses dependencies and plugins to test and create packages. 
Examples of maven dependencies 
   Selenium 
   JUNit 
   log4j
pom.xml        --- BuildScript for maven
build.gradle   --- BuildScript for gradle
pom.xml        --- BuildScript for maven......... it is written in xml language
eg on our project
cd msa/  .. the the appl we cloned from git hub and renamed
head pom.xml : this project file will include stuffs like project dependencies and Artifacts (it will be creating some artifacts)
for this project to be executed a few things are needed,
scm is in github , everything has been defined


pom = project object model      
dependencies:  are also written in pom ie xml language and all dependencies are found in the dependency tag 
repositories    **** all repositories in the repository tag
plugins:    

Repositories:
pluggins: to run the testing ( maven  1b 56:30) .. maven 1b 39:30; when maven is trying to create packages it will use these pluggin
properties:
versions:


 *** if it starts with dependency, it ends with dependency...
<dependencies>                             **** developers are doing this stuff for us for the dependency tag
      <dependency>Selenium</dependency>      *** selenium, or log4, or Junit will be used to test automation
      <dependency>log4j</dependency>
      <dependency>JUNit</dependency>
</dependencies>

we hv diff depencies in the pom.xml file, depending on the project... developers does this for us
eg for selenium <dependency>Selenium</dependency>
this is how the project file will be built up by developers
DEvelopers will identify the dependencies, plugging and properties version, all this will be defined in the pom.xml file

 


                                               WHERE DEPENCIES ARE FOUND 

==================
where are these dependencies found/located??? :
dependencies and/or are located in maven repositories
  https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/4.6.0
    
          we can have diff repository
when doing a build maven will search for pluggin and dependencies in maven local repo, if its not there, it will search in maven proxy, if its ot there, it searches in maven
central repo the dependencies could be log4j/Junit/selenium       
                                                                                                                                                       
<repositories>             **** dependencies and pluggins are found in any of these repo, maven will search for the project dependencies in any of these repo & use the repo for the project
   mavenLocalRepo         (maven server)    ****** .m2/repository = default                             
   mavenRemoteRepo         (nexus server)
   mavenProxyRepo           (nexus server apache maven )
   mavenCentralRepo         the internet    ****** https://mvnrepository.com/repos/central
</repositories>
we go to the internet to get these dependency on maven central repository


maven 1b 39:30
when maven is trying to create packages it will use these pluggin



*****1.45.58
this extract is from our file pom.xml , after we cloned the project
pom.xml
the group id              : <groupid> com.Mt </groupid>
the name of the artifact   : <version> 0.01-SNAPSHOT </version>
<packaging> jar <packaging>

<name> maven-stanalone-application </home>
<url>http://mylandmarktech.com </url>

 the information BASED ON THE EXTRACT; means that
1:46   if you create the artifact based on what developers have created for versioning 
it will be  == maven -stanalone-application-0.0.1-SNAPSHOT.jar  (stating th eversion/properties)      ****** the packaging says its a jar pakackage 



 
          **2:12:30             SECURING THE MAVEN LOCAL REPO (by creating a custom maven repo)
*** MAVEN2; WHEN WE RUN "maven install" IT BACKS UP THE Packages in the repo  *** either in the .m2 maven local repo OR the custom maven repo) 
i checked  the custom repo, the package was in it; ls /home/ec2-user/.mlr/com/ 
but it was not in  ls /home/ec2-user/.m2/com/

Securing the maven local repo:
  1. By creating a custom maven local repo  
       .m2/repository/             ***** our default repo ( if maven local repo is deleted, it is a serious problem that will cause us time and security bc our build time will increase, therfore we prevent that by securing it
     settings.xml  
to create a new maven repo in the home of ec2-user
   we can call our custom repo: .mlr
 /home/ec2-user/.mlr      *** our custom repo
ls -l /opt/maven/conf/
   sudo vi /opt/maven/conf/settings.xml               *** sudo bc root user owns the file.
  ls -l /opt/maven/conf/    shows us that settings.xml is owned by root user , the file is rw-r-r, no executory access for any other user but root


******** once we sudo vi vi /opt/maven/conf/settings.xml     ****settings.xml is in the conf dir

*****2.22.14
line 49: our local repsitory                              maven1b 1:24:50  <!--- to comment a line & the line / --> 
  the line is commented  in xml; the comment starts with  <!--- to comment a line & the line ends with  / --> 
if we write a comment in the commented line, it wil not run
so we add the custom repo outside the comment/commented line in the file: <localRepository>/home/ec2-user/.mlr</localRepository> in the file below (outside the comment )ie  <--!    -->
   *** i dnt knw why my shift button doesnt allow me move.... am nt suppose to write/paste outside the margin line
now maven will search from somewhere else when its building bc we hv changed the tag  .m2/repository  to .mylr and the build process will take more time (( we hv configured 
maven to search elsewhere because our maven local repo is no longer .m2/repository, we now hv a custom)





Maven has 3 lifecycles: 
  Clean, 
  site/swagger and 
  default
  Clean, site and default

Lifecycles      Goal(s)
----------      -----   
1)  Clean            clean  (mvn clean)
  mvn clean         delete old builds 

2) Site/Swagger       site
                  this iste is used to create java classes (byte code)
                  which can be understood by the JVM (java virtual machine)
                    app.java = 'echo DevOps is great' ***********eg, if u hv; when the "site" goal is executed it creates 
                    app.class = 012450012354   ********  'app.class" binary codes that can be understood by JVM

for eg if you have: app.java, once the "ste" goal is executed it will create "app.class" binary codes that can be understood by JVM

   ******** MAVEN HAS TO HAVE BEEN installed before we can run mvn package



    Goals:
3) default        mvn validate:
                  It will validate the project structure and resource files
               mvn compile:
                  It will compile all java classes and test classes
                  these are by code that will be used to create packages     ***** test classes are by code that is used to run the test cases
               mvn test:
                  It will run the unit test cases (JUNit)
               mvn package:
                  It will create packages in target directory 
                      eg (*.jar/*.war/*ear) app.war
               mvn install:
                  It will store the build artifacts in MAVEN LOCAL REPO
                     default location: .m2/repository
               
               mvn deploy:  NEXUS
                  It will upload the build artifacts into maven-remote-repo
                   by default it will be in nexus in our environment


the command for which maven will use to run
mvn packge
1) validate
2) compile
3) Run unit testing
4) Create the packages (jar/war/ear)

maven2
when you execute mvn package which is uploading the artifacts into the maven default repo, for this packages to be executed what happens in the background is that maven 
extends it functinality      ........... ??? incomplete statement
it uses pluggins and dependencies to do a build



principally by default, 
maven wil search for the the pluggins and dependencies in maven local repo 
1)maven local repository :.m2/repository = default, if its not here   , it will search in no.2                      ****** no.1 fastest and most secured ;
2) maven remote /proxy repository , if it is configures, if its not here, it will search in no.3
3) maven central repository (the internet)              ****** not a secured option , which takes more time in building 
     https://mvnrepository.com/repos/central


***** WHEN a package is being created (mvn package), maven will search for the pluggings in the local repo, if its not there it search in remote repo, if its not there it 
downloads the pluggins from maven central (internet) which takes more time for the buid process compared to if it had sourced the pluggins from the maven local repo

once the package is successfully created, our .m2/repository which is our maven local repo is created automatically and in the repo we can locate our dependencies

**** therfore, maven has downloaded our dependencies from maven central and has stored them in .m2/repository (our local repo) and then use the dependencies to do a build
or building for the first time
this is for situation where the mvn package is being run for the first time or situation where the maven local repo (.m2) doesnt exists.

subsequently, when mvn package is run, it doesnt need to download pluggins and dependencies from the central repo because we now have the .m2 and this will make the package
build process time lesser compared to when it had to download pluggins from the central 


** even when target is deleted, the .m2 (where we have our stored dependencies/pluggins ) remains because its owned by ec2-user and available in our server


****** our build time increases if our maven local is deleted in error




Standalone Applications
Ticket_saa_tesla0014  
===================
Requirements:
1. project repository in the SCM [GitHub / GitLab]
   https://github.com/Landmark-Technologies/maven-standalone-application       ********** our repo from our source code mgt is in github
2. We need a server with java & maven installed and configured   
3. Create a project directory in the maven/build server
    mkdir java-projects  
4. Clone the codes from github in the project directory  
   git clone https://github.com/Landmark-Technologies/maven-standalone-application         ********  this means that developers have written code and committed to github
     src/main  
     src/test

1:41:00
1) mkdir java-projects , then ll
2) cd java-projects/ (my project repository ) inside this repo developers are working on this project
now we need to clone the codes frm scm in github with the git clone command 
3)ls 
4) rename the file = mv maven-standalone-application/ msa
run the tree command = tree msa/, now we see our project 
file (pom.xml) we can see the 12 dir and 3 files , we have the pom.xml, the code ('helloword.java), the test case (hello world test.java)
developers are carrying out this task for us, they are working on this application , they hv written the code , test cases and the project pile (pom.xml)

vi pom.xml >>> in pom.xml it has defined the project properties, dependencies (Junit testing has to be performed


5) cd msa/   .. the the appl we cloned from git hub and renamed

6) ls and we see pom.xml & src      ****

7)ls src/ & we can see main & test case file 
the command for which maven will use to run
maven2
when we ls: we can see our maven web app, developers have written the project file pom.xml, but we dnt have the target file, we also hv our some file src which is very 
important bc if we are going to do a build the 2files maven is using is the pom.xml and the src

***  cont*** ON OUR PROJECT

1) mvn package - to create package
  we ls  - a new dir target has been created     **** meee** bc packages hv been created, we now hv a target dir
maven2 ;the package has been created in target dir but we are installing the packages in maven local repository
  so we have the artifacts created in the maven dir and we also have the artifacts backed up in the maven local repo
 ls target/ - in target , maven - standalone -app has been created
 mvn clean - to clean the build (the whole artifacts)
again we run : mvn package  >log      *** we want to redirect the outcome into a file called log
vi log - to check that the build, testing was successful
ls -a /home/ec2-user/ to see the maven local repository ".m2"           ******* or tail log  (58:00 maven 1b)
ls /home/ec2-user/.m2/repository              .M2/REPOSITORY IS OUR MAVEN LOCAL REPO
rm -rf /home/ec2-user/.m2/                       **** to delete our repository (.m2)
because ec2-user owns the m.2/repository
ls -a ~ to see that .m2 has been deleted
the home of any user is represented as ~" so we can replace ls -a /home/ec2-user with "ls -a ~

                ****** ENDS*******


***** maven uses plugging/dependencies in the build process, AND HOW MAVEN GETS THEM IS VERY IMP inthe real time
WHICH ARE FOUND in maven local repo=.m2/repository
/home/ec2-user = the home dir of ec2-user 
ec2-user owns the m.2/repository
ls -a/home/ec2-user can be represented as ls -a ~
because the home of any user is represented as ~


     ***2.29.44                                    HOW TO DEPLOY A STANDALONE APP/ TO RUN OUR APPLICATION/TO KNOW THE CONTENT OF OUR APPLICATION
1)ls 
src pom.xml target/      ****the package is found in the target dir
maven2 ;the package has been created in target dir but we are installing the packages in maven local repository
  so we have the artifacts created in the maven dir and we also have the artifacts backed up in the maven local repo

to deploy  = java -jar app.jar    (place holder, app.jar )   ... maven 2
2)java -jar target/maven-stanalone-application-0.0.1-SNAPSHOT.jar  **** app.jar, this is just a placeholder it can be any name you choose)
 we can see app.jar; copy/details of the application 
Hello Engineers, Welcome to Landmark Technologies DevOps Master Class. You are sudying Maven Build Tool. !! Today Date is:  Sat Aug 30 20:38:50 UTC 2025



***** to deploy java based stanalone applictaions java must be installed 
java must be installed (java here neabs java must be running)





MAVEN2

how can a specific module be built in maven-enterprise application
for example, developers have done a change in module one 

 by passing the PL flag               
mvn package -P1  for profile name 
eg
mvn package - P1 maven enterprise -web  ***** ie we want build only the maven enterprise-web package
OR
mvn package - P maven Enterprise -ear  ie we want build only the maven enterprise-EAR package


57:00
so We can use the -p flag to do a build
by changing the profile name

57:45
if there are many modules but cahnge in only one module 
we build by choosing that particular profile
by using the ? web flag

***************** ENDS***************************
         


principally by default, 
maven wil search for the the pluggins and dependencies in maven local repo 
1)maven local repository :.m2/repository = default, if its not here   , it will search in no.2                      ****** no.1 fastest and most secured ;
2) maven remote /proxy repository , if it is configures, if its not here, it will search in no.3
3) maven central repository (the internet)              ****** not a secured option , which takes more time in building 
     https://mvnrepository.com/repos/central


***** WHEN a package is being created (mvn package), maven will search for the pluggings in the local repo, if its not there it search in remote repo, if its not there it 
downloads the pluggins from maven central (internet) which takes more time for the buid process compared to if it had sourced the pluggins from the maven local repo

once the package is successfully created, our .m2/repository which is our maven local repo is created automatically and in the repo we can locate our dependencies

**** therfore, maven has downloaded our dependencies from maven central and has stored them in .m2/repository (our local repo) and then use the dependencies to do a build
or building for the first time
this is for situation where the mvn package is being run for the first time or situation where the maven local repo (.m2) doesnt exists.

subsequently, when mvn package is run, it doesnt need to download pluggins and dependencies from the central repo because we now have the .m2 and this will make the package
build process time lesser compared to when it had to download pluggins from the central 


** even when target is deleted, the .m2 (where we have our stored dependencies/pluggins ) remains because its owned by ec2-user and available in our server


****** our build time increases if our maven local is deleted in error



                                                                       (THIS IS JUST ME on why we cd into msa)
                                                                     1:43:33 
                 cd java-projects  ,  then clone the code from github, now i run tree msa, n we see we hv 12dir &3files, this is the project we are working on,we see d code,include d pom.xml d project file
                                        ( msa is maven stanalone appl)         cd msa/  & when we ls we see (src and pom.xml), now no package hv been created
                                            to create a package we run mvn package, packages created build successful and a new dir target has been created






******************************************************* MAVEN 1&2 SUMMARIZED FOR INTERVIEW********* **************************
Devops process
developers write code >>>> testing>>>  build>>>> deployed >>>> monitored
WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 
TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS 
TO integrate (the tool)selenium in their environment such that these unit test cases can be easily written and run



START
*** ITS NOT A MAVEN SERVER YET UNTIL THE MAVEN SOFTWARE IS INSTALLED in it....
***** maven2 when you execute mvn package which is uploading the artifacts into the maven default repo, for this packages to be executed what happens in the background is that maven 
extends it functinality      ........... ??? incomplete statement
it uses pluggins and dependencies to do a build
files in bin = ls /opt/maven/bin/



WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
ignore***Applications are the output from softwares development
therfore, we need a Build tool used to create deployable packages eg tomcat application
AFter commit of the codes by developers the next thing is to build
In our env, we use maven; maven is an open source java based build tool, We use maven to build and manage applications for java codes 
***ignore*** It was originally developed in java for java codes; The vendor of maven is apache
Maven is a software project management and comprehensive tool OR 
we can use maven to mg8 our project, build, reporting and documentation
*****it is based on the concept of a project object model (POM), maven can mg8 a projects build, repository and documentation.
its most powerful feature, is its ability to download the project dependency libraries automatically from maven central repo, maven remote repo or local repo

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java programming language, however; we also support a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language

Am managing federated web and enterprise micro- service applications for fintech clients 
An enterpriseapplication with over 21 modules

BUILD MEANS 
Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes. for this to happen, it goes through a compiling process
We need a compiler to compile java codes; java software is required for compiling java codes
therefore, java is a prerequisite for maven to run
Also git is required as well;
we are trying to create our maven server bc we are using maven for test and build 
so when developers push the code, we need maven ie our build server to clone the code 
therfore the git plugging has to be installed for us to be able to run git commands 
also we need a Redhat server in AWS or Gcp
1;02:00
The Maven server must have atleast 2GB of free space for maven to run
it wont run with insufficient resources eg space

maven also have to be installed properly for mvn command to run
our  Maven home directory:  /opt/maven  bc; The MHD is where the maven software is extracted  ie where we downloaded & unzipped the maven file
the directory is represented by = M2 _HOME
MHD = /opt/maven [ M2_HOME ]:
****ignore***opt dir needs root access thats why for us to download we need sudo


MAVEN has 3 lifecycles: **** Each of this life cycle has its own goal
  Clean, 
  site/swagger and 
  default

DEfault: the command for which maven will use to run
mvn packge
******** mvn package ecompasses of the other default goals ie mvn validate, mvn compile , mvn test
so its better to execute mvn package which is faster compared to running each other
1) validate
2) compile
3) Run unit testing
4) Create the packages in the target dir (jar/war/ear)

DIFF BTW ;mvn package (goal) & mvn install (goal)
 ***** mvn install is creating/generating the package in the the target dir of our project & also uploading the artifacts into the maven local/default repo OR custom repo, depending on the configuration in the settings.xml file.
WHILE 
mvn package will only create/generating the package in the the target dir of our project
                                                                                         ***online**
when you execute mvn package which is creating/generating the package in the the target dir of our project, for this packages to be executed what happens in the background is that maven 
extends it functinality      ........... ??? incomplete statement
it uses pluggins and dependencies to do a build



BUILD APPS 
maven: creates packages (jar, war and/OR ear)
1)  jar: Standalone Applications ; contains java code ONLY
app.jar  
***** to deploy java based stanalone applictaions java must be installed 
java must be installed (java here neabs java must be running)
HOW ARE JAVA BASED STANALONE applications deployed??
ANS; 
java -jar app.jar
eg; java -jar target/maven-stanalone-application-0.0.1-SNAPSHOT.jar    ***** app.jar, this is just a placeholder it can be any name you choose)


2) war: web Applications  ;contains a Single module, ie java code + web content
    boa.war
  examples of web applications (whatever it is it must end with war)
WE ARE going to look at tomcat & JBOSS when we are talkingabout web applications 
 JAVA BASED web applications are deployed in Tomcat/JBOSS servers
if you want to deploy a maven web application, we need a maven software installed like tomcat/OR JBOSS

***** JAVA BASED web applications are deployed in Tomcat/JBOSS servers
if you want to deploy a maven web application, we need a maven software installed like tomcat/OR JBOSS


3) ear: Enterprise Applications  :     Multiple Modules ie Java code + web content, Ear =  war(s) + jar(s)
    aa.ear 
eg
 Banking applications   ; Modules: for: login / for     accountCreation /  for    moneyTransfer 
    maven-web-application.war
    maven-enterprise-application.ear
therefore; if you create Enter Application by default it will come with many modules
Am managing federated web and enterprise micro- service applications for fintech clients 
An enterprise application with over 21 modules

******** How are java based enterprise applications deployed??
enterprise application are deployed in JBOSS servers


IQ: how can a specific module be built in maven-enterprise application
for example, developers have done a change in module one 

 by passing the PL flag               
mvn package -P1  for profile name 
eg
mvn package - P1 maven enterprise -web  ***** ie we want build only the maven enterprise-web package




******* dependencies are just what the project depends on eg the project needs to perform unit testing so all what is needed for the unit testing will be defined in the 
dependency 
Maven uses dependencies and plugins to test and create packages. 


maven2; if we are going to do a build the 2files maven is using is the pom.xml and the src
our project has a pom.xml file & we hv diff dependencies in it depending on the project... developers decides/does this for us
for maven to know which package to create its a function of our project; when we vi pom.xml we can see the archive file/packing indication? jar OR war OR ear

EXAMPLES OF MAVEN DEPENDENCIES:    Selenium ,JUNit, log4j
 *** if it starts with dependency, it ends with dependency...
eg for selenium <dependency>Selenium</dependency>
this is how the project file will be built up by developers
DEvelopers will identify the dependencies, plugging and properties version, all this will be defined in the pom.xml file

dependencies and/or are located in maven repositories
  https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/4.6.0
    
          we can have diff repository
    in the maven server we have the maven local repo
when doing a build maven will search for pluggin and dependencies in maven local repo, if its not there, it will search in maven proxy, if its ot there, it searches in maven
central repo the dependencies could be log4j/Junit/selenium       

<repositories>             **** dependencies and pluggins are found in any of these repo, maven will search for the project dependencies in any of these repo & use the repo for the project
   mavenLocalRepo         (maven server)    ****** .m2/repository = default                             
   mavenRemoteRepo         (nexus server)
   mavenProxyRepo           (nexus server apache maven )
   mavenCentralRepo         the internet    ****** https://mvnrepository.com/repos/central
</repositories>
we go to the internet to get these dependency on maven central repository


principally by default, 
maven wil search for the the pluggins and dependencies in maven local repo 
1)maven local repository :.m2/repository = default, if its not here   , it will search in no.2                      ****** no.1 fastest and most secured ;
2) maven remote /proxy repository , if it is configures, if its not here, it will search in no.3
3) maven central repository (the internet)              ****** not a secured option , which takes more time in building 
     https://mvnrepository.com/repos/central

MAVEN2... if a project is taking longer than expected to execute it could mean that maven is closing from the internet and that takes longer time naturally

***** WHEN a package is being created (mvn package), maven will search for the pluggings in the local repo, if its not there it search in remote repo, if its not there it 
downloads the pluggins from maven central (internet) which takes more time for the buid process compared to if it had sourced the pluggins from the maven local repo

once the package is successfully created, our .m2/repository which is our maven local repo is created automatically and in the repo we can locate our dependencies

**** therfore, maven has downloaded our dependencies from maven central and has stored them in .m2/repository (our local repo) and then use the dependencies to do a build
or building for the first time
this is for situation where the mvn package is being run for the first time or situation where the maven local repo (.m2) doesnt exists.

subsequently, when mvn package is run, it doesnt need to download pluggins and dependencies from the central repo because we now have the .m2 and this will make the package
build process time lesser compared to when it had to download pluggins from the central 


** even when target is deleted, the .m2 (where we have our stored dependencies/pluggins ) remains because its owned by ec2-user and available in our server

****** our build time increases if our maven local is deleted in error



    *************END****************************








    




