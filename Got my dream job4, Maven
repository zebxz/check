LINUX , scripting, git , maven, tomat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR TEST & BUILD




MAVEN BUILD TOOL, WHAT IS YOUR TASK AS A DEVOPS ENGR ,WHAT DOES BUILD TOOLS ACHIEVED??, WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?, WHAT are the diffERENT
BUILD TOOLS FOR EACH OF THE PROGRAMMING LANGUAGE, WHAT IS EXPECTED FORM DEVELOPERS, TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS, TO AUTOMATE TESTING WE ARE GOIN TO ADVICE 
DEVELOPERS, DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING, MAVEN BUILD TOOLS,  INTERVIEW QUESTIONS, WHAT IS THE DIFFERENCE BTW THE 2 FILES ,MAVEN INSTALLATION,
PREREQUISITE, BUILD APPS, MHD, THERE ARE 3 CATEGORIES OF APPLICTAION , BUILDING, WHERE DEPENDENCIES ARE FOUND, TYPES OF DEPENDENCIES, MAVEN LIFE CYCLE, ON OUR PROJECT, 
QUESTION, SECURING THE MAVEN LOCAL REPO, TO RUN OUR APPLICATION, TO SET OUR TIME ZONE, HOW DO WE KNOW THE DEPENDENCIES TO DOWNLOAD , TO SEE FILES IN BIN



***** session with engr armstrong , think he was helping me troubleshoot tomcat 

          WHY DO WE START TOMCAT BUT NOT MAVEN 

We start tomcat because its a software that is accessible in the internet/browser and it has to be accessible because customers need to utilize the apps in tomcat server
but maven is a build tool, nothing is coming in or going out , maven doesnt listen to/on any port . it can do builds, change codes from machine readable to human readable
maven is not accessible on the internet , it uses just port 22and our server is ready to build.

we also access sonar qube, jenkins on the internet/browser because people need to see that ecerything that is required for the code is successful





  MAVEN BUILD TOOLS:
to download:   https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)


MAVEN = is an open source Java BASED Build  tool
        It was originally developed in java for java codes 
        The vendor of maven is apache  
Any software can be available in three options:
Licence edition: The software has to be paid for

Free edition: 
  Software is given for free BUT without source code - 
  How the software was developed is not shared.

Open source edition: 
   Implies both the software and 
   the source code are freely available.      
   You can download the source code and 
   develop on the existing features


***********************************************************************************

 START

WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
Applications are the output from softwares development


In our env, we use maven maven is an open source java based build tool
Maven is a software project management and comprehensive tool OR 
we can use maven to mg8 our project, build, reporting and documentation
it is based on the concept of a project object model (POM), maven can mg8 a projects build, repository and documentation.
its most powerful feature, is its ability to download the project dependency libraries automatically from maven central repo, maven remote repo or local repo


Build tools are used to create deployable packages eg tomcat 
these are packages that the application server/sofwares can understand

Devops process
developers write code >>>> testing>>>  build>>>> deployed >>>> monitored


 


 WHAT DOES BUILD TOOLS ACHIEVED???
used TO Create deployable packages
ie raw code + build= results in packages that the deployment servers can interprete. build simply implies creating deployable packages

programmes are deployed using programming languages including java, python, nodejs, NET, javascript etc

each of these programming language has a diff categories of build tool

12:19

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java programming language, however; we also support a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language


WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 

UNIT TESTING
the process of writing and running unit-tests-cases is called : Unit testing

TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS 
TO integrate selenium (dependency)in their environment such that these unit test cases can be easily written and run



   BUILD MEANS 

Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes.
     for this to happen, it goes through a compiling process
codes can be written in these languages: java , py
     eg
       Hello.java  -->  these are raw java codes
       hello.py    -->   raw py code

for these codes to be converted to deployable packages there are few things that are very importnat to take note of 
this is goin through compilation so we need a compiler to compile codes

We need a compiler to compile java codes:
  java software is required for compiling java codes.
  hello.java -- print("Hello Engineers")   can be understood in human language bc its written in human readable format but it cant be understood by machines ( we are 
running the codes on some computer system) the jvf - java virtual machine cant interprete the humna readbale format

**** therfore , it is important to note that with maven,   java software is required for compiling java codes.
 once java is installed, java is the compiller , we do Javac   ( javac is the command)

eg
the file is called hello.java
when you execute the file; javac hello.java  ---> hello.class      ****** it generates hello.class  , this is a java class file


                                      WHAT IS THE DIFFERENCE BTW THE 2 FILES (hello.java & hello.class)
  hello.java ---> Human readable file  
  hello.class --> machine[JVM] readable file  [binary file = 012310123345] 

****** but for this compilation to take place, we need a compiler  - java software 




                                                      MAVEN INSTALLATION
Maven installation:
https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)
    Linux --: 
      RedHat / Ubuntu / CentOS
    Windows:
      server2012/2016/2019 
      Windows XP/7/8/10/11
    MacOS :
    Solaris:   


44:09

Ticket_maven-001 
Install Maven on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

43:30
we already hv some notes in our githubwhich we can use for maven installation , package management, maven installation

*** SEE MAVEN 1, FOR FULL INSTALLATION SCRIPT: https://github.com/LandmakTechnology/package-management
 Step 1 to 5



  ****53.04
STEP 1          

PREREQUISITE   = AWS Account
Then createa redhat account

we created a redhat server in Aws and on the redhat walls, we want to install maven sofware and once it is installed we can call the server our maven server
*** ITS NOT A MAVEN SERVER YET UNTIL THE MAVEN SOFTWARE IS INSTALLED in it....



STEP 2
connect to the server ie(ssh into mobaxterm using the details below) and then setup/INSTALL maven:
  publicIP = 54.204.78.6
  userName = ec2-user 
  ssh-key  = class301key.pem 
  ssh -i class301key.pem ec2-user@54.204.78.6  

****** you have to be in the in the dir where your downloaded key is and cd into the dir 

Install Java JDK 11+ and other softares (GIT, wget and tree)
# install Java JDK 11+ as a pre-requisit for maven to run.

sudo hostnamectl set-hostname maven     ****** change hostname to maven
sudo su - ec2-user                      ******  changing my shell
cd /opt
sudo yum install wget nano tree unzip git-all  -y
sudo  yum install java-21-openjdk-devel  -y
java -version
git --version


** based on our linux file structure, the "opt directory is recommended for installing packages 
            cd/opt

for our test and build, we are using maven which clone our codes and for maven to run codes the git clone has to be installed as well 
***1.01.00
why do w need git
we are trying to create our maven server bc we are using maven for test and build 
so when developers push the code, we need maven ie our build server to clone the code 
therfore the git plugging has to be installed for us to be able to run git commands 
so we are installing all of the prerequisite software java
java must be installed for maven to run

 
What is MHD ==  /opt/maven
The maven home directory is wher the maven software is extracted == /opt/maven 
and we can ls to see the content of the MHD

  Maven home directory:  /opt/maven
the directory is represented by = M2 _HOME
MHD = /opt/maven [ M2_HOME ]:

*** some companies, the home directory can be /app/maven
so if thats where the software was extracted then thats the home directory fo rmaven 
   
***** wherever you extract your maven software is your MHD 
in OUR CASE = /opt/maven               ***** ie opt is the home  for maven dir 

(in my own understanding) ie bc we had to cd into opt directory to download and isntall and the download name was changed to maven 


now we ls to see the content /composition of our maven home dir 

 [ec2-user@maven maven]$ ls
mavenHomeDir = M2_HOME = /opt/maven :
  bin --- binary files and the most impoetant file is mvn        *** 23,maven 1b, (the paths to where the dir are found in )
            
  conf  --configuration files and the most imp fie is settings.xml 
          
  lib -- jar files and libraries 
  boot  



    BUILD APPS 


Ticket_0014_build_apps :
========================
We use maven to build and manage applications for java codes  in our environment :



Generally We have THERE ARE 3 CATEGORIES OF APPLICTAION :
  stanalone applications -            ***** when a stanalone appl is created, it creates jar packages -jar [app.jar, hello.jar]
  web applications    -     war [app.war] 
  enterprise applications - ear 

hello.java:
After using maven to build the following options are possible
   hello.java --> hello.jar  [stanalone applications] 
   hello.java --> hello.war  [web applications]
   hello.java --> hello.ear  [enterprise applications]

maven: creates packages (jar, war and/OR ear)
  jar: Standalone Applications
    ebay.jar
    paypal.jar
    tesla.jar 
    *.jar  

  war: web Applications
    boa.war
    tesla.war

  ear: Enterprise Applications
    aa.ear 
    tesla.ear
    td.ear 

Archieves:
  tar files = tesla.gz.tar   
zip files = tesla.zip 
  tesla.jar  
  tesla.war  
  tesla.ear 


