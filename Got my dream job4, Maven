LINUX , scripting, git , maven, tomat, sonar, nexus, jenkins , aws, docker, k8, terraform, ansible, k8/helm 
In our env, we use LINUX OS for file,process,package,security mgt, GIT FOR VERSIONING, MAVEN FOR TEST & BUILD




MAVEN BUILD TOOL, WHAT IS YOUR TASK AS A DEVOPS ENGR ,WHAT DOES BUILD TOOLS ACHIEVED??, WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?, WHAT are the diffERENT
BUILD TOOLS FOR EACH OF THE PROGRAMMING LANGUAGE, WHAT IS EXPECTED FORM DEVELOPERS, TO AUTOMATE TESTING, WE ARE GOIN TO ADVICE DEVELOPERS, TO AUTOMATE TESTING WE ARE GOIN TO ADVICE 
DEVELOPERS, DEVELOPERS WRITE BOTH THE CODES AND RUN THE UNIT TESTING, MAVEN BUILD TOOLS,  INTERVIEW QUESTIONS, WHAT IS THE DIFFERENCE BTW THE 2 FILES ,MAVEN INSTALLATION,
PREREQUISITE, BUILD APPS, MHD, THERE ARE 3 CATEGORIES OF APPLICTAION , BUILDING, WHERE DEPENDENCIES ARE FOUND, TYPES OF DEPENDENCIES, MAVEN LIFE CYCLE, ON OUR PROJECT, 
QUESTION, SECURING THE MAVEN LOCAL REPO, TO RUN OUR APPLICATION, TO SET OUR TIME ZONE, HOW DO WE KNOW THE DEPENDENCIES TO DOWNLOAD , TO SEE FILES IN BIN



***** session with engr armstrong , think he was helping me troubleshoot tomcat 

          WHY DO WE START TOMCAT BUT NOT MAVEN 

We start tomcat because its a software that is accessible in the internet/browser and it has to be accessible because customers need to utilize the apps in tomcat server
but maven is a build tool, nothing is coming in or going out , maven doesnt listen to/on any port . it can do builds, change codes from machine readable to human readable
maven is not accessible on the internet , it uses just port 22and our server is ready to build.

we also access sonar qube, jenkins on the internet/browser because people need to see that ecerything that is required for the code is successful





  MAVEN BUILD TOOLS:
to download:   https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)


MAVEN = is an open source Java BASED Build  tool
        It was originally developed in java for java codes 
        The vendor of maven is apache  
Any software can be available in three options:
Licence edition: The software has to be paid for

Free edition: 
  Software is given for free BUT without source code - 
  How the software was developed is not shared.

Open source edition: 
   Implies both the software and 
   the source code are freely available.      
   You can download the source code and 
   develop on the existing features




 START

WHAT IS YOUR TASK AS A DEVOPS ENGR
as a deveops engr, our expectation is to develop, test and build, qualify the applictaion, back them up , deploy and monitor appliction
Applications are the output from softwares development


In our env, we use maven maven is an open source java based build tool
Maven is a software project management and comprehensive tool OR 
we can use maven to mg8 our project, build, reporting and documentation

Build tools are used to create deployable packages eg tomcat 
these are packages that the application server/sofwares can understand

Devops process
developers write code >>>> testing>>>  build>>>> deployed >>>> monitored


 


 WHAT DOES BUILD TOOLS ACHIEVED???
used TO Create deployable packages
ie raw code + build= results in packages that the deployment servers can interprete. build simply implies creating deployable packages

programmes are deployed using programming languages including java, python, nodejs, NET, javascript etc

each of these programming language has a diff categories of build tool

12:19

WHAT KIND OF PROJECT ARE YOU SUPPORTING IN YOUR ENVIRONMENT?
anS: we suppport java based projects or projects written in java programming language, however; we also support a few.NET, pythn and nodejs projects
we support apps written in java, nodejs by developers java, .NET, nodejs is a programming language


WHAT IS EXPECTED FORM DEVELOPERS  ???   (When they have a project)
project main composition:
we have established that when developers are writing code 3things are involved
1)source
2) unit - test- cases
3) build scripts 


   BUILD MEANS 

Build in SDLC Implies:  Software development life cycle
  creating deployable packages from raw codes.
     for this to happen, it goes through a compiling process
codes can be written in these languages: java , py
     eg
       Hello.java  -->  these are raw java codes
       hello.py    -->   raw py code

for these codes to be converted to deployable packages there are few things that are very importnat to take note of 
this is goin through compilation so we need a compiler to compile codes

We need a compiler to compile java codes:
  java software is required for compiling java codes.
  hello.java -- print("Hello Engineers")   can be understood in human language bc its written in human readable format but it cant be understood by machines ( we are 
running the codes on some computer system) the jvf - java virtual machine cant interprete the humna readbale format

**** therfore , it is important to note that with maven,   java software is required for compiling java codes.
 once java is installed, java is the compiller , we do Javac   ( javac is the command)

eg
the file is called hello.java
when you execute the file; javac hello.java  ---> hello.class      ****** it generates hello.class  , this is a java class file


                                      WHAT IS THE DIFFERENCE BTW THE 2 FILES (hello.java & hello.class)
  hello.java ---> Human readable file  
  hello.class --> machine[JVM] readable file  [binary file = 012310123345] 

****** but for this compilation to take place, we need a compiler  - java software 




                                                      MAVEN INSTALLATION
Maven installation:
https://maven.apache.org/download.cgi
  Maven can be installed in Any platform:    (OPerating system = cross platform)
    Linux --: 
      RedHat / Ubuntu / CentOS
    Windows:
      server2012/2016/2019 
      Windows XP/7/8/10/11
    MacOS :
    Solaris:   


44:09

Ticket_maven-001 
Install Maven on a RedHat Linux 9 Server  

2. Java is a pre-requisite for maven to run 
    JRE --> JAVA RUNTIME ENVIRONMENT
    JDK --> JAVA DEVELOPMENT KIT 1.8+
            JVM will also be installed      (once java is installed, this installs automatically)

43:30
we already hv some notes in our githubwhich we can use for maven installation , package management, maven installation

*** SEE MAVEN 1, FOR FULL INSTALLATION
