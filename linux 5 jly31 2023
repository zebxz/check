    CONFIGURE/SETUP YOUR SERVER FOR PASSWORD AUTHENTICATION, connecting to server with private key and password  and internally (su -)
******************    by default user's can ONLY connect to aws ec2 linux servers using ssh-private-Key
 
QUESTION:
6)   `allow users to connect to the server using their password
    ******************    by default user's can ONLY connect to aws ec2 linux servers using ssh-private-Key



Ticket078:
  1. Create user accounts for landmark and datti and verify?  :
  2. assign password to landmark and datti users?  :
  3. grant sudo access to landmark user ONLY?  :
  4. Set the expiration of datti account to 90days ?  
  5. configure/setup your server for password authentication?  
  6. connect to the server externally as landmark as landmark user using password?
  7. Lock datti's password and server access?  
  8. Create manager's group and add user landmark to it.   

solution:
  1. sudo useradd landmark   
     sudo useradd datti 
  to verify:
      id userName [ id datti && id landmark ]
      tail -4 /etc/passwd  
      grep datti /etc/passwd && grep landmark /etc/passwd  

  2.  assigning password to user accounts:
       sudo passwd userName [ sudo passwd datti  ]
       sudo passwd landmark
  3. granting sudo/admin priviledges/access  ;  
       root access is required to grant sudo access to any user  
       sudo visudo  
       sudo vi /etc/sudoers    

    [ec2-user@demo ~]$ sudo vi /etc/sudoers
    [ec2-user@demo ~]$
    [ec2-user@demo ~]$ su - landmark
    Password:
    [landmark@demo ~]$
    [landmark@demo ~]$ whoami
    landmark
    [landmark@demo ~]$ sudo adduser james

    We trust you have received the usual lecture from the local System
    Administrator. It usually boils down to these three things:

    -#1) Respect the privacy of others.
    -#2) Think before you type.
    -#3) With great power comes great responsibility.

    For security reasons, the password you type will not be visible.

      [sudo] password for landmark:
      landmark is not in the sudoers file.

      [ec2-user@demo ~]$ su - landmark
      Password:
    Last login: Mon Jul 31 20:21:10 EDT 2023 on pts/0
    [landmark@demo ~]$
    [landmark@demo ~]$ sudo adduser james
    [landmark@demo ~]$
    [landmark@demo ~]$ whoami
    landmark


  4. setting 90 days expiration for datti's account:  
       sudo chage 
       [landmark@demo ~]$ sudo chage datti
      Changing the aging information for datti
      Enter the new value, or press ENTER for the default
        Minimum Password Age [0]:
        Maximum Password Age [99999]: 90
        Last Password Change (YYYY-MM-DD) [2023-08-01]:
        Password Expiration Warning [7]:
        Password Inactive [-1]: 7
        Account Expiration Date (YYYY-MM-DD) [-1]: 2023-10-30


   

5)  allow users to connect to the server using their password        


                                     CONFIGURE/SETUP YOUR SERVER FOR PASSWORD AUTHENTICATION, 
                       this will enable me to connect to my server from an external source 
this is good in situation where 2 or more members at diff location need access to work on the same server 
once i have created account for the user and assigned passwd, i then need to configure the server to accept password so the users can hv access

 52.10.100.198   
    ssh landmark@52.10.100.198 
    ssh landmark@52.10.100.198
      Warning: Permanently added '52.10.100.198' (ED25519) to the list of known hosts.
      landmark@52.10.100.198: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).  

********** permission denied bc server has nt been configured for passwd
therefore we configure the server in no. 5 below

  5. allow users to connect to the server using their password
     by default user's can ONLY connect to aws ec2 linux servers using ssh-private-Key
     allow users to connect to the server using their password by:
      1. sudo vi /etc/ssh/sshd_config and change password authentication to yes    
      2. restart the ssh service with;
          sudo systemctl restart sshd    
  
6. To connect externally:
 ssh username@ipaddress         OR
ssh username@hostname

                                          i bliv this is (CONNECT EXTERNALLY USING SSH)
A)our external source we are using to connect:
opening a local terminal on the same mobaxterm he : *********************  Go to terminal >>>>>   open new tab   >>>>>> detach 
ssh landmark@52.10.100.198 

###  then passwd and connected


B)while            ( THE DEFAULT CONNECTION USING PRIVATE KEY )  EXTERNALLY 
*******   1;26:10
the 1st connection we have on mobaxterm:

[ec2-user@demo~] $  whoami
ec2-user                                 ********* i am connected externally as ec2-user USING THE private key , no i can internally switch to any user
[ec2-user@demo~] $  su - landmark
[landmark@demo~] $                   ***** i am connected internally as landmark



******************* THERFORE, bc i hv configured my server for password authentication anybody with the correct paswd can EXTERNALLY connect to my server by RUNNING  :
ssh landmark@52.10.100.198  (A above)
 
                                            
                                 (CONNECT EXTERNALLY WITHOUT PRIVATE KEY)
C)**** ALSO, with server configured for passwd, any user can go straight to session ,SSH, fill in ip address and username (datti), no need for 
advanced ssh seeting jst click ok then it ask for passwd to connect EXTERNALLY to server OR EXTERNALLY connect to my server right in my pwd by RUNNING :ssh landmark@52.10.100.198 
 


METHOD2:
1)sudo ed.-i"}{po¬|^[#]*passwordAuthentication[[:space]]no/c\PasswordAuthenticationyes"/etc/ssh/sshd_config
2)restart the ssh service with;
          sudo systemctl restart sshd   OR sudo service sshd restart  



  7. sudo passwd -l userName  
     sudo passwd -l datti   
     ssh datti@52.10.100.198 

  7b. unlock datti's password/account  
     sudo passwd -u userName  
     sudo passwd -u datti   
     ssh datti@52.10.100.198 

  8. Creating manager's group  
     sudo groupadd groupName 
     sudo groupadd managers 
     sudo usermod -aG groupName userName  
     sudo usermod -aG managers landmark    

    [landmark@demo ~]$ sudo groupadd managers
    [landmark@demo ~]$
    [landmark@demo ~]$ id landmark
    uid=1005(landmark) gid=1005(landmark) groups=1005(landmark)
     [landmark@demo ~]$
    [landmark@demo ~]$ sudo usermod -aG managers landmark
   [landmark@demo ~]$
   [landmark@demo ~]$ id landmark
   uid=1005(landmark) gid=1005(landmark) groups=1005(landmark),1007(managers)



Ticket080:
=========
 1. create groups for; developers, qa, and Engineers and verify.
 2. delete datti user account  
 3. Delete james user account including his home Directory    
 4. Create a user account for legah and add him to the engineers, qa and manager's groups.
 5. delete the Engineers group   
 6. List important files in userMGT   
 7. list important commands in userMGT    

Ticket080 solution:
==================

1. sudo groupadd developers 
   sudo groupadd qa 
   sudo groupadd engineers 
   cat /etc/group  

  [landmark@demo ~]$ sudo groupadd developers
  [landmark@demo ~]$
  [landmark@demo ~]$ sudo groupadd qa
  [landmark@demo ~]$ sudo groupadd engineers
  [landmark@demo ~]$
  [landmark@demo ~]$ tail -5 /etc/group
  james:x:1006:
  managers:x:1007:landmark
  developers:x:1008:
  qa:x:1009:
  engineers:x:1010:

2. deleting datti's account  
   sudo userdel userName  
   sudo userdel datti   
[landmark@demo ~]$ sudo userdel datti
[landmark@demo ~]$
[landmark@demo ~]$ id datti
id: ‘datti’: no such user

3. deleting james's user account including his home Directory  
   sudo userdel -r userName  
   sudo userdel james   

4a. creating legah's account
    sudo useradd legah 

4b: adding legah to groups  
    sudo usermod -aG managers legah  
    sudo usermod -aG engineers legah
    sudo usermod -aG qa legah
[landmark@demo ~]$ id legah
uid=1006(legah) gid=1006(legah) groups=1006(legah),1007(managers),1009(qa),1010(engineers)

5. deleting a group  
   sudo groupdel groupName
   sudo groupdel engineers
   [landmark@demo ~]$ grep engineers /etc/group
   engineers:x:1010:legah
    [landmark@demo ~]$
    [landmark@demo ~]$ sudo groupdel engineers
  [landmark@demo ~]$
  [landmark@demo ~]$ grep engineers /etc/group
  [landmark@demo ~]$
  [landmark@demo ~]$

 6. List important files in userMGT   
      /etc/passwd   = contains user's details
      /etc/shadow   = contains user's password
      /etc/group    = contains group details 
      /etc/sudoers  = Use to grant/remove sudo access   

 7. list important commands in userMGT 
      useradd 
      adduser  
      groupadd 
      userdel  
      usermod  
      groupdel  
      passwd  
      chage  
      userdel -r    
      sudo      

=======================
connecting to a user account  
stephane course  
recorded   


Ticket081:
=========






Break: 20mins 
       8:50pm EST  
userMGT, 
systemMGT  

Technology stack 








